{"version":3,"file":"static/js/main.e0c6c7c1.js","mappings":"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","sources":["../node_modules/@vkontakte/vk-bridge/src/promisifySend.ts","../node_modules/@vkontakte/vk-bridge/src/bridge.ts","../node_modules/@vkontakte/vk-bridge/src/types/data.ts","../node_modules/@vkontakte/vk-bridge/src/index.ts","../node_modules/@vkontakte/vk-bridge/src/applyMiddleware.ts","../node_modules/axios/index.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/cancel/CanceledError.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/core/AxiosError.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/defaults/index.js","../node_modules/axios/lib/defaults/transitional.js","../node_modules/axios/lib/env/data.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/normalizeHeaderName.js","../node_modules/axios/lib/helpers/null.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/helpers/parseProtocol.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/toFormData.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/utils.js","../node_modules/charenc/charenc.js","../node_modules/crypt/crypt.js","../node_modules/is-buffer/index.js","../node_modules/md5/md5.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react-fast-compare/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/svg-baker-runtime/browser-sprite.js","../node_modules/svg-baker-runtime/browser-symbol.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../node_modules/@vkontakte/vkjs/src/dom.ts","../node_modules/@vkontakte/vkjs/src/animate.ts","../node_modules/@vkontakte/vkjs/src/functions.ts","../node_modules/@vkontakte/vkjs/src/detections.ts","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@vkontakte/vkjs/src/querystring.ts","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@vkontakte/vkjs/src/IOSDetections.ts","../node_modules/@vkontakte/vkjs/src/InputUtils.ts","../node_modules/@vkontakte/vkui/src/lib/polyfills.ts","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@vkontakte/vkui/src/lib/classScopingMode.ts","../node_modules/@vkontakte/vkui/src/lib/prefixClass.ts","../node_modules/@vkontakte/vkui/src/lib/jsxRuntime.ts","../node_modules/@vkontakte/vkui/src/lib/classNames.ts","../node_modules/@vkontakte/vkui/src/lib/testing.ts","../node_modules/@vkontakte/vkui/src/lib/browser.ts","../node_modules/@vkontakte/vkui/src/lib/supportEvents.ts","../node_modules/@vkontakte/vkui/src/lib/platform.ts","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@vkontakte/vkui/src/lib/touch.ts","../node_modules/@vkontakte/vkui/src/lib/dom.tsx","../node_modules/@vkontakte/vkui/src/lib/utils.ts","../node_modules/@vkontakte/vkui/src/hooks/useExternRef.ts","../node_modules/@vkontakte/vkui/src/lib/useIsomorphicLayoutEffect.ts","../node_modules/@vkontakte/vkui/src/hooks/useEventListener.ts","../node_modules/@vkontakte/vkui/src/components/Touch/Touch.tsx","../node_modules/@vkontakte/vkui/src/components/ConfigProvider/ConfigProviderContext.tsx","../node_modules/@vkontakte/vkui/src/helpers/math.ts","../node_modules/@vkontakte/vkui/src/components/AppRoot/ScrollContext.tsx","../node_modules/@vkontakte/vkui/src/helpers/scheme.ts","../node_modules/@vkontakte/vkui/src/components/SplitCol/SplitCol.tsx","../node_modules/@vkontakte/vkui/src/components/AppRoot/AppRootContext.ts","../node_modules/@vkontakte/vkui/src/lib/warnOnce.ts","../node_modules/@vkontakte/vkui/src/helpers/getScheme.ts","../node_modules/@vkontakte/vkui/src/components/AppearanceProvider/AppearanceProviderContext.tsx","../node_modules/@vkontakte/vkui/src/lib/SSR.tsx","../node_modules/@vkontakte/vkui/src/hooks/usePlatform.ts","../node_modules/@vkontakte/vkui/src/components/AppearanceProvider/AppearanceProvider.tsx","../node_modules/@vkontakte/vkui/src/components/AppRoot/AppRootPortal.tsx","../node_modules/@vkontakte/vkui/src/hooks/useAppearance.ts","../node_modules/@vkontakte/vkui/src/hooks/useObjectMemo.ts","../node_modules/@vkontakte/vkui/src/components/NavTransitionContext/NavTransitionContext.tsx","../node_modules/@vkontakte/vkui/src/lib/getNavId.ts","../node_modules/@vkontakte/vkui/src/hooks/useWaitTransitionFinish.ts","../node_modules/@vkontakte/vkui/src/hooks/useTimeout.ts","../node_modules/@vkontakte/vkui/src/hooks/usePrevious.ts","../node_modules/@vkontakte/vkui/src/components/View/View.tsx","../node_modules/@vkontakte/vkui/src/components/AdaptivityProvider/AdaptivityContext.tsx","../node_modules/@vkontakte/vkui/src/components/View/utils.ts","../node_modules/@vkontakte/vkui/src/components/Tooltip/TooltipContainer.tsx","../node_modules/@vkontakte/vkui/src/hoc/withAdaptivity.tsx","../node_modules/@vkontakte/vkui/src/components/Panel/Panel.tsx","../node_modules/@vkontakte/vkui/src/helpers/getClassName.ts","../node_modules/@vkontakte/vkui/src/hooks/useGlobalEventListener.ts","../node_modules/@vkontakte/vkui/src/components/FixedLayout/FixedLayout.tsx","../node_modules/@vkontakte/vkui/src/components/Separator/Separator.tsx","../node_modules/@vkontakte/vkui/src/hooks/useAdaptivity.ts","../node_modules/@vkontakte/vkui/src/components/Typography/Text/Text.tsx","../node_modules/@vkontakte/vkui/src/components/ModalRoot/ModalRootContext.tsx","../node_modules/@vkontakte/vkui/src/components/Spacing/Spacing.tsx","../node_modules/@vkontakte/vkui/src/components/PanelHeader/PanelHeader.tsx","../node_modules/@vkontakte/vkui/src/components/PopoutRoot/PopoutRoot.tsx","../node_modules/@vkontakte/vkui/src/components/SplitLayout/SplitLayout.tsx","../node_modules/@vkontakte/vkui/src/components/Tabbar/Tabbar.tsx","../node_modules/@vkontakte/vkui/src/components/Typography/Caption/Caption.tsx","../node_modules/@vkontakte/vkui/src/components/Typography/Headline/Headline.tsx","../node_modules/@vkontakte/vkui/src/components/Counter/Counter.tsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@vkontakte/vkui/src/components/Touch/TouchContext.ts","../node_modules/@vkontakte/vkui/src/lib/accessibility.ts","../node_modules/@vkontakte/vkui/src/components/FocusVisible/FocusVisible.tsx","../node_modules/@vkontakte/vkui/src/hooks/useFocusVisible.ts","../node_modules/@vkontakte/vkui/src/lib/callMultiple.ts","../node_modules/@vkontakte/vkui/node_modules/mitt/src/index.ts","../node_modules/@vkontakte/vkui/src/components/Tappable/Tappable.tsx","../node_modules/@vkontakte/vkui/src/hooks/useBooleanState.ts","../node_modules/@vkontakte/vkui/src/lib/offset.ts","../node_modules/@vkontakte/vkui/src/components/Typography/Footnote/Footnote.tsx","../node_modules/@vkontakte/vkui/src/components/TabbarItem/TabbarItem.tsx","../node_modules/@vkontakte/icons/dist/es6/IconSettings.js","../node_modules/@vkontakte/icons/dist/es6/sprite.js","../node_modules/@vkontakte/icons/dist/es6/SvgIcon.js","../node_modules/@vkontakte/icons/dist/es6/16/chevron_left.js","../node_modules/@vkontakte/icons/dist/es6/16/chevron.js","../node_modules/@vkontakte/icons/dist/es6/24/chevron_compact_left.js","../node_modules/@vkontakte/icons/dist/es6/24/chevron.js","../node_modules/@vkontakte/vkui/src/components/HorizontalScroll/HorizontalScrollArrow.tsx","../node_modules/@vkontakte/vkui/src/components/HorizontalScroll/HorizontalScroll.tsx","../node_modules/@vkontakte/vkui/src/lib/fx.ts","../node_modules/@vkontakte/vkui/src/components/PopoutWrapper/PopoutWrapper.tsx","../node_modules/@vkontakte/vkui/src/components/Typography/Title/Title.tsx","../node_modules/@vkontakte/vkui/src/components/Typography/Subhead/Subhead.tsx","../node_modules/@vkontakte/icons/dist/es6/16/spinner.js","../node_modules/@vkontakte/icons/dist/es6/24/spinner.js","../node_modules/@vkontakte/icons/dist/es6/32/spinner.js","../node_modules/@vkontakte/icons/dist/es6/44/spinner.js","../node_modules/@vkontakte/vkui/src/components/Spinner/Spinner.tsx","../node_modules/@vkontakte/vkui/src/components/Button/Button.tsx","../node_modules/@vkontakte/icons/dist/es6/20/cancel.js","../node_modules/@vkontakte/vkui/src/components/ModalDismissButton/ModalDismissButton.tsx","../node_modules/@vkontakte/vkui/src/components/FocusTrap/FocusTrap.tsx","../node_modules/@vkontakte/vkui/src/components/Alert/Alert.tsx","../node_modules/@vkontakte/vkui/src/hooks/useEffectDev.ts","../node_modules/@vkontakte/vkui/src/lib/isRefObject.ts","../node_modules/@popperjs/core/lib/dom-utils/getWindow.js","../node_modules/@popperjs/core/lib/dom-utils/instanceOf.js","../node_modules/@popperjs/core/lib/utils/math.js","../node_modules/@popperjs/core/lib/utils/userAgent.js","../node_modules/@popperjs/core/lib/dom-utils/isLayoutViewport.js","../node_modules/@popperjs/core/lib/dom-utils/getBoundingClientRect.js","../node_modules/@popperjs/core/lib/dom-utils/getWindowScroll.js","../node_modules/@popperjs/core/lib/dom-utils/getNodeName.js","../node_modules/@popperjs/core/lib/dom-utils/getDocumentElement.js","../node_modules/@popperjs/core/lib/dom-utils/getWindowScrollBarX.js","../node_modules/@popperjs/core/lib/dom-utils/getComputedStyle.js","../node_modules/@popperjs/core/lib/dom-utils/isScrollParent.js","../node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js","../node_modules/@popperjs/core/lib/dom-utils/getNodeScroll.js","../node_modules/@popperjs/core/lib/dom-utils/getHTMLElementScroll.js","../node_modules/@popperjs/core/lib/dom-utils/getLayoutRect.js","../node_modules/@popperjs/core/lib/dom-utils/getParentNode.js","../node_modules/@popperjs/core/lib/dom-utils/getScrollParent.js","../node_modules/@popperjs/core/lib/dom-utils/listScrollParents.js","../node_modules/@popperjs/core/lib/dom-utils/isTableElement.js","../node_modules/@popperjs/core/lib/dom-utils/getOffsetParent.js","../node_modules/@popperjs/core/lib/enums.js","../node_modules/@popperjs/core/lib/utils/orderModifiers.js","../node_modules/@popperjs/core/lib/utils/debounce.js","../node_modules/@popperjs/core/lib/createPopper.js","../node_modules/@popperjs/core/lib/utils/mergeByName.js","../node_modules/@popperjs/core/lib/modifiers/eventListeners.js","../node_modules/@popperjs/core/lib/utils/getBasePlacement.js","../node_modules/@popperjs/core/lib/utils/getVariation.js","../node_modules/@popperjs/core/lib/utils/getMainAxisFromPlacement.js","../node_modules/@popperjs/core/lib/utils/computeOffsets.js","../node_modules/@popperjs/core/lib/modifiers/popperOffsets.js","../node_modules/@popperjs/core/lib/modifiers/computeStyles.js","../node_modules/@popperjs/core/lib/modifiers/offset.js","../node_modules/@popperjs/core/lib/utils/getOppositePlacement.js","../node_modules/@popperjs/core/lib/utils/getOppositeVariationPlacement.js","../node_modules/@popperjs/core/lib/dom-utils/contains.js","../node_modules/@popperjs/core/lib/utils/rectToClientRect.js","../node_modules/@popperjs/core/lib/dom-utils/getClippingRect.js","../node_modules/@popperjs/core/lib/dom-utils/getViewportRect.js","../node_modules/@popperjs/core/lib/dom-utils/getDocumentRect.js","../node_modules/@popperjs/core/lib/utils/mergePaddingObject.js","../node_modules/@popperjs/core/lib/utils/getFreshSideObject.js","../node_modules/@popperjs/core/lib/utils/expandToHashMap.js","../node_modules/@popperjs/core/lib/utils/detectOverflow.js","../node_modules/@popperjs/core/lib/modifiers/flip.js","../node_modules/@popperjs/core/lib/utils/computeAutoPlacement.js","../node_modules/@popperjs/core/lib/utils/within.js","../node_modules/@popperjs/core/lib/modifiers/preventOverflow.js","../node_modules/@popperjs/core/lib/utils/getAltAxis.js","../node_modules/@popperjs/core/lib/modifiers/arrow.js","../node_modules/@popperjs/core/lib/modifiers/hide.js","../node_modules/@popperjs/core/lib/popper.js","../node_modules/@popperjs/core/lib/modifiers/applyStyles.js","../node_modules/react-popper/lib/esm/utils.js","../node_modules/react-popper/lib/esm/usePopper.js","../node_modules/@vkontakte/vkui/src/components/PopperArrow/PopperArrow.tsx","../node_modules/@vkontakte/vkui/src/components/Popper/Popper.tsx","../node_modules/@vkontakte/vkui/src/components/ActionSheet/ActionSheetDropdownDesktop.tsx","../node_modules/@vkontakte/vkui/src/components/ActionSheet/ActionSheetDropdown.tsx","../node_modules/@vkontakte/vkui/src/components/ActionSheet/ActionSheetContext.ts","../node_modules/@vkontakte/vkui/src/components/ActionSheet/ActionSheet.tsx","../node_modules/@vkontakte/icons/dist/es6/24/check_circle_on.js","../node_modules/@vkontakte/vkui/src/components/ActionSheetItem/ActionSheetItem.tsx","../node_modules/@vkontakte/vkui/src/components/ActionSheet/ActionSheetDefaultIosCloseItem.tsx","../node_modules/@vkontakte/icons/dist/es6/24/cancel.js","../node_modules/@vkontakte/vkui/src/components/ScreenSpinner/Icon48DoneOutline.tsx","../node_modules/@vkontakte/vkui/src/components/ScreenSpinner/Icon48CancelCircle.tsx","../node_modules/@vkontakte/vkui/src/components/ScreenSpinner/ScreenSpinner.tsx","../node_modules/@vkontakte/vkui/src/components/Typography/Paragraph/Paragraph.tsx","../node_modules/@vkontakte/vkui/src/components/Snackbar/Snackbar.tsx","../node_modules/@vkontakte/vkui/src/components/ModalRoot/types.ts","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@vkontakte/vkui/src/hoc/withPlatform.tsx","../node_modules/@vkontakte/vkui/src/hoc/withContext.tsx","../node_modules/@vkontakte/vkui/src/components/ModalRoot/useModalManager.tsx","../node_modules/@vkontakte/vkui/src/components/ModalRoot/ModalRoot.tsx","../node_modules/@vkontakte/vkui/src/lib/styles.ts","../node_modules/@vkontakte/vkui/src/components/ModalRoot/constants.ts","../node_modules/@vkontakte/vkui/src/components/ModalRoot/ModalRootDesktop.tsx","../node_modules/@vkontakte/vkui/src/components/ModalRoot/ModalRootAdaptive.tsx","../node_modules/@vkontakte/vkui/src/components/PanelHeaderButton/PanelHeaderButton.tsx","../node_modules/@vkontakte/icons/dist/es6/24/dismiss.js","../node_modules/@vkontakte/vkui/src/hooks/useKeyboard.ts","../node_modules/@vkontakte/vkui/src/components/ModalCardBase/ModalCardBase.tsx","../node_modules/@vkontakte/vkui/src/components/ModalCard/ModalCard.tsx","../node_modules/@vkontakte/vkui/src/components/IconButton/IconButton.tsx","../node_modules/@vkontakte/vkui/src/components/Card/Card.tsx","../node_modules/@vkontakte/vkui/src/components/Header/Header.tsx","../node_modules/@vkontakte/vkui/src/components/Group/Group.tsx","../node_modules/@vkontakte/vkui/src/components/List/ListContext.ts","../node_modules/@vkontakte/vkui/src/components/List/List.tsx","../node_modules/@vkontakte/vkui/src/components/SimpleCell/SimpleCell.tsx","../node_modules/@vkontakte/vkui/src/components/Removable/Removable.tsx","../node_modules/@vkontakte/icons/dist/es6/24/reorder_ios.js","../node_modules/@vkontakte/icons/dist/es6/24/reorder.js","../node_modules/@vkontakte/vkui/src/components/Cell/CellDragger/CellDragger.tsx","../node_modules/@vkontakte/icons/dist/es6/24/check_box_off.js","../node_modules/@vkontakte/icons/dist/es6/24/check_circle_off.js","../node_modules/@vkontakte/icons/dist/es6/24/check_box_on.js","../node_modules/@vkontakte/vkui/src/components/Cell/CellCheckbox/CellCheckbox.tsx","../node_modules/@vkontakte/vkui/src/components/Cell/Cell.tsx","../node_modules/@vkontakte/vkui/src/components/Cell/useDraggable.tsx","../node_modules/@vkontakte/vkui/src/components/RichCell/RichCell.tsx","../node_modules/@vkontakte/icons/dist/es6/12/circle.js","../node_modules/@vkontakte/icons/dist/es6/12/online_mobile.js","../node_modules/@vkontakte/vkui/src/components/Avatar/Avatar.tsx","../node_modules/@vkontakte/vkui/src/components/Tabs/Tabs.tsx","../node_modules/@vkontakte/vkui/src/components/TabsItem/TabsItem.tsx","../node_modules/@vkontakte/vkui/src/components/Link/Link.tsx","../node_modules/@vkontakte/vkui/src/components/FormLayout/FormLayout.tsx","../node_modules/@vkontakte/vkui/src/components/FormItem/FormItem.tsx","../node_modules/@vkontakte/vkui/src/components/VisuallyHiddenInput/VisuallyHiddenInput.tsx","../node_modules/@vkontakte/vkui/src/components/Switch/Switch.tsx","../node_modules/@vkontakte/vkui/src/components/File/File.tsx","../node_modules/@vkontakte/vkui/src/components/FormField/FormField.tsx","../node_modules/@vkontakte/vkui/src/components/Input/Input.tsx","../node_modules/@vkontakte/vkui/src/components/Radio/Radio.tsx","../node_modules/@vkontakte/icons/dist/es6/20/check_box_on.js","../node_modules/@vkontakte/icons/dist/es6/20/check_box_off.js","../node_modules/@vkontakte/icons/dist/es6/20/check_box_indetermanate.js","../node_modules/@vkontakte/vkui/src/components/Checkbox/Checkbox.tsx","../node_modules/@vkontakte/vkui/src/components/Div/Div.tsx","../node_modules/@vkontakte/icons/dist/es6/28/arrow_left_outline.js","../node_modules/@vkontakte/icons/dist/es6/28/chevron_left_outline.js","../node_modules/@vkontakte/icons/dist/es6/28/chevron_back.js","../node_modules/@vkontakte/vkui/src/components/PanelHeaderBack/PanelHeaderBack.tsx","../node_modules/@vkontakte/vkui/src/hooks/useInsets.ts","../node_modules/@vkontakte/vkui/src/components/AppRoot/AppRoot.tsx","../node_modules/@vkontakte/vkui/src/hooks/useKeyboardInputTracker.ts","../node_modules/@vkontakte/vkui/src/hooks/useBridgeAdaptivity.ts","../node_modules/@vkontakte/vkui/src/components/AdaptivityProvider/AdaptivityProvider.tsx","../node_modules/@vkontakte/vkui/src/components/LocaleProviderContext/LocaleProviderContext.tsx","../node_modules/@vkontakte/vkui/src/components/ConfigProvider/ConfigProvider.tsx","../node_modules/mobx/src/errors.ts","../node_modules/mobx/src/utils/global.ts","../node_modules/mobx/src/utils/utils.ts","../node_modules/mobx/src/api/decorators.ts","../node_modules/mobx/src/types/overrideannotation.ts","../node_modules/mobx/src/core/atom.ts","../node_modules/mobx/src/api/become-observed.ts","../node_modules/mobx/src/utils/comparer.ts","../node_modules/mobx/src/types/modifiers.ts","../node_modules/mobx/src/types/actionannotation.ts","../node_modules/mobx/src/types/flowannotation.ts","../node_modules/mobx/src/types/computedannotation.ts","../node_modules/mobx/src/types/observableannotation.ts","../node_modules/mobx/src/types/autoannotation.ts","../node_modules/mobx/src/api/observable.ts","../node_modules/mobx/src/types/dynamicobject.ts","../node_modules/mobx/src/api/computed.ts","../node_modules/mobx/src/core/action.ts","../node_modules/mobx/src/types/observablevalue.ts","../node_modules/mobx/src/core/computedvalue.ts","../node_modules/mobx/src/core/derivation.ts","../node_modules/mobx/src/core/observable.ts","../node_modules/mobx/src/core/globalstate.ts","../node_modules/mobx/src/core/reaction.ts","../node_modules/mobx/src/api/trace.ts","../node_modules/mobx/src/api/action.ts","../node_modules/mobx/src/api/autorun.ts","../node_modules/mobx/src/api/configure.ts","../node_modules/mobx/src/api/extendobservable.ts","../node_modules/mobx/src/api/extras.ts","../node_modules/mobx/src/api/flow.ts","../node_modules/mobx/src/api/isobservable.ts","../node_modules/mobx/src/api/transaction.ts","../node_modules/mobx/src/types/intercept-utils.ts","../node_modules/mobx/src/types/listen-utils.ts","../node_modules/mobx/src/api/makeObservable.ts","../node_modules/mobx/src/types/observablearray.ts","../node_modules/mobx/src/core/spy.ts","../node_modules/mobx/src/types/observablemap.ts","../node_modules/mobx/src/types/observableset.ts","../node_modules/mobx/src/types/observableobject.ts","../node_modules/mobx/src/types/legacyobservablearray.ts","../node_modules/mobx/src/types/type-utils.ts","../node_modules/mobx/src/utils/eq.ts","types/enums.ts","../node_modules/mobx/src/utils/iterable.ts","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/mobx/src/mobx.ts","store/User.ts","store/Actions.tsx","store/State.tsx","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/mobx-react-lite/src/utils/assertEnvironment.ts","../node_modules/mobx-react-lite/src/utils/observerBatching.ts","../node_modules/mobx-react-lite/src/utils/printDebugValue.ts","../node_modules/mobx-react-lite/src/utils/FinalizationRegistryWrapper.ts","../node_modules/mobx-react-lite/src/utils/reactionCleanupTrackingCommon.ts","../node_modules/mobx-react-lite/src/utils/reactionCleanupTracking.ts","../node_modules/mobx-react-lite/src/utils/createReactionCleanupTrackingUsingFinalizationRegister.ts","../node_modules/mobx-react-lite/src/utils/createTimerBasedReactionCleanupTracking.ts","../node_modules/mobx-react-lite/src/staticRendering.ts","../node_modules/mobx-react-lite/src/useObserver.ts","../node_modules/mobx-react-lite/src/observer.ts","../node_modules/mobx-react-lite/src/ObserverComponent.ts","../node_modules/mobx-react-lite/src/index.ts","../node_modules/@vkontakte/icons/dist/es6/28/smiles_2_outline.js","components/UI/ReportInfo.tsx","../node_modules/@vkontakte/icons/dist/es6/28/cup_outline.js","../node_modules/@vkontakte/icons/dist/es6/28/user_circle_outline.js","../node_modules/@vkontakte/icons/dist/es6/28/crown_outline.js","store/Session.ts","components/UI/Tabbar.tsx","../node_modules/@vkontakte/icons/dist/es6/28/more_horizontal.js","components/UI/More.tsx","components/Memes/StatusBlock.tsx","../node_modules/@vkontakte/icons/dist/es6/28/share_outline.js","../node_modules/@vkontakte/icons/dist/es6/28/story_outline.js","../node_modules/@vkontakte/icons/dist/es6/28/like_fill_red.js","../node_modules/@vkontakte/icons/dist/es6/28/like_outline.js","../node_modules/@vkontakte/icons/dist/es6/28/comment_outline.js","components/Memes/MemeButtons.tsx","components/Memes/Meme.tsx","components/Comments/Comment.tsx","components/Comments/CommentForm.tsx","../node_modules/@vkontakte/icons/dist/es6/20/add_circle.js","components/Comments/CommentsBlock.tsx","components/Memes/Memes.tsx","components/Admin/ReportComments.tsx","components/Admin/ReportUser.tsx","components/Admin/ReportUsers.tsx","components/Admin/PublishRating.tsx","components/Admin/AdminWrapper.tsx","components/Admin/CategoriesAdmin.tsx","panels/Admin.tsx","components/Memes/CategoriesMenu.tsx","panels/Home.tsx","store/Analytics.ts","panels/IntroFirst.tsx","panels/Loading.tsx","components/MyProfile/Nickname.tsx","../node_modules/@vkontakte/icons/dist/es6/28/notifications.js","../node_modules/@vkontakte/icons/dist/es6/28/users_3_outline.js","components/MyProfile/Subscribe.tsx","../node_modules/@vkontakte/icons/dist/es6/16/add.js","../node_modules/@vkontakte/icons/dist/es6/24/camera.js","../node_modules/@vkontakte/icons/dist/es6/24/video_advertisement.js","images/guideFirst.ts","images/guideSecond.ts","components/MyProfile/Upload.tsx","panels/MyProfile.tsx","components/Rating/CategoriesRating.tsx","components/Rating/RatingListItem.tsx","components/Rating/RatingList.tsx","components/Rating/RatingInfoBlock.tsx","panels/Rating.tsx","panels/Rules.tsx","panels/IntroSecond.tsx","components/UserProfile/BanSwitcher.tsx","components/UserProfile/UserHeader.tsx","../node_modules/@vkontakte/icons/dist/es6/56/like_outline.js","../node_modules/@vkontakte/icons/dist/es6/56/share_outline.js","../node_modules/@vkontakte/icons/dist/es6/56/comments_outline.js","../node_modules/@vkontakte/icons/dist/es6/56/download_outline.js","components/UserProfile/UserInfo.tsx","components/UserProfile/UserProfileWrapper.tsx","panels/UserProfile.tsx","panels/UserMemes.tsx","ViewCustom.tsx","../node_modules/@vkontakte/icons/dist/es6/28/check_circle_outline.js","components/Modals/ModalReport.tsx","components/Modals/ModalReportInfo.tsx","components/Modals/ModalRules.tsx","components/Modals/ModalsRootCustom.tsx","App.tsx","index.tsx"],"sourcesContent":["import {\n  VKBridgeSubscribeHandler,\n  AnyRequestMethodName,\n  RequestProps,\n  RequestIdProp,\n  ReceiveData,\n  AnyReceiveMethodName,\n} from './types/bridge';\n\n/**\n * Creates counter interface.\n */\nfunction createCounter() {\n  return {\n    current: 0,\n    next() {\n      return ++this.current;\n    },\n  };\n}\n\n/**\n * Creates interface for resolving request promises by request id's (or not).\n */\nfunction createRequestResolver() {\n  /**\n   * @prop resolve Resolve function.\n   * @prop reject Reject function.\n   */\n  type PromiseController = {\n    resolve: (value: any) => any;\n    reject: (reason: any) => any;\n  };\n\n  const counter = createCounter();\n  const promiseControllers: Record<number | string, PromiseController | null> = {};\n\n  return {\n    /**\n     * Adds new controller with resolve/reject methods.\n     *\n     * @param controller Object with `resolve` and `reject` functions\n     * @param customId Custom `request_id`\n     * @returns New request id of the added controller.\n     */\n    add(controller: PromiseController, customId?: number | string): number | string {\n      const id = customId != null ? customId : counter.next();\n\n      promiseControllers[id] = controller;\n\n      return id;\n    },\n\n    /**\n     * Resolves/rejects an added promise by request id and the `isSuccess`\n     * predicate.\n     *\n     * @param requestId Request ID.\n     * @param data Data to pass to the resolve- or reject-function.\n     * @param isSuccess Predicate to select the desired function.\n     */\n    resolve<T>(requestId: number | string, data: T, isSuccess: (data: T) => boolean) {\n      const requestPromise = promiseControllers[requestId];\n\n      if (requestPromise) {\n        if (isSuccess(data)) {\n          requestPromise.resolve(data);\n        } else {\n          requestPromise.reject(data);\n        }\n\n        promiseControllers[requestId] = null;\n      }\n    },\n  };\n}\n\n/**\n * Returns send function that returns promises.\n *\n * @param sendEvent Send event function.\n * @param subscribe Subscribe event function.\n * @returns Send function which returns the Promise object.\n */\nexport function promisifySend(\n  sendEvent: <K extends AnyRequestMethodName>(\n    method: K,\n    props?: RequestProps<K> & RequestIdProp,\n  ) => void,\n  subscribe: (fn: VKBridgeSubscribeHandler) => void,\n) {\n  const requestResolver = createRequestResolver();\n\n  // Subscribe to receive a data\n  subscribe((event) => {\n    if (!event.detail || !event.detail.data || typeof event.detail.data !== 'object') {\n      return;\n    }\n\n    // There is no request_id in receive-only events, so we check its existence.\n    if ('request_id' in event.detail.data) {\n      const { request_id: requestId, ...data } = event.detail.data;\n\n      if (requestId) {\n        requestResolver.resolve(requestId, data, (data) => !('error_type' in data));\n      }\n    }\n  });\n\n  return function promisifiedSend<K extends AnyRequestMethodName>(\n    method: K,\n    props: RequestProps<K> & RequestIdProp = {} as RequestProps<K> & RequestIdProp, // eslint-disable-line @typescript-eslint/consistent-type-assertions\n  ): Promise<K extends AnyReceiveMethodName ? ReceiveData<K> : void> {\n    return new Promise((resolve, reject) => {\n      const requestId = requestResolver.add({ resolve, reject }, props.request_id);\n\n      sendEvent(method, {\n        ...props,\n        request_id: requestId,\n      });\n    });\n  };\n}\n","import { promisifySend } from './promisifySend';\nimport {\n  VKBridge,\n  VKBridgeSubscribeHandler,\n  AnyRequestMethodName,\n  RequestProps,\n  RequestIdProp,\n} from './types/bridge';\n\n/** Is the client side runtime environment */\nexport const IS_CLIENT_SIDE = typeof window !== 'undefined';\n\n/** Is the runtime environment an Android app */\nexport const IS_ANDROID_WEBVIEW = Boolean(IS_CLIENT_SIDE && (window as any).AndroidBridge);\n\n/** Is the runtime environment an iOS app */\nexport const IS_IOS_WEBVIEW = Boolean(\n  IS_CLIENT_SIDE &&\n    (window as any).webkit &&\n    (window as any).webkit.messageHandlers &&\n    (window as any).webkit.messageHandlers.VKWebAppClose,\n);\n\nexport const IS_REACT_NATIVE_WEBVIEW = Boolean(\n  IS_CLIENT_SIDE &&\n    (window as any).ReactNativeWebView &&\n    typeof (window as any).ReactNativeWebView.postMessage === 'function',\n);\n\n/** Is the runtime environment a browser */\nexport const IS_WEB = IS_CLIENT_SIDE && !IS_ANDROID_WEBVIEW && !IS_IOS_WEBVIEW;\n\n/** Is the runtime environment m.vk.com */\nexport const IS_MVK = IS_WEB && /(^\\?|&)vk_platform=mobile_web(&|$)/.test(location.search);\n\n/** Is the runtime environment vk.com */\nexport const IS_DESKTOP_VK = IS_WEB && !IS_MVK;\n\n/** Type of subscribe event */\nexport const EVENT_TYPE = IS_WEB ? 'message' : 'VKWebAppEvent';\n\n/** Methods supported on the desktop */\nexport const DESKTOP_METHODS = [\n  'VKWebAppInit',\n  'VKWebAppGetCommunityAuthToken',\n  'VKWebAppAddToCommunity',\n  'VKWebAppAddToHomeScreenInfo',\n  'VKWebAppClose',\n  'VKWebAppCopyText',\n  'VKWebAppCreateHash',\n  'VKWebAppGetUserInfo',\n  'VKWebAppSetLocation',\n  'VKWebAppSendToClient',\n  'VKWebAppGetClientVersion',\n  'VKWebAppGetPhoneNumber',\n  'VKWebAppGetEmail',\n  'VKWebAppGetGroupInfo',\n  'VKWebAppGetGeodata',\n  'VKWebAppGetCommunityToken',\n  'VKWebAppGetConfig',\n  'VKWebAppGetLaunchParams',\n  'VKWebAppSetTitle',\n  'VKWebAppGetAuthToken',\n  'VKWebAppCallAPIMethod',\n  'VKWebAppJoinGroup',\n  'VKWebAppLeaveGroup',\n  'VKWebAppAllowMessagesFromGroup',\n  'VKWebAppDenyNotifications',\n  'VKWebAppAllowNotifications',\n  'VKWebAppOpenPayForm',\n  'VKWebAppOpenApp',\n  'VKWebAppShare',\n  'VKWebAppShowWallPostBox',\n  'VKWebAppScroll',\n  'VKWebAppShowOrderBox',\n  'VKWebAppShowLeaderBoardBox',\n  'VKWebAppShowInviteBox',\n  'VKWebAppShowRequestBox',\n  'VKWebAppAddToFavorites',\n  'VKWebAppShowStoryBox',\n  'VKWebAppStorageGet',\n  'VKWebAppStorageGetKeys',\n  'VKWebAppStorageSet',\n  'VKWebAppFlashGetInfo',\n  'VKWebAppSubscribeStoryApp',\n  'VKWebAppOpenWallPost',\n  'VKWebAppCheckAllowedScopes',\n  'VKWebAppCheckBannerAd',\n  'VKWebAppHideBannerAd',\n  'VKWebAppShowBannerAd',\n  'VKWebAppCheckNativeAds',\n  'VKWebAppShowNativeAds',\n  'VKWebAppRetargetingPixel',\n  'VKWebAppConversionHit',\n  'VKWebAppShowSubscriptionBox',\n  'VKWebAppCheckSurvey',\n  'VKWebAppShowSurvey',\n  'VKWebAppScrollTop',\n  'VKWebAppScrollTopStart',\n  'VKWebAppScrollTopStop',\n  'VKWebAppShowActionSheet',\n  'VKWebAppShowSlidesSheet',\n\n  // Desktop web specific events\n  ...(IS_DESKTOP_VK\n    ? [\n        'VKWebAppResizeWindow',\n        'VKWebAppAddToMenu',\n        'VKWebAppShowInstallPushBox',\n        'VKWebAppGetFriends',\n        'VKWebAppShowCommunityWidgetPreviewBox',\n      ]\n    : ['VKWebAppShowImages']),\n];\n\n/** Android VK Bridge interface. */\nconst androidBridge: Record<AnyRequestMethodName, (serializedData: string) => void> | undefined =\n  IS_CLIENT_SIDE ? (window as any).AndroidBridge : undefined;\n\n/** iOS VK Bridge interface. */\nconst iosBridge: Record<AnyRequestMethodName, { postMessage?: (data: any) => void }> | undefined =\n  IS_IOS_WEBVIEW ? (window as any).webkit.messageHandlers : undefined;\n\n/** Web VK Bridge interface. */\nconst webBridge: { postMessage?: (message: any, targetOrigin: string) => void } | undefined = IS_WEB\n  ? parent\n  : undefined;\n\n// [Примечание 1] Отключили использование в этом PR https://github.com/VKCOM/vk-bridge/pull/262\n// let webSdkHandlers: string[] | undefined;\n\n/**\n * Creates a VK Bridge API that holds functions for interact with runtime\n * environment.\n *\n * @param version Version of the package\n */\nexport function createVKBridge(version: string): VKBridge {\n  /** Current frame id. */\n  let webFrameId: string | undefined = undefined;\n\n  /** List of functions that subscribed on events. */\n  const subscribers: VKBridgeSubscribeHandler[] = [];\n\n  /**\n   * Sends an event to the runtime env. In the case of Android/iOS application\n   * env is the application itself. In the case of the browser, the parent\n   * frame in which the event handlers is located.\n   *\n   * @param method The method (event) name to send\n   * @param [props] Method properties\n   */\n  function send<K extends AnyRequestMethodName>(\n    method: K,\n    props?: RequestProps<K> & RequestIdProp,\n  ) {\n    // Sending data through Android bridge\n\n    if (androidBridge && androidBridge[method]) {\n      androidBridge[method](JSON.stringify(props));\n    }\n\n    // Sending data through iOS bridge\n    else if (\n      iosBridge &&\n      iosBridge[method] &&\n      typeof iosBridge[method].postMessage === 'function'\n    ) {\n      iosBridge[method].postMessage!(props);\n    }\n\n    // Sending data through React Native bridge\n    else if (IS_REACT_NATIVE_WEBVIEW) {\n      (window as any).ReactNativeWebView.postMessage(\n        JSON.stringify({\n          handler: method,\n          params: props,\n        }),\n      );\n    }\n\n    // Sending data through web bridge\n    else if (webBridge && typeof webBridge.postMessage === 'function') {\n      webBridge.postMessage(\n        {\n          handler: method,\n          params: props,\n          type: 'vk-connect',\n          webFrameId,\n          connectVersion: version,\n        },\n        '*',\n      );\n    }\n  }\n\n  /**\n   * Adds an event listener. It will be called any time a data is received.\n   *\n   * @param listener A callback to be invoked on every event receive.\n   */\n  function subscribe(listener: VKBridgeSubscribeHandler) {\n    subscribers.push(listener);\n  }\n\n  /**\n   * Removes an event listener which has been subscribed for event listening.\n   *\n   * @param listener A callback to unsubscribe.\n   */\n  function unsubscribe(listener: VKBridgeSubscribeHandler) {\n    const index = subscribers.indexOf(listener);\n\n    if (index > -1) {\n      subscribers.splice(index, 1);\n    }\n  }\n\n  /**\n   * Checks if a method is supported on runtime platform.\n   *\n   * @param method Method (event) name to check.\n   * @returns Result of checking.\n   */\n  function supports<K extends AnyRequestMethodName>(method: K): boolean {\n    if (IS_ANDROID_WEBVIEW) {\n      // Android support check\n      return !!(androidBridge && typeof androidBridge[method] === 'function');\n    } else if (IS_IOS_WEBVIEW) {\n      // iOS support check\n      return !!(\n        iosBridge &&\n        iosBridge[method] &&\n        typeof iosBridge[method].postMessage === 'function'\n      );\n    } else if (IS_WEB) {\n      // Web support check\n      return DESKTOP_METHODS.includes(method);\n      // см. Примечание 1\n      // if (!webSdkHandlers) {\n      //   console.error('You should call bridge.send(\"VKWebAppInit\") first');\n      //   return false;\n      // }\n      // return webSdkHandlers.includes(method);\n    }\n\n    return false;\n  }\n\n  /**\n   * Checks whether the runtime is a WebView.\n   *\n   * @returns Result of checking.\n   */\n  function isWebView(): boolean {\n    return IS_IOS_WEBVIEW || IS_ANDROID_WEBVIEW;\n  }\n\n  /**\n   * Checks whether the runtime is an iframe.\n   *\n   * @returns Result of checking.\n   */\n  function isIframe(): boolean {\n    return IS_WEB && window.parent !== window;\n  }\n\n  /**\n   * Checks whether the runtime is embedded.\n   *\n   * @returns Result of checking.\n   */\n  function isEmbedded(): boolean {\n    return isWebView() || isIframe();\n  }\n\n  /**\n   * Checks whether the runtime is standalone.\n   *\n   * @returns Result of checking.\n   */\n  function isStandalone(): boolean {\n    return !isEmbedded();\n  }\n\n  function handleEvent(event: any) {\n    if (IS_IOS_WEBVIEW || IS_ANDROID_WEBVIEW) {\n      // If it's webview\n      return [...subscribers].map((fn) => fn.call(null, event));\n    }\n\n    let bridgeEventData = event?.data;\n    if (!IS_WEB || !bridgeEventData) {\n      return;\n    }\n\n    if (IS_REACT_NATIVE_WEBVIEW && typeof bridgeEventData === 'string') {\n      try {\n        bridgeEventData = JSON.parse(bridgeEventData);\n      } catch {}\n    }\n\n    const { type, data, frameId } = bridgeEventData;\n    if (!type) {\n      return;\n    }\n\n    // см. Примечание 1\n    // if (type === 'SetSupportedHandlers') {\n    //   webSdkHandlers = data.supportedHandlers;\n    //   return;\n    // }\n\n    if (type === 'VKWebAppSettings') {\n      webFrameId = frameId;\n      return;\n    }\n\n    [...subscribers].map((fn) => fn({ detail: { type, data } }));\n  }\n\n  // Subscribes to listening messages from a runtime for calling each\n  // subscribed event listener.\n  if (IS_REACT_NATIVE_WEBVIEW && /(android)/i.test(navigator.userAgent)) {\n    document.addEventListener(EVENT_TYPE, handleEvent);\n  } else if (typeof window !== 'undefined' && 'addEventListener' in window) {\n    window.addEventListener(EVENT_TYPE, handleEvent);\n  }\n\n  /**\n   * Enhanced send functions for the ability to receive response data in\n   * the Promise object.\n   */\n  const sendPromise = promisifySend(send, subscribe);\n\n  return {\n    send: sendPromise,\n    sendPromise,\n    subscribe,\n    unsubscribe,\n    supports,\n    isWebView,\n    isIframe,\n    isEmbedded,\n    isStandalone,\n  };\n}\n","/** Type of the Personal Card */\nexport type PersonalCardType = 'phone' | 'email' | 'address';\n\n/** Access Permissions for User Token */\nexport type PersonalAuthScope =\n  | 'friends'\n  | 'photos'\n  | 'video'\n  | 'stories'\n  | 'pages'\n  | 'status'\n  | 'notes'\n  | 'wall'\n  | 'docs'\n  | 'groups'\n  | 'stats'\n  | 'market';\n\n/** Access Permissions for Community Token */\nexport type CommunityAuthScope =\n  | 'stories'\n  | 'photos'\n  | 'app_widget'\n  | 'messages'\n  | 'docs'\n  | 'manage';\n\n/**\n * Type of VKWebAppGetFriendsResult user\n */\nexport type UserGetFriendsFriend = {\n  /** User id */\n  id: number;\n  /** User name */\n  first_name: string;\n  /** User surname */\n  last_name: string;\n  /** User sex: 0 - not specified, 1 - female, 2 - male */\n  sex: 0 | 1 | 2;\n  /**\n   * URL of the square user's photo with 200px width.\n   * https://vk.com/images/camera_200.png will be returned if the photo\n   * is not set.\n   */\n  photo_200: string;\n};\n\n/**\n * Type of user info object\n */\nexport type UserInfo = {\n  /** User id */\n  id: number;\n  /** User name */\n  first_name: string;\n  /** User surname */\n  last_name: string;\n  /** User sex: 0 - not specified, 1 - female, 2 - male */\n  sex: 0 | 1 | 2;\n  /** User's city */\n  city: {\n    /** City ID */\n    id: number;\n    /** City title */\n    title: string;\n  };\n  /** User's country */\n  country: {\n    /** Country ID */\n    id: number;\n    /** Country  title */\n    title: string;\n  };\n  /**\n   * Date of Birth. It is returned in the format D.M.YYYY or D.M (if the\n   * year of birth is hidden). If the date of birth is hidden entirely,\n   * the field is not in the response.\n   */\n  bdate?: string;\n  /**\n   * URL of the square user's photo with 100px width.\n   * https://vk.com/images/camera_100.png will be returned if the photo\n   * is not set.\n   */\n  photo_100: string;\n  /**\n   * URL of the square user's photo with 200px width.\n   * https://vk.com/images/camera_200.png will be returned if the photo\n   * is not set.\n   */\n  photo_200: string;\n  /**\n   * URL of the square user's photo with maximum size.\n   * https://vk.com/images/camera_400.png will be returned if the photo\n   * is not set.\n   */\n  photo_max_orig?: string;\n  /** User's timezone */\n  timezone?: number;\n};\n\n/**\n * User's contact data from the Personal Card from\n */\nexport type PersonalCardData = {\n  phone?: string;\n  email?: string;\n  address?: {\n    country?: {\n      id: number;\n      name: string;\n    };\n    city?: {\n      id: number;\n      name: string;\n    };\n    specified_address?: string;\n    postal_code?: string;\n  };\n};\n\n/**\n * Map of VK Pay request params\n */\nexport type VKPayActionParamsMap = {\n  /** Payment with a given amount to a user */\n  'pay-to-user': {\n    /** The amount of payment in rubles. The minimum value is 1 */\n    amount?: number;\n    /** User ID */\n    user_id: number;\n    /** Payment description */\n    description?: string;\n  };\n  /** Payment with a given amount to a community */\n  'pay-to-group': {\n    /** The amount of payment in rubles. The minimum value is 1 */\n    amount: number;\n    /** Community ID */\n    group_id: number;\n    /** Payment description */\n    description?: string;\n    /** Dictionary with arbitrary parameters */\n    data?: string;\n  };\n  /** Transferring an arbitrary amount to a user */\n  'transfer-to-user': {\n    user_id: number;\n  };\n  /** Transferring an arbitrary amount to a community */\n  'transfer-to-group': {\n    group_id: number;\n  };\n  /**\n   * Payment in favor of the merchant\n   * @see {@link https://vk.com/@devpay-vk-pay-how-to VK Pay How To}\n   */\n  'pay-to-service': {\n    /**\n     * Amount of payment. The minimum value is 1. The amount field is\n     * involved in the formation of merchant_data for the signature of\n     * the seller.\n     */\n    amount: number | string;\n    /**\n     * Description of the payment for user. The text will be shown in\n     * payment dialog\n     */\n    description: string;\n    /**\n     * Merchant ID. This is your ID in the payment system, obtained after\n     * the conclusion of the contract along with the seller’s private key\n     */\n    merchant_id: number;\n    /** Version of the payment form */\n    version: number;\n    /** The signature of the VK app that caused the payment */\n    sign: string;\n    /** Service data */\n    data: {\n      /** Currency. Only RUB is currently supported */\n      currency: 'RUB';\n      /** Base64-string of data for the signature of the seller */\n      merchant_data: string;\n      /** SHA-1 seller sign */\n      merchant_sign: string;\n      /** Sales order id */\n      order_id: string | number;\n      /** Timestamp */\n      ts: number;\n      /** Cashback data */\n      cashback?: {\n        /** Cashback timestamp */\n        pay_time: number;\n        /** Cashback size */\n        amount?: number;\n        /** Percentage cashback size */\n        amount_percent?: number;\n      };\n    };\n  };\n};\n\n/**\n * Possible types VK Pay operations\n */\nexport type VKPayActionType = keyof VKPayActionParamsMap;\n\n/**\n * VK Pay request props\n */\nexport type VKPayProps<ActionType extends VKPayActionType> = {\n  app_id: number;\n  action: ActionType;\n  params: VKPayActionParamsMap[ActionType];\n};\n\n/**\n * Appearance type\n */\nexport type AppearanceType = 'light' | 'dark';\n\n/**\n * Application color scheme type\n */\nexport type AppearanceSchemeType = 'vkcom_light' | 'vkcom_dark' | 'space_gray' | 'bright_light';\n\n/**\n * Vibration type for Taptic Engine\n */\nexport type TapticVibrationPowerType = 'light' | 'medium' | 'heavy';\n\n/**\n * Notification type for Taptic Engine\n */\nexport type TapticNotificationType = 'error' | 'success' | 'warning';\n\n/** Status of showing order box */\nexport type OrderBoxShowingStatus = 'cancel' | 'success' | 'fail';\n\n/**\n * Community widget type\n */\nexport type CommunityWidgetType =\n  | 'text'\n  | 'list'\n  | 'table'\n  | 'tiles'\n  | 'compact_list'\n  | 'cover_list'\n  | 'match'\n  | 'matches'\n  | 'donation';\n\n/**\n * Output data from code reader\n */\nexport type CodeReaderOutput = {\n  /** Read QR code data */\n  code_data: string;\n};\n\n/**\n * Selected contact data\n */\nexport type SelectedContact = {\n  phone: string;\n  first_name: string;\n  last_name: string;\n};\n\n/**\n * Request result data\n */\nexport type RequestResult = {\n  /** Operation success */\n  success: boolean;\n  /** `requestKey` from request */\n  requestKey: string;\n};\n\n/**\n * Result data of transaction\n */\nexport type TransactionResult = {\n  /** Payment (true — successful, false — unsuccessful). */\n  status: boolean;\n  /** Payment transaction identifier (for `status=true`). */\n  transaction_id: string;\n  /** Payment amount */\n  amount: string;\n  /** Additional information of the seller */\n  extra?: string | null;\n};\n\n/**\n * Screen insets.\n */\nexport type Insets = {\n  top: number;\n  left: number;\n  right: number;\n  bottom: number;\n};\n\n/** Default fields for config response on all platforms */\nexport type DefaultUpdateConfigData = {\n  api_host: string;\n  /** App_id of opened app */\n  app_id: string;\n  /** Native app appearance */\n  appearance: AppearanceType;\n  /** Native app scheme */\n  scheme: AppearanceSchemeType;\n};\n\n/** Config response for native platforms */\nexport type MobileUpdateConfigData = DefaultUpdateConfigData & {\n  /** Client type */\n  app: 'vkclient' | 'vkme';\n  /** Safe area insets. iOS only */\n  insets?: Insets;\n};\n\n/** Config response for m.vk.com and vk.com */\nexport type SharedUpdateConfigData = DefaultUpdateConfigData & {\n  /** window.innerWidth of the parent window */\n  viewport_width: number;\n  /** window.innerHeight of the parent window */\n  viewport_height: number;\n  /** Server API host for direct requests. */\n  api_host: string;\n};\n\n/** Config response for m.vk.com (mobile browser) */\nexport type MVKUpdateConfigData = SharedUpdateConfigData;\n\n/** Config response for vk.com (full web) */\nexport type VKUpdateConfigData = SharedUpdateConfigData & {\n  /** Is app opened in layer */\n  is_layer: boolean;\n};\n\n/** Update config data */\nexport type ParentConfigData = MobileUpdateConfigData | MVKUpdateConfigData | VKUpdateConfigData;\n\nexport type WidgetPreviewRequestOptions = {\n  /** Widget type */\n  type: CommunityWidgetType;\n  /** Community ID */\n  group_id: number;\n  /**\n   * Widget code\n   * @see {@link https://vk.com/dev/execute Execute method}\n   */\n  code: string;\n};\n\nexport type VKWebAppLibverifyOnFailedCode =\n  | 'GENERAL_ERROR'\n  | 'UNSUPPORTED_NUMBER'\n  | 'INCORRECT_PHONE_NUMBER'\n  | 'INCORRECT_SMS_CODE'\n  | 'RATELIMIT'\n  | 'NETWORK_ERROR'\n  | 'NO_NETWORK';\n\n/**\n * App close status\n */\nexport type AppCloseStatus = 'success' | 'failed';\n\nexport type CommunityTokenRequestOptions = {\n  app_id: number;\n  group_id: number;\n  scope: CommunityAuthScope | string;\n};\n\nexport type MessageRequestOptions = {\n  /** Receiver ID (user, community, chat) */\n  peer_id: number;\n  /** Message text */\n  message: string;\n  /** List of attaches */\n  attachment?: string;\n  /** Geographic latitude of a point, specified in degrees (from -90 to 90). */\n  lat?: number;\n  /** Geographic longitude of a point, specified in degrees (from -180 to 180). */\n  lng?: number;\n};\n\nexport enum EAdsFormats {\n  REWARD = 'reward',\n  INTERSTITIAL = 'interstitial',\n}\n\nexport type ShowNativeAdsRequest = {\n  ad_format: EAdsFormats;\n  use_waterfall?: boolean;\n};\n\nexport type CheckNativeAdsRequest = {\n  ad_format: EAdsFormats;\n  use_waterfall?: boolean;\n};\n\nexport enum BannerAdLayoutType {\n  RESIZE = 'resize',\n  OVERLAY = 'overlay',\n}\n\nexport enum BannerAdLocation {\n  TOP = 'top',\n  BOTTOM = 'bottom',\n}\n\nexport type ShowBannerAdRequest = {\n  banner_location: BannerAdLocation;\n  layout_type?: BannerAdLayoutType;\n  can_close?: boolean;\n};\n\nexport type OrderRequestOptions = {\n  /** Always `item` */\n  type: 'item';\n  /**\n   * Name of product. Will be transmitted in the notification of receipt\n   * of product information\n   */\n  item: string;\n};\n\nexport type RequestForRequestOptions = {\n  /** User Id */\n  uid: number;\n  /** Request test */\n  message: string;\n  /**\n   * Optional parameter. Custom string to track conversion. It is passed\n   * in the application launch parameters in case of launch from the\n   * request.\n   */\n  requestKey?: string;\n};\n\nexport type WallPostRequestOptions = {\n  /**\n   * ID of the user or community on whose wall the post is to be\n   * published\n   */\n  owner_id?: number;\n  /**\n   * `true` - the post posted on behalf of the community will have a\n   * signature added (the name of the user who posted the post)\n   * `false` - the signature will not be added. The parameter is taken\n   * into account only when publishing on the community wall and\n   * specifying the from_group parameter. By default, the signature is\n   * not added\n   */\n  signed?: boolean;\n  /** Latitude, specified in degrees (from -90 to 90) */\n  lat?: number;\n  /** Longitude, specified in degrees (from -180 to 180) */\n  long?: number;\n  /** The place ID where the user is marked */\n  place_id?: number;\n  /**\n   * `true` - post will be available to friends only\n   * `false` - post will be available to all users (default)\n   */\n  friends_only?: boolean;\n  /**\n   * List of services or websites the update will be exported to, if the user has so requested.\n   * Sample values: 'twitter', 'facebook'\n   */\n  services?: 'twitter' | 'facebook' | string;\n  /** Publication date (in Unix time). If used, posting will be delayed until the set time */\n  publish_date?: number;\n  /**\n   * `true` - post comments will be closed\n   * `false` - permission to leave post comments will be up to user's settings (default)\n   */\n  close_comments?: boolean;\n  /** Source of the post. Internal and external links supported */\n  copyright?: string;\n} & (\n  | {\n      message?: string;\n      attachments: string;\n    }\n  | {\n      message: string;\n      attachments?: string;\n    }\n);\n\n/**\n * Result data user in Share\n */\nexport type ShareUserInfo = {\n  /** User id */\n  id: number;\n  /** User name */\n  first_name: string;\n  /** User surname */\n  last_name: string;\n  /** User sex: 0 - not specified, 1 - female, 2 - male */\n  sex: 0 | 1 | 2;\n  /** User profile photo */\n  photo: string;\n};\n\n/**\n * Result data of link share\n */\nexport type LinkShareResult =\n  | { type: 'message'; users: ShareUserInfo[] }\n  | { type: 'post'; post_id: string }\n  | { type: 'story'; story_id: string }\n  | { type: 'qr' | 'link' | 'other' };\n\nexport type StoryObjectTransform = {\n  /** Rotation, from 0 to 359 deg. Counterclockwise rotation. */\n  rotation?: number;\n  /**\n   * The desired width of the sticker relative to the screen is (0, 1), the\n   * height will be calculated taking into account maintaining the aspect ratio\n   * of the content.\n   */\n  relation_width?: number;\n  /** From -1 to 1 of screen with */\n  translation_x?: number;\n  /** From -1 to 1 of screen height */\n  translation_y?: number;\n  /** Gravity. Default: center. */\n  gravity?:\n    | 'left_top'\n    | 'left_center'\n    | 'left_bottom'\n    | 'center_top'\n    | 'center'\n    | 'center_bottom'\n    | 'right_top'\n    | 'right_center'\n    | 'right_bottom';\n};\n\nexport type StoryActionHashtag = {\n  /** Hashtag text */\n  hashtag: string;\n  /** Hashtag style. Default: `blue_gradient` */\n  style?: 'transparent' | 'blue_gradient';\n};\n\nexport type StoryActionMention = {\n  /**\n   * Text in mention format:\n   * for users: \"[id123|name]\"\n   * for communities: \"[club123|name]\"\n   */\n  mention: string;\n  /** Mention style. Default: `red_gradient` */\n  style?: 'transparent' | 'red_gradient';\n};\n\nexport type StoryActionPlace = {\n  /** Place id */\n  place_id: number;\n  /** Place name */\n  title: string;\n  /** Category id */\n  category_id?: number;\n  /** Style */\n  style?: 'transparent' | 'blue' | 'green' | 'white';\n};\n\n/**\n * Story action link\n */\nexport type StoryActionLink = {\n  /** Content link */\n  link: string;\n  /**\n   * The value of the string that will be displayed on the client when\n   * clicking on the tooltip.\n   */\n  tooltip_text_key:\n    | 'tooltip_open_post'\n    | 'tooltip_open_photo'\n    | 'tooltip_open_page'\n    | 'tooltip_open_default';\n};\n\nexport type StoryActionTime = {\n  /** Time style. Default: `date` */\n  style?: 'black' | 'white' | 'green' | 'text' | 'date';\n  /** Timestamp in milliseconds */\n  timestamp_ms?: number;\n  /**\n   * Date (`timestamp_ms` alternative) in format:\n   * `yyyy:MM:dd HH:mm:ss`\n   * (this format is chosen to unify dates from exif fields https://vk.cc/9NrgMr) */\n  date?: string;\n  /** Top sticker title, meaning only for date style */\n  title?: string;\n};\n\nexport type StoryActionGeo = {\n  /** Place id */\n  place_id: number;\n  /** Place name */\n  text: string;\n  /** Category id */\n  category_id?: number;\n  /** Sticker style. Default: `blue`*/\n  style?: 'blue' | 'green' | 'white' | 'transparent';\n};\n\nexport type StoryActionQuestion = {\n  /** Question text */\n  question: string;\n  /** Button text */\n  button: string;\n};\n\nexport type StoryActionText = {\n  /**\n   * The text may contain mentions/hashtags in the formats specified with\n   * the corresponding objects\n   */\n  text: string;\n  /** Text style */\n  style?: 'classic' | 'cursive' | 'marker' | 'italics' | 'typewriter' | 'poster' | 'retro';\n  /** Background/border style. Default: `none` */\n  background_style?: 'none' | 'alpha' | 'solid' | 'sticker' | 'neon';\n  /** Horizontal alignment */\n  alignment?: 'center' | 'left' | 'right';\n  /** HEX color */\n  selection_color?: string;\n};\n\nexport type StoryActionEmoji = {\n  emoji: string;\n};\n\nexport type StoryActionSticker = {\n  /** Sticker id */\n  sticker_id: number;\n  /** Sticker url */\n  url?: string;\n  /** JSON sticker url */\n  animation_url?: string;\n  /** Sticker pack id */\n  pack_id?: number;\n};\n\nexport type StoryActionMarketItem = {\n  /** Product name */\n  title: string;\n  /** Product id in VK Market */\n  product_id?: number;\n  /** Owner id of product in VK Market */\n  owner_id?: number;\n  /** Aliexpress product link */\n  link?: string;\n};\n\n/**\n * Story action type\n */\nexport type StoryAction =\n  | StoryActionHashtag\n  | StoryActionMention\n  | StoryActionPlace\n  | StoryActionLink\n  | StoryActionTime\n  | StoryActionGeo\n  | StoryActionQuestion\n  | StoryActionText\n  | StoryActionEmoji\n  | StoryActionSticker\n  | StoryActionMarketItem;\n\nexport type StoryClickableZoneOrigin = {\n  x: number;\n  y: number;\n};\n\nexport type StoryClickableZone = {\n  /** Action type */\n  action_type: 'hashtag' | 'mention' | 'link' | 'place' | 'question' | 'market_item';\n  /** Action data */\n  action: StoryAction;\n  /**\n   * Clickable area border on the sticker. The points should be located\n   * clockwise, forming a closed square.\n   */\n  clickable_area?: StoryClickableZoneOrigin[];\n};\n\nexport type StoryRenderableSticker = (\n  | {\n      /** Content url */\n      url: string;\n    }\n  | {\n      /** Base64 string with BLOB */\n      blob: string;\n    }\n) & {\n  /** Story type */\n  content_type: 'image' | 'gif' | 'video';\n  /** Object transform */\n  transform?: StoryObjectTransform;\n  /** Clickable zones */\n  clickable_zones?: StoryClickableZone[];\n  /** Content width */\n  original_width?: number;\n  /** Content height */\n  original_height?: number;\n  /** Whether the sticker can be removed from the screen, `true` by default */\n  can_delete?: boolean;\n};\n\nexport type StoryNativeSticker = {\n  /** Story action type */\n  action_type:\n    | 'text'\n    | 'hashtag'\n    | 'mention'\n    | 'time'\n    | 'place'\n    | 'question'\n    | 'emoji'\n    | 'sticker'\n    | 'market_item';\n  /** Story action */\n  action: StoryAction;\n  /** Object transform */\n  transform?: StoryObjectTransform;\n  /** Whether the sticker can be removed from the screen, `true` by default */\n  can_delete?: boolean;\n};\n\n/**\n * Sticker container\n */\nexport type StickerContainer =\n  | {\n      sticker_type: 'renderable';\n      sticker: StoryRenderableSticker;\n    }\n  | {\n      sticker_type: 'native';\n      sticker: StoryNativeSticker;\n    };\n\n/** Link text for moving from a story (community stories only) */\nexport type StoryButtonText =\n  | 'learn_more' // «Подробнее» (default)\n  | 'to_store' // «В магазин»\n  | 'vote' // «Голосовать»\n  | 'more' // «Ещё»\n  | 'book' // «Забронировать»\n  | 'order' // «Заказать»\n  | 'enroll' // «Записаться»\n  | 'fill' // «Заполнить»\n  | 'signup' // «Зарегистрироваться»\n  | 'buy' // «Купить»\n  | 'ticket' // «Купить билет»\n  | 'write' // «Написать»\n  | 'open' // «Открыть»\n  | 'view' // «Посмотреть»\n  | 'go_to' // «Перейти»\n  | 'contact' // «Связаться»\n  | 'watch' // «Смотреть»\n  | 'play' // «Слушать»\n  | 'install' // «Установить»\n  | 'read'; // «Читать»\n\nexport type StoryAttachment = {\n  /** Button text key (см. link_text в stories.getVideoUploadServer) */\n  text: string;\n  /** Attach type */\n  type: 'url' | 'audio' | 'video' | 'photo';\n  /** Content url */\n  url?: string;\n  /** Owner id */\n  owner_id?: number;\n  /** Object id */\n  id?: number;\n  /** Access key for the attachment */\n  access_key?: string;\n};\n\nexport type ShowStoryBoxOptions = {\n  /** Story type */\n  background_type: 'image' | 'video' | 'none';\n  /** Camera type (only for `background_type: none`). Default: `back` */\n  camera_type?: 'back' | 'front';\n  /** Link to an image or video (should follow a direct link to mp4) */\n  url?: string;\n  /** Base64 string with BLOB (supported only for image) */\n  blob?: string;\n  /** Lock to move the photo */\n  locked?: boolean;\n  /** Story attachment object */\n  attachment?: StoryAttachment;\n  /** Array of sticker objects */\n  stickers?: StickerContainer[];\n};\n\n/**\n * Params of method for subscribing to a story updates\n */\nexport type SubscribeStoryAppOptions = {\n  /** Story owner id */\n  story_owner_id: number;\n  /** Story id */\n  story_id: number;\n  /** Clickable sticker id */\n  sticker_id: number;\n  /** Private stories access key */\n  access_key?: string;\n};\n\n/**\n * Group info\n */\nexport type GroupInfo = {\n  id: number;\n  name: string;\n  screen_name: string;\n  is_closed: number;\n  type: string;\n  is_member: number;\n  description: string;\n  photo_50: string;\n  photo_100: string;\n  photo_200: string;\n};\n\n/*\n * Options for request to adding a user to an audience with a retargeting pixel\n */\nexport type RetargetingPixelOptions = {\n  /** Pixel code, e.g. `VK-RTRG-447253-dUuM` */\n  pixel_code: string;\n  /** Event id, pixel rule */\n  event?: string;\n  /** ID of the retargeting group to which the current user should be added */\n  target_group_id?: number;\n  /** ID of the price list */\n  price_list_id?: number;\n  /** Type of product event */\n  products_event?: string;\n  /** Product params */\n  products_params?: string;\n};\n\n/**\n * Type for params field in OKWebAppCallAPIMethod\n */\nexport type OKCallApiParams = {\n  application_key: string;\n  access_token: string;\n  format?: string;\n\n  [key: string]: any;\n};\n\n/**\n * Type for VKWebAppCheckAllowedScopes method results\n */\nexport type VKWebAppCheckAllowedScopesResponseEntry = {\n  scope: string;\n  allowed: boolean;\n};\n\n/**\n * Params of VKWebAppShowActionSheet method\n */\nexport type ShowActionSheetOptions = {\n  /** Array of onboarding slides */\n  slides?: ActionSheetSlide[];\n};\n\ntype ActionSheetSlide = {\n  media: ActionSheetSlideMedia;\n  title: string;\n  subtitle: string;\n};\n\ntype ActionSheetSlideMedia = (\n  | {\n      /** Content url */\n      url: string;\n    }\n  | {\n      /** Base64 string with BLOB */\n      blob: string;\n    }\n) & {\n  /** Media type */\n  type: 'image' | 'gif' | 'video';\n};\n\nexport type ShowActionSheetResponse = {\n  result: true;\n} & (\n  | {\n      action: 'confirm' | 'cancel';\n    }\n  | {\n      action: 'reject';\n      slide_index: number;\n    }\n);\n\nexport type ShowSlidesSheetRequest = {\n  slides: ActionSheetSlide[];\n};\n\nexport type ShowSlidesSheetResponse = ShowActionSheetResponse;\n\nexport enum EGrantedPermission {\n  CAMERA = 'camera',\n  LOCATION = 'location',\n  PHOTO = 'photo',\n}\n\nexport type GetGrantedPermissionsResponse = {\n  permissions: EGrantedPermission[];\n};\n\nexport type CreateHashRequest = {\n  payload?: string;\n};\n\nexport type CreateHashResponse = {\n  ts: number;\n  hash: string;\n  payload?: string;\n};\n\nexport type ChangeFragmentResponse = {\n  location: string;\n};\n\nexport enum EGetLaunchParamsResponseLanguages {\n  RU = 'ru',\n  UK = 'uk',\n  UA = 'ua',\n  EN = 'en',\n  BE = 'be',\n  KZ = 'kz',\n  PT = 'pt',\n  ES = 'es',\n}\n\nexport enum EGetLaunchParamsResponseGroupRole {\n  ADMIN = 'admin',\n  EDITOR = 'editor',\n  MEMBER = 'member',\n  MODER = 'moder',\n  NONE = 'none',\n}\n\nexport enum EGetLaunchParamsResponsePlatforms {\n  DESKTOP_WEB = 'desktop_web',\n  MOBILE_WEB = 'mobile_web',\n  MOBILE_ANDROID = 'mobile_android',\n  MOBILE_ANDROID_MESSENGER = 'mobile_android_messenger',\n  MOBILE_IPHONE = 'mobile_iphone',\n  MOBILE_IPHONE_MESSENGER = 'mobile_iphone_messenger',\n  MOBILE_IPAD = 'mobile_ipad',\n}\n\nexport type GetLaunchParamsResponse = {\n  vk_user_id: number;\n  vk_app_id: number;\n  vk_is_app_user: 0 | 1;\n  vk_are_notifications_enabled: 0 | 1;\n  vk_language: EGetLaunchParamsResponseLanguages;\n  vk_ref: string;\n  vk_access_token_settings: string;\n  vk_group_id?: number;\n  vk_viewer_group_role?: EGetLaunchParamsResponseGroupRole;\n  vk_platform: EGetLaunchParamsResponsePlatforms;\n  vk_is_favorite: 0 | 1;\n  vk_ts: number;\n  sign: string;\n};\n\nexport type ConversionHitRequest = {\n  pixel_code: string;\n  conversion_event: string;\n  conversion_value: number;\n};\n\nexport type ConversionHitResponse = {\n  result: true;\n};\n\nexport type VKWebAppShowBannerAdResponse = {\n  result: boolean;\n  banner_width: number;\n  banner_height: number;\n  banner_location: BannerAdLocation;\n  layout_type: BannerAdLayoutType;\n};\n\nexport type VKWebAppCheckBannerAdResponse = VKWebAppShowBannerAdResponse;\nexport type VKWebAppHideBannerAdResponse = VKWebAppShowBannerAdResponse;\n\nexport type VKWebAppShowOrderBoxResponse = {\n  status: OrderBoxShowingStatus;\n  order_id: string;\n};\n\nexport type ScrollTopResponse = {\n  scrollTop: number;\n};\n\nexport type ShowSubscriptionBoxRequest = {\n  action: 'create' | 'resume' | 'cancel';\n  item?: string;\n  subscription_id?: string;\n};\n\nexport type ShowSubscriptionBoxResponse = {\n  success: boolean;\n};\n\n/**\n * Map of types of request props of VK Bridge methods\n */\n/* eslint-disable @typescript-eslint/ban-types */\nexport type RequestPropsMap = {\n  VKWebAppInit: {};\n  VKWebAppAddToCommunity: {};\n  VKWebAppAddToHomeScreen: {};\n  VKWebAppAddToHomeScreenInfo: {};\n  VKWebAppAllowMessagesFromGroup: { group_id: number; key?: string };\n  VKWebAppAllowNotifications: {};\n  OKWebAppCallAPIMethod: { method: string; params: OKCallApiParams };\n  VKWebAppCallAPIMethod: {\n    method: string;\n    params: Record<'access_token' | 'v', string> & Record<string, string | number>;\n  };\n  VKWebAppCopyText: { text: string };\n  VKWebAppCreateHash: CreateHashRequest;\n  VKWebAppDownloadFile: { url: string; filename: string };\n  VKWebAppGetAuthToken: { app_id: number; scope: PersonalAuthScope | string };\n  VKWebAppClose: { status: AppCloseStatus; payload?: any };\n  VKWebAppOpenApp: { app_id: number; location?: string };\n  VKWebAppDenyNotifications: {};\n  VKWebAppFlashGetInfo: {};\n  VKWebAppFlashSetLevel: { level: number };\n  VKWebAppGetClientVersion: {};\n  VKWebAppGetCommunityToken: CommunityTokenRequestOptions;\n  VKWebAppGetConfig: {};\n  VKWebAppGetLaunchParams: {};\n  VKWebAppAudioPause: {};\n  VKWebAppGetEmail: {};\n  VKWebAppGetFriends: { multi?: boolean };\n  VKWebAppGetGeodata: {};\n  VKWebAppGetGrantedPermissions: {};\n  VKWebAppGetPersonalCard: { type: PersonalCardType[] };\n  VKWebAppGetPhoneNumber: {};\n  VKWebAppGetUserInfo: { user_id?: number };\n  VKWebAppJoinGroup: { group_id: number };\n  VKWebAppLeaveGroup: { group_id: number };\n  VKWebAppAddToMenu: {};\n  VKWebAppOpenCodeReader: {};\n  VKWebAppOpenContacts: {};\n  VKWebAppOpenPayForm: VKPayProps<VKPayActionType>;\n  VKWebAppOpenQR: {};\n  VKWebAppResizeWindow: { width: number; height?: number };\n  VKWebAppScroll: { top: number; speed?: number };\n  VKWebAppSendToClient: { fragment?: string };\n  VKWebAppSetLocation: { location: string; replace_state?: boolean };\n  VKWebAppSetViewSettings: {\n    status_bar_style: AppearanceType;\n    /** Android only */\n    action_bar_color?: 'none' | string;\n    /** Android only */\n    navigation_bar_color?: string;\n  };\n  VKWebAppShare: { link?: string };\n  VKWebAppShowCommunityWidgetPreviewBox: WidgetPreviewRequestOptions;\n  VKWebAppShowImages: { images: string[]; start_index?: number };\n  VKWebAppShowInviteBox: {};\n  VKWebAppShowLeaderBoardBox: { user_result: number };\n  VKWebAppShowMessageBox: MessageRequestOptions;\n  VKWebAppCheckBannerAd: {};\n  VKWebAppHideBannerAd: {};\n  VKWebAppShowBannerAd: ShowBannerAdRequest;\n  VKWebAppShowNativeAds: ShowNativeAdsRequest;\n  VKWebAppCheckNativeAds: CheckNativeAdsRequest;\n  VKWebAppShowOrderBox: OrderRequestOptions;\n  VKWebAppShowRequestBox: RequestForRequestOptions;\n  VKWebAppShowWallPostBox: WallPostRequestOptions;\n  VKWebAppShowSubscriptionBox: ShowSubscriptionBoxRequest;\n  VKWebAppOpenWallPost: { post_id: number; owner_id: number };\n  VKWebAppStorageGet: { keys: string[] };\n  VKWebAppStorageGetKeys: { count: number; offset: number };\n  VKWebAppStorageSet: { key: string; value: string };\n  VKWebAppTapticImpactOccurred: { style: TapticVibrationPowerType };\n  VKWebAppTapticNotificationOccurred: { type: TapticNotificationType };\n  VKWebAppTapticSelectionChanged: {};\n  VKWebAppAddToFavorites: {};\n  VKWebAppSendPayload: { group_id: number; payload: any };\n  VKWebAppDisableSwipeBack: {};\n  VKWebAppEnableSwipeBack: {};\n  VKWebAppSetSwipeSettings: { history: boolean };\n  VKWebAppShowStoryBox: ShowStoryBoxOptions;\n  VKWebAppAccelerometerStart: { refresh_rate?: string };\n  VKWebAppAccelerometerStop: {};\n  VKWebAppGyroscopeStart: {};\n  VKWebAppGyroscopeStop: {};\n  VKWebAppDeviceMotionStart: {};\n  VKWebAppDeviceMotionStop: {};\n  VKWebAppSubscribeStoryApp: SubscribeStoryAppOptions;\n  VKWebAppGetGroupInfo: { group_id: number };\n  VKWebAppLibverifyRequest: { phone: string };\n  VKWebAppLibverifyCheck: { code: string };\n  VKWebAppRetargetingPixel: RetargetingPixelOptions;\n  VKWebAppCheckAllowedScopes: { scopes: string };\n  VKWebAppConversionHit: ConversionHitRequest;\n  VKWebAppCheckSurvey: {};\n  VKWebAppShowSurvey: {};\n  VKWebAppScrollTop: {};\n  VKWebAppScrollTopStart: {};\n  VKWebAppScrollTopStop: {};\n  VKWebAppShowActionSheet: ShowActionSheetOptions;\n  VKWebAppShowSlidesSheet: ShowSlidesSheetRequest;\n};\n\n/**\n * Map of types of response data of VK Bridge methods\n */\nexport type ReceiveDataMap = {\n  VKWebAppInit: { result: true };\n  VKWebAppAddToCommunity: { group_id: number };\n  VKWebAppAddToHomeScreen: { result: true };\n  VKWebAppAddToHomeScreenInfo: { is_feature_supported: boolean; is_added_to_home_screen: boolean };\n  VKWebAppAllowMessagesFromGroup: { result: true };\n  VKWebAppAllowNotifications: { result: true };\n  OKWebAppCallAPIMethod: { response: any };\n  VKWebAppCallAPIMethod: { response: any };\n  VKWebAppCopyText: { result: true };\n  VKWebAppCreateHash: CreateHashResponse;\n  VKWebAppDownloadFile: { result: true };\n  VKWebAppGetAuthToken: { access_token: string; scope: string };\n  VKWebAppClose: { payload: any };\n  VKWebAppOpenApp: { result: true };\n  VKWebAppDenyNotifications: { result: true };\n  VKWebAppFlashGetInfo: { is_available: boolean; level: number };\n  VKWebAppFlashSetLevel: { result: true };\n  VKWebAppGetClientVersion: { platform: string; version: string };\n  VKWebAppGetEmail: { email: string; sign: string };\n  VKWebAppGetFriends: { users: UserGetFriendsFriend[] };\n  VKWebAppGetGeodata:\n    | { available: 0 }\n    | { available: 1; lat: number; long: number; accuracy: number };\n  VKWebAppGetGrantedPermissions: GetGrantedPermissionsResponse;\n  VKWebAppGetPersonalCard: PersonalCardData;\n  VKWebAppGetPhoneNumber: { phone_number: string; sign: string; is_verified: boolean };\n  VKWebAppGetUserInfo: UserInfo;\n  VKWebAppJoinGroup: { result: true };\n  VKWebAppLeaveGroup: { result: true };\n  VKWebAppAddToMenu: { result: true };\n  VKWebAppOpenCodeReader: CodeReaderOutput;\n  VKWebAppOpenQR: CodeReaderOutput;\n  VKWebAppOpenContacts: SelectedContact;\n  VKWebAppOpenPayForm: TransactionResult | { result: TransactionResult };\n  VKWebAppResizeWindow: { width: number; height: number };\n  VKWebAppScroll: { top: number; height: number };\n  VKWebAppSendToClient: { result: true };\n  VKWebAppSetLocation: { result: true };\n  VKWebAppSetViewSettings: { result: true };\n  VKWebAppShare: LinkShareResult[];\n  VKWebAppShowCommunityWidgetPreviewBox: { result: true };\n  VKWebAppShowImages: { result: true };\n  VKWebAppShowInviteBox: { success: true };\n  VKWebAppShowLeaderBoardBox: { success: boolean };\n  VKWebAppShowMessageBox: { result: true };\n  VKWebAppCheckBannerAd: VKWebAppCheckBannerAdResponse;\n  VKWebAppHideBannerAd: VKWebAppHideBannerAdResponse;\n  VKWebAppShowBannerAd: VKWebAppShowBannerAdResponse;\n  VKWebAppShowNativeAds: { result: true };\n  VKWebAppCheckNativeAds: { result: boolean };\n  VKWebAppShowOrderBox: VKWebAppShowOrderBoxResponse;\n  VKWebAppShowRequestBox: RequestResult;\n  VKWebAppShowWallPostBox: { post_id: number | string };\n  VKWebAppShowSubscriptionBox: ShowSubscriptionBoxResponse;\n  VKWebAppOpenWallPost: { result: true };\n  VKWebAppStorageGet: { keys: Array<{ key: string; value: string }> };\n  VKWebAppStorageGetKeys: { keys: string[] };\n  VKWebAppStorageSet: { result: true };\n  VKWebAppTapticImpactOccurred: { result: true };\n  VKWebAppTapticNotificationOccurred: { result: true };\n  VKWebAppTapticSelectionChanged: { result: true };\n  VKWebAppAddToFavorites: { result: true };\n  VKWebAppSendPayload: { result: true };\n  VKWebAppGetCommunityToken: { access_token: string; scope: string };\n  VKWebAppAudioPause: { result: true };\n  VKWebAppAudioPaused: { position: number; type: string; id: string };\n  VKWebAppAudioStopped: {}; // Always empty\n  VKWebAppAudioTrackChanged: { type: string; id: string };\n  VKWebAppAudioUnpaused: { type: string; id: string };\n  VKWebAppInitAds: { init: 'true' | 'false' };\n  VKWebAppLoadAds: { load: 'true' | 'false' };\n  VKWebAppUpdateConfig: ParentConfigData;\n  VKWebAppGetConfig: ParentConfigData;\n  VKWebAppGetLaunchParams: GetLaunchParamsResponse;\n  VKWebAppUpdateInsets: { insets: Insets };\n  VKWebAppViewHide: {}; // Always empty\n  VKWebAppViewRestore: {}; // Always empty\n  VKWebAppDisableSwipeBack: { result: true };\n  VKWebAppEnableSwipeBack: { result: true };\n  VKWebAppSetSwipeSettings: { result: true };\n  VKWebAppShowStoryBox: { result: true };\n  VKWebAppAccelerometerStart: { result: true };\n  VKWebAppAccelerometerStop: { result: true };\n  VKWebAppGyroscopeStart: { result: true };\n  VKWebAppGyroscopeStop: { result: true };\n  VKWebAppAccelerometerChanged: { x: string; y: string; z: string };\n  VKWebAppGyroscopeChanged: { x: string; y: string; z: string };\n  VKWebAppDeviceMotionStart: { result: true };\n  VKWebAppDeviceMotionChanged: { alpha: string; beta: string; gamma: string };\n  VKWebAppDeviceMotionStop: { result: true };\n  VKWebAppLocationChanged: { location: string };\n  VKWebAppSubscribeStoryApp: { access_key: string };\n  VKWebAppGetGroupInfo: GroupInfo;\n  VKWebAppLibverifyOnConfirmed: { validate_session: string; validate_token: string };\n  VKWebAppLibverifyOnFailed: { code: VKWebAppLibverifyOnFailedCode };\n  VKWebAppRetargetingPixel: { result: true };\n  VKWebAppCheckAllowedScopes: { result: VKWebAppCheckAllowedScopesResponseEntry[] };\n  VKWebAppChangeFragment: ChangeFragmentResponse;\n  VKWebAppConversionHit: ConversionHitResponse;\n  VKWebAppCheckSurvey: { result: boolean };\n  VKWebAppShowSurvey: { result: boolean };\n  VKWebAppScrollTop: ScrollTopResponse;\n  VKWebAppScrollTopStart: { result: true };\n  VKWebAppScrollTopStop: { result: true };\n  VKWebAppShowActionSheet: ShowActionSheetResponse;\n  VKWebAppShowSlidesSheet: ShowSlidesSheetResponse;\n};\n/* eslint-enable @typescript-eslint/ban-types */\n\ntype EventReceiveNames<\n  T extends keyof RequestPropsMap,\n  R extends string,\n  F extends string,\n> = Record<T, { result: R; failed: F }>;\n\n/**\n * Map of event names.\n */\nexport type ReceiveEventMap = EventReceiveNames<\n  'VKWebAppInit',\n  'VKWebAppInitResult',\n  'VKWebAppInitFailed'\n> &\n  EventReceiveNames<\n    'VKWebAppAddToCommunity',\n    'VKWebAppAddToCommunityResult',\n    'VKWebAppAddToCommunityFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppAddToHomeScreen',\n    'VKWebAppAddToHomeScreenResult',\n    'VKWebAppAddToHomeScreenFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppAddToHomeScreenInfo',\n    'VKWebAppAddToHomeScreenInfoResult',\n    'VKWebAppAddToHomeScreenInfoFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppAllowMessagesFromGroup',\n    'VKWebAppAllowMessagesFromGroupResult',\n    'VKWebAppAllowMessagesFromGroupFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppAllowNotifications',\n    'VKWebAppAllowNotificationsResult',\n    'VKWebAppAllowNotificationsFailed'\n  > &\n  EventReceiveNames<\n    'OKWebAppCallAPIMethod',\n    'OKWebAppCallAPIMethodResult',\n    'OKWebAppCallAPIMethodFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppCallAPIMethod',\n    'VKWebAppCallAPIMethodResult',\n    'VKWebAppCallAPIMethodFailed'\n  > &\n  EventReceiveNames<'VKWebAppCopyText', 'VKWebAppCopyTextResult', 'VKWebAppCopyTextFailed'> &\n  EventReceiveNames<'VKWebAppCreateHash', 'VKWebAppCreateHashResult', 'VKWebAppCreateHashFailed'> &\n  EventReceiveNames<\n    'VKWebAppDownloadFile',\n    'VKWebAppDownloadFileResult',\n    'VKWebAppDownloadFileFailed'\n  > &\n  // NOTE: Different request/response events\n  EventReceiveNames<\n    'VKWebAppGetAuthToken',\n    'VKWebAppAccessTokenReceived',\n    'VKWebAppAccessTokenFailed'\n  > &\n  EventReceiveNames<'VKWebAppClose', 'VKWebAppCloseResult', 'VKWebAppCloseFailed'> &\n  EventReceiveNames<'VKWebAppOpenApp', 'VKWebAppOpenAppResult', 'VKWebAppOpenAppFailed'> &\n  EventReceiveNames<\n    'VKWebAppDenyNotifications',\n    'VKWebAppDenyNotificationsResult',\n    'VKWebAppDenyNotificationsFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppFlashGetInfo',\n    'VKWebAppFlashGetInfoResult',\n    'VKWebAppFlashGetInfoFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppFlashSetLevel',\n    'VKWebAppFlashSetLevelResult',\n    'VKWebAppFlashSetLevelFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppGetClientVersion',\n    'VKWebAppGetClientVersionResult',\n    'VKWebAppGetClientVersionFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppGetCommunityToken',\n    'VKWebAppGetCommunityTokenResult',\n    'VKWebAppGetCommunityTokenFailed'\n  > &\n  EventReceiveNames<'VKWebAppGetConfig', 'VKWebAppGetConfigResult', 'VKWebAppGetConfigFailed'> &\n  EventReceiveNames<\n    'VKWebAppGetLaunchParams',\n    'VKWebAppGetLaunchParamsResult',\n    'VKWebAppGetLaunchParamsFailed'\n  > &\n  EventReceiveNames<'VKWebAppAudioPause', 'VKWebAppAudioPauseResult', 'VKWebAppAudioPauseFailed'> &\n  EventReceiveNames<'VKWebAppGetEmail', 'VKWebAppGetEmailResult', 'VKWebAppGetEmailFailed'> &\n  EventReceiveNames<'VKWebAppGetFriends', 'VKWebAppGetFriendsResult', 'VKWebAppGetFriendsFailed'> &\n  EventReceiveNames<'VKWebAppGetGeodata', 'VKWebAppGetGeodataResult', 'VKWebAppGetGeodataFailed'> &\n  EventReceiveNames<\n    'VKWebAppGetGrantedPermissions',\n    'VKWebAppGetGrantedPermissionsResult',\n    'VKWebAppGetGrantedPermissionsFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppGetPersonalCard',\n    'VKWebAppGetPersonalCardResult',\n    'VKWebAppGetPersonalCardFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppGetPhoneNumber',\n    'VKWebAppGetPhoneNumberResult',\n    'VKWebAppGetPhoneNumberFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppGetUserInfo',\n    'VKWebAppGetUserInfoResult',\n    'VKWebAppGetUserInfoFailed'\n  > &\n  EventReceiveNames<'VKWebAppJoinGroup', 'VKWebAppJoinGroupResult', 'VKWebAppJoinGroupFailed'> &\n  EventReceiveNames<'VKWebAppLeaveGroup', 'VKWebAppLeaveGroupResult', 'VKWebAppLeaveGroupFailed'> &\n  EventReceiveNames<'VKWebAppAddToMenu', 'VKWebAppAddToMenuResult', 'VKWebAppAddToMenuFailed'> &\n  EventReceiveNames<\n    'VKWebAppOpenCodeReader',\n    'VKWebAppOpenCodeReaderResult',\n    'VKWebAppOpenCodeReaderFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppOpenContacts',\n    'VKWebAppOpenContactsResult',\n    'VKWebAppOpenContactsFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppOpenPayForm',\n    'VKWebAppOpenPayFormResult',\n    'VKWebAppOpenPayFormFailed'\n  > &\n  EventReceiveNames<'VKWebAppOpenQR', 'VKWebAppOpenQRResult', 'VKWebAppOpenQRFailed'> &\n  EventReceiveNames<\n    'VKWebAppResizeWindow',\n    'VKWebAppResizeWindowResult',\n    'VKWebAppResizeWindowFailed'\n  > &\n  EventReceiveNames<'VKWebAppScroll', 'VKWebAppScrollResult', 'VKWebAppScrollFailed'> &\n  EventReceiveNames<\n    'VKWebAppSendToClient',\n    'VKWebAppSendToClientResult',\n    'VKWebAppSendToClientFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppSetLocation',\n    'VKWebAppSetLocationResult',\n    'VKWebAppSetLocationFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppSetViewSettings',\n    'VKWebAppSetViewSettingsResult',\n    'VKWebAppSetViewSettingsFailed'\n  > &\n  EventReceiveNames<'VKWebAppShare', 'VKWebAppShareResult', 'VKWebAppShareFailed'> &\n  EventReceiveNames<\n    'VKWebAppShowCommunityWidgetPreviewBox',\n    'VKWebAppShowCommunityWidgetPreviewBoxResult',\n    'VKWebAppShowCommunityWidgetPreviewBoxFailed'\n  > &\n  EventReceiveNames<'VKWebAppShowImages', 'VKWebAppShowImagesResult', 'VKWebAppShowImagesFailed'> &\n  EventReceiveNames<\n    'VKWebAppShowInviteBox',\n    'VKWebAppShowInviteBoxResult',\n    'VKWebAppShowInviteBoxFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppShowLeaderBoardBox',\n    'VKWebAppShowLeaderBoardBoxResult',\n    'VKWebAppShowLeaderBoardBoxFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppShowMessageBox',\n    'VKWebAppShowMessageBoxResult',\n    'VKWebAppShowMessageBoxFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppCheckBannerAd',\n    'VKWebAppCheckBannerAdResult',\n    'VKWebAppCheckBannerAdFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppHideBannerAd',\n    'VKWebAppHideBannerAdResult',\n    'VKWebAppHideBannerAdFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppShowBannerAd',\n    'VKWebAppShowBannerAdResult',\n    'VKWebAppShowBannerAdFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppShowNativeAds',\n    'VKWebAppShowNativeAdsResult',\n    'VKWebAppShowNativeAdsFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppCheckNativeAds',\n    'VKWebAppCheckNativeAdsResult',\n    'VKWebAppCheckNativeAdsFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppShowOrderBox',\n    'VKWebAppShowOrderBoxResult',\n    'VKWebAppShowOrderBoxFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppShowRequestBox',\n    'VKWebAppShowRequestBoxResult',\n    'VKWebAppShowRequestBoxFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppShowWallPostBox',\n    'VKWebAppShowWallPostBoxResult',\n    'VKWebAppShowWallPostBoxFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppShowSubscriptionBox',\n    'VKWebAppShowSubscriptionBoxResult',\n    'VKWebAppShowSubscriptionBoxFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppOpenWallPost',\n    'VKWebAppOpenWallPostResult',\n    'VKWebAppOpenWallPostFailed'\n  > &\n  EventReceiveNames<'VKWebAppStorageGet', 'VKWebAppStorageGetResult', 'VKWebAppStorageGetFailed'> &\n  EventReceiveNames<\n    'VKWebAppStorageGetKeys',\n    'VKWebAppStorageGetKeysResult',\n    'VKWebAppStorageGetKeysFailed'\n  > &\n  EventReceiveNames<'VKWebAppStorageSet', 'VKWebAppStorageSetResult', 'VKWebAppStorageSetFailed'> &\n  EventReceiveNames<\n    'VKWebAppTapticImpactOccurred',\n    'VKWebAppTapticImpactOccurredResult',\n    'VKWebAppTapticImpactOccurredFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppTapticNotificationOccurred',\n    'VKWebAppTapticNotificationOccurredResult',\n    'VKWebAppTapticNotificationOccurredFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppTapticSelectionChanged',\n    'VKWebAppTapticSelectionChangedResult',\n    'VKWebAppTapticSelectionChangedFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppAddToFavorites',\n    'VKWebAppAddToFavoritesResult',\n    'VKWebAppAddToFavoritesFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppSendPayload',\n    'VKWebAppSendPayloadResult',\n    'VKWebAppSendPayloadFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppDisableSwipeBack',\n    'VKWebAppDisableSwipeBackResult',\n    'VKWebAppDisableSwipeBackFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppEnableSwipeBack',\n    'VKWebAppEnableSwipeBackResult',\n    'VKWebAppEnableSwipeBackFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppSetSwipeSettings',\n    'VKWebAppSetSwipeSettingsResult',\n    'VKWebAppSetSwipeSettingsFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppShowStoryBox',\n    'VKWebAppShowStoryBoxResult',\n    'VKWebAppShowStoryBoxFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppAccelerometerStart',\n    'VKWebAppAccelerometerStartResult',\n    'VKWebAppAccelerometerStartFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppAccelerometerStop',\n    'VKWebAppAccelerometerStopResult',\n    'VKWebAppAccelerometerStopFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppGyroscopeStart',\n    'VKWebAppGyroscopeStartResult',\n    'VKWebAppGyroscopeStartFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppGyroscopeStop',\n    'VKWebAppGyroscopeStopResult',\n    'VKWebAppGyroscopeStopFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppDeviceMotionStart',\n    'VKWebAppDeviceMotionStartResult',\n    'VKWebAppDeviceMotionStartFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppDeviceMotionStop',\n    'VKWebAppDeviceMotionStopResult',\n    'VKWebAppDeviceMotionStopFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppSubscribeStoryApp',\n    'VKWebAppSubscribeStoryAppResult',\n    'VKWebAppSubscribeStoryAppFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppGetGroupInfo',\n    'VKWebAppGetGroupInfoResult',\n    'VKWebAppGetGroupInfoFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppRetargetingPixel',\n    'VKWebAppRetargetingPixelResult',\n    'VKWebAppRetargetingPixelFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppCheckAllowedScopes',\n    'VKWebAppCheckAllowedScopesResult',\n    'VKWebAppCheckAllowedScopesFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppCheckSurvey',\n    'VKWebAppCheckSurveyResult',\n    'VKWebAppCheckSurveyFailed'\n  > &\n  EventReceiveNames<'VKWebAppShowSurvey', 'VKWebAppShowSurveyResult', 'VKWebAppShowSurveyFailed'> &\n  EventReceiveNames<\n    'VKWebAppConversionHit',\n    'VKWebAppConversionHitResult',\n    'VKWebAppConversionHitFailed'\n  > &\n  EventReceiveNames<'VKWebAppScrollTop', 'VKWebAppScrollTopResult', 'VKWebAppScrollTopFailed'> &\n  EventReceiveNames<\n    'VKWebAppScrollTopStart',\n    'VKWebAppScrollTopStartResult',\n    'VKWebAppScrollTopStop'\n  > &\n  EventReceiveNames<\n    'VKWebAppScrollTopStop',\n    'VKWebAppScrollTopStopResult',\n    'VKWebAppScrollTopStopFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppShowActionSheet',\n    'VKWebAppShowActionSheetResult',\n    'VKWebAppShowActionSheetFailed'\n  > &\n  EventReceiveNames<\n    'VKWebAppShowSlidesSheet',\n    'VKWebAppShowSlidesSheetResult',\n    'VKWebAppShowSlidesSheetFailed'\n  >;\n","import { createVKBridge } from './bridge';\nimport { version } from '../package.json';\n\n// VK Bridge API\nconst bridge = createVKBridge(version);\n\n// Export typings\nexport * from './types/data';\nexport * from './types/bridge';\nexport * from './types/middleware';\nexport * from './types/deprecated';\n\nexport { applyMiddleware } from './applyMiddleware';\nexport { bridge as default };\n","import { VKBridge, VKBridgeSend } from './types/bridge';\nimport { Middleware, MiddlewareAPI } from './types/middleware';\n\n/**\n * Creates the VK Bridge enhancer that applies middleware to the `send`\n * method. This is handy for a variety of task such as logging every sent\n * event.\n *\n * @param middlewares The middleware chain to be applied.\n * @returns The VK Bridge enhancer applying the middleware.\n */\nexport function applyMiddleware(\n  ...middlewares: Array<Middleware | undefined | null>\n): (bridge: VKBridge) => VKBridge {\n  if (middlewares.includes(undefined) || middlewares.includes(null)) {\n    return applyMiddleware(\n      ...middlewares.filter((item): item is Middleware => typeof item === 'function'),\n    );\n  }\n\n  return (bridge) => {\n    if (middlewares.length === 0) {\n      return bridge;\n    }\n\n    let send: VKBridgeSend = () => {\n      throw new Error(\n        'Sending events while constructing your middleware is not allowed. ' +\n          'Other middleware would not be applied to this send.',\n      );\n    };\n\n    const middlewareAPI: MiddlewareAPI = {\n      subscribe: bridge.subscribe,\n      send: (...args) => bridge.send(...args),\n    };\n\n    const chain = middlewares\n      .filter((item): item is Middleware => typeof item === 'function')\n      .map((middleware) => middleware(middlewareAPI)) //\n      .reduce((a, b) => (send) => a(b(send)));\n\n    send = chain(bridge.send);\n\n    return {\n      ...bridge,\n      send,\n    };\n  };\n}\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar transitionalDefaults = require('../defaults/transitional');\nvar AxiosError = require('../core/AxiosError');\nvar CanceledError = require('../cancel/CanceledError');\nvar parseProtocol = require('../helpers/parseProtocol');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new CanceledError() : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    var protocol = parseProtocol(fullPath);\n\n    if (protocol && [ 'http', 'https', 'file' ].indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = require('./cancel/CanceledError');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\naxios.toFormData = require('./helpers/toFormData');\n\n// Expose AxiosError class\naxios.AxiosError = require('../lib/core/AxiosError');\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar CanceledError = require('./CanceledError');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new CanceledError(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nvar AxiosError = require('../core/AxiosError');\nvar utils = require('../utils');\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction CanceledError(message) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nmodule.exports = CanceledError;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar buildFullPath = require('./buildFullPath');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  var fullPath = buildFullPath(config.baseURL, config.url);\n  return buildURL(fullPath, config.params, config.paramsSerializer);\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method: method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url: url,\n        data: data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nvar prototype = AxiosError.prototype;\nvar descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED'\n// eslint-disable-next-line func-names\n].forEach(function(code) {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = function(error, code, config, request, response, customProps) {\n  var axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nmodule.exports = AxiosError;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar CanceledError = require('../cancel/CanceledError');\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'beforeRedirect': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n","'use strict';\n\nvar AxiosError = require('./AxiosError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar normalizeHeaderName = require('../helpers/normalizeHeaderName');\nvar AxiosError = require('../core/AxiosError');\nvar transitionalDefaults = require('./transitional');\nvar toFormData = require('../helpers/toFormData');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('../adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('../adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n\n    var isObjectPayload = utils.isObject(data);\n    var contentType = headers && headers['Content-Type'];\n\n    var isFileList;\n\n    if ((isFileList = utils.isFileList(data)) || (isObjectPayload && contentType === 'multipart/form-data')) {\n      var _FormData = this.env && this.env.FormData;\n      return toFormData(isFileList ? {'files[]': data} : data, _FormData && new _FormData());\n    } else if (isObjectPayload || contentType === 'application/json') {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: require('./env/FormData')\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","module.exports = {\n  \"version\": \"0.27.2\"\n};","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","// eslint-disable-next-line strict\nmodule.exports = null;\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nmodule.exports = function parseProtocol(url) {\n  var match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Convert a data object to FormData\n * @param {Object} obj\n * @param {?Object} [formData]\n * @returns {Object}\n **/\n\nfunction toFormData(obj, formData) {\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new FormData();\n\n  var stack = [];\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  function build(data, parentKey) {\n    if (utils.isPlainObject(data) || utils.isArray(data)) {\n      if (stack.indexOf(data) !== -1) {\n        throw Error('Circular reference detected in ' + parentKey);\n      }\n\n      stack.push(data);\n\n      utils.forEach(data, function each(value, key) {\n        if (utils.isUndefined(value)) return;\n        var fullKey = parentKey ? parentKey + '.' + key : key;\n        var arr;\n\n        if (value && !parentKey && typeof value === 'object') {\n          if (utils.endsWith(key, '{}')) {\n            // eslint-disable-next-line no-param-reassign\n            value = JSON.stringify(value);\n          } else if (utils.endsWith(key, '[]') && (arr = utils.toArray(value))) {\n            // eslint-disable-next-line func-names\n            arr.forEach(function(el) {\n              !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));\n            });\n            return;\n          }\n        }\n\n        build(value, fullKey);\n      });\n\n      stack.pop();\n    } else {\n      formData.append(parentKey, convertValue(data));\n    }\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nmodule.exports = toFormData;\n","'use strict';\n\nvar VERSION = require('../env/data').version;\nvar AxiosError = require('../core/AxiosError');\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n// eslint-disable-next-line func-names\nvar kindOf = (function(cache) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    var str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n  };\n})(Object.create(null));\n\nfunction kindOfTest(type) {\n  type = type.toLowerCase();\n  return function isKindOf(thing) {\n    return kindOf(thing) === type;\n  };\n}\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nvar isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nvar isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nvar isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} thing The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(thing) {\n  var pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nvar isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n */\n\nfunction inherits(constructor, superConstructor, props, descriptors) {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function} [filter]\n * @returns {Object}\n */\n\nfunction toFlatObject(sourceObj, destObj, filter) {\n  var props;\n  var i;\n  var prop;\n  var merged = {};\n\n  destObj = destObj || {};\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if (!merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = Object.getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/*\n * determines whether a string ends with the characters of a specified string\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n * @returns {boolean}\n */\nfunction endsWith(str, searchString, position) {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  var lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object\n * @param {*} [thing]\n * @returns {Array}\n */\nfunction toArray(thing) {\n  if (!thing) return null;\n  var i = thing.length;\n  if (isUndefined(i)) return null;\n  var arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n// eslint-disable-next-line func-names\nvar isTypedArray = (function(TypedArray) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM,\n  inherits: inherits,\n  toFlatObject: toFlatObject,\n  kindOf: kindOf,\n  kindOfTest: kindOfTest,\n  endsWith: endsWith,\n  toArray: toArray,\n  isTypedArray: isTypedArray,\n  isFileList: isFileList\n};\n","var charenc = {\n  // UTF-8 encoding\n  utf8: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));\n    }\n  },\n\n  // Binary encoding\n  bin: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      for (var bytes = [], i = 0; i < str.length; i++)\n        bytes.push(str.charCodeAt(i) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      for (var str = [], i = 0; i < bytes.length; i++)\n        str.push(String.fromCharCode(bytes[i]));\n      return str.join('');\n    }\n  }\n};\n\nmodule.exports = charenc;\n","(function() {\n  var base64map\n      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n\n  crypt = {\n    // Bit-wise rotation left\n    rotl: function(n, b) {\n      return (n << b) | (n >>> (32 - b));\n    },\n\n    // Bit-wise rotation right\n    rotr: function(n, b) {\n      return (n << (32 - b)) | (n >>> b);\n    },\n\n    // Swap big-endian to little-endian and vice versa\n    endian: function(n) {\n      // If number given, swap endian\n      if (n.constructor == Number) {\n        return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;\n      }\n\n      // Else, assume array and swap all items\n      for (var i = 0; i < n.length; i++)\n        n[i] = crypt.endian(n[i]);\n      return n;\n    },\n\n    // Generate an array of any length of random bytes\n    randomBytes: function(n) {\n      for (var bytes = []; n > 0; n--)\n        bytes.push(Math.floor(Math.random() * 256));\n      return bytes;\n    },\n\n    // Convert a byte array to big-endian 32-bit words\n    bytesToWords: function(bytes) {\n      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)\n        words[b >>> 5] |= bytes[i] << (24 - b % 32);\n      return words;\n    },\n\n    // Convert big-endian 32-bit words to a byte array\n    wordsToBytes: function(words) {\n      for (var bytes = [], b = 0; b < words.length * 32; b += 8)\n        bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a hex string\n    bytesToHex: function(bytes) {\n      for (var hex = [], i = 0; i < bytes.length; i++) {\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n      }\n      return hex.join('');\n    },\n\n    // Convert a hex string to a byte array\n    hexToBytes: function(hex) {\n      for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n      return bytes;\n    },\n\n    // Convert a byte array to a base-64 string\n    bytesToBase64: function(bytes) {\n      for (var base64 = [], i = 0; i < bytes.length; i += 3) {\n        var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n        for (var j = 0; j < 4; j++)\n          if (i * 8 + j * 6 <= bytes.length * 8)\n            base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));\n          else\n            base64.push('=');\n      }\n      return base64.join('');\n    },\n\n    // Convert a base-64 string to a byte array\n    base64ToBytes: function(base64) {\n      // Remove non-base-64 characters\n      base64 = base64.replace(/[^A-Z0-9+\\/]/ig, '');\n\n      for (var bytes = [], i = 0, imod4 = 0; i < base64.length;\n          imod4 = ++i % 4) {\n        if (imod4 == 0) continue;\n        bytes.push(((base64map.indexOf(base64.charAt(i - 1))\n            & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))\n            | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));\n      }\n      return bytes;\n    }\n  };\n\n  module.exports = crypt;\n})();\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","(function(){\r\n  var crypt = require('crypt'),\r\n      utf8 = require('charenc').utf8,\r\n      isBuffer = require('is-buffer'),\r\n      bin = require('charenc').bin,\r\n\r\n  // The core\r\n  md5 = function (message, options) {\r\n    // Convert to byte array\r\n    if (message.constructor == String)\r\n      if (options && options.encoding === 'binary')\r\n        message = bin.stringToBytes(message);\r\n      else\r\n        message = utf8.stringToBytes(message);\r\n    else if (isBuffer(message))\r\n      message = Array.prototype.slice.call(message, 0);\r\n    else if (!Array.isArray(message) && message.constructor !== Uint8Array)\r\n      message = message.toString();\r\n    // else, assume byte array already\r\n\r\n    var m = crypt.bytesToWords(message),\r\n        l = message.length * 8,\r\n        a =  1732584193,\r\n        b = -271733879,\r\n        c = -1732584194,\r\n        d =  271733878;\r\n\r\n    // Swap endian\r\n    for (var i = 0; i < m.length; i++) {\r\n      m[i] = ((m[i] <<  8) | (m[i] >>> 24)) & 0x00FF00FF |\r\n             ((m[i] << 24) | (m[i] >>>  8)) & 0xFF00FF00;\r\n    }\r\n\r\n    // Padding\r\n    m[l >>> 5] |= 0x80 << (l % 32);\r\n    m[(((l + 64) >>> 9) << 4) + 14] = l;\r\n\r\n    // Method shortcuts\r\n    var FF = md5._ff,\r\n        GG = md5._gg,\r\n        HH = md5._hh,\r\n        II = md5._ii;\r\n\r\n    for (var i = 0; i < m.length; i += 16) {\r\n\r\n      var aa = a,\r\n          bb = b,\r\n          cc = c,\r\n          dd = d;\r\n\r\n      a = FF(a, b, c, d, m[i+ 0],  7, -680876936);\r\n      d = FF(d, a, b, c, m[i+ 1], 12, -389564586);\r\n      c = FF(c, d, a, b, m[i+ 2], 17,  606105819);\r\n      b = FF(b, c, d, a, m[i+ 3], 22, -1044525330);\r\n      a = FF(a, b, c, d, m[i+ 4],  7, -176418897);\r\n      d = FF(d, a, b, c, m[i+ 5], 12,  1200080426);\r\n      c = FF(c, d, a, b, m[i+ 6], 17, -1473231341);\r\n      b = FF(b, c, d, a, m[i+ 7], 22, -45705983);\r\n      a = FF(a, b, c, d, m[i+ 8],  7,  1770035416);\r\n      d = FF(d, a, b, c, m[i+ 9], 12, -1958414417);\r\n      c = FF(c, d, a, b, m[i+10], 17, -42063);\r\n      b = FF(b, c, d, a, m[i+11], 22, -1990404162);\r\n      a = FF(a, b, c, d, m[i+12],  7,  1804603682);\r\n      d = FF(d, a, b, c, m[i+13], 12, -40341101);\r\n      c = FF(c, d, a, b, m[i+14], 17, -1502002290);\r\n      b = FF(b, c, d, a, m[i+15], 22,  1236535329);\r\n\r\n      a = GG(a, b, c, d, m[i+ 1],  5, -165796510);\r\n      d = GG(d, a, b, c, m[i+ 6],  9, -1069501632);\r\n      c = GG(c, d, a, b, m[i+11], 14,  643717713);\r\n      b = GG(b, c, d, a, m[i+ 0], 20, -373897302);\r\n      a = GG(a, b, c, d, m[i+ 5],  5, -701558691);\r\n      d = GG(d, a, b, c, m[i+10],  9,  38016083);\r\n      c = GG(c, d, a, b, m[i+15], 14, -660478335);\r\n      b = GG(b, c, d, a, m[i+ 4], 20, -405537848);\r\n      a = GG(a, b, c, d, m[i+ 9],  5,  568446438);\r\n      d = GG(d, a, b, c, m[i+14],  9, -1019803690);\r\n      c = GG(c, d, a, b, m[i+ 3], 14, -187363961);\r\n      b = GG(b, c, d, a, m[i+ 8], 20,  1163531501);\r\n      a = GG(a, b, c, d, m[i+13],  5, -1444681467);\r\n      d = GG(d, a, b, c, m[i+ 2],  9, -51403784);\r\n      c = GG(c, d, a, b, m[i+ 7], 14,  1735328473);\r\n      b = GG(b, c, d, a, m[i+12], 20, -1926607734);\r\n\r\n      a = HH(a, b, c, d, m[i+ 5],  4, -378558);\r\n      d = HH(d, a, b, c, m[i+ 8], 11, -2022574463);\r\n      c = HH(c, d, a, b, m[i+11], 16,  1839030562);\r\n      b = HH(b, c, d, a, m[i+14], 23, -35309556);\r\n      a = HH(a, b, c, d, m[i+ 1],  4, -1530992060);\r\n      d = HH(d, a, b, c, m[i+ 4], 11,  1272893353);\r\n      c = HH(c, d, a, b, m[i+ 7], 16, -155497632);\r\n      b = HH(b, c, d, a, m[i+10], 23, -1094730640);\r\n      a = HH(a, b, c, d, m[i+13],  4,  681279174);\r\n      d = HH(d, a, b, c, m[i+ 0], 11, -358537222);\r\n      c = HH(c, d, a, b, m[i+ 3], 16, -722521979);\r\n      b = HH(b, c, d, a, m[i+ 6], 23,  76029189);\r\n      a = HH(a, b, c, d, m[i+ 9],  4, -640364487);\r\n      d = HH(d, a, b, c, m[i+12], 11, -421815835);\r\n      c = HH(c, d, a, b, m[i+15], 16,  530742520);\r\n      b = HH(b, c, d, a, m[i+ 2], 23, -995338651);\r\n\r\n      a = II(a, b, c, d, m[i+ 0],  6, -198630844);\r\n      d = II(d, a, b, c, m[i+ 7], 10,  1126891415);\r\n      c = II(c, d, a, b, m[i+14], 15, -1416354905);\r\n      b = II(b, c, d, a, m[i+ 5], 21, -57434055);\r\n      a = II(a, b, c, d, m[i+12],  6,  1700485571);\r\n      d = II(d, a, b, c, m[i+ 3], 10, -1894986606);\r\n      c = II(c, d, a, b, m[i+10], 15, -1051523);\r\n      b = II(b, c, d, a, m[i+ 1], 21, -2054922799);\r\n      a = II(a, b, c, d, m[i+ 8],  6,  1873313359);\r\n      d = II(d, a, b, c, m[i+15], 10, -30611744);\r\n      c = II(c, d, a, b, m[i+ 6], 15, -1560198380);\r\n      b = II(b, c, d, a, m[i+13], 21,  1309151649);\r\n      a = II(a, b, c, d, m[i+ 4],  6, -145523070);\r\n      d = II(d, a, b, c, m[i+11], 10, -1120210379);\r\n      c = II(c, d, a, b, m[i+ 2], 15,  718787259);\r\n      b = II(b, c, d, a, m[i+ 9], 21, -343485551);\r\n\r\n      a = (a + aa) >>> 0;\r\n      b = (b + bb) >>> 0;\r\n      c = (c + cc) >>> 0;\r\n      d = (d + dd) >>> 0;\r\n    }\r\n\r\n    return crypt.endian([a, b, c, d]);\r\n  };\r\n\r\n  // Auxiliary functions\r\n  md5._ff  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & c | ~b & d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._gg  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & d | c & ~d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._hh  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b ^ c ^ d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._ii  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (c ^ (b | ~d)) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n\r\n  // Package private blocksize\r\n  md5._blocksize = 16;\r\n  md5._digestsize = 16;\r\n\r\n  module.exports = function (message, options) {\r\n    if (message === undefined || message === null)\r\n      throw new Error('Illegal argument ' + message);\r\n\r\n    var digestbytes = crypt.wordsToBytes(md5(message, options));\r\n    return options && options.asBytes ? digestbytes :\r\n        options && options.asString ? bin.bytesToString(digestbytes) :\r\n        crypt.bytesToHex(digestbytes);\r\n  };\r\n\r\n})();\r\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;function Lg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(a){var b=Mg.current;E(Mg);a._currentValue=b}\nfunction Sg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}function Tg(a,b){Ng=a;Pg=Og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(Ug=!0),a.firstContext=null)}\nfunction Vg(a){var b=a._currentValue;if(Pg!==a)if(a={context:a,memoizedValue:b,next:null},null===Og){if(null===Ng)throw Error(p(308));Og=a;Ng.dependencies={lanes:0,firstContext:a}}else Og=Og.next=a;return b}var Wg=null;function Xg(a){null===Wg?Wg=[a]:Wg.push(a)}function Yg(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,Xg(b)):(c.next=e.next,e.next=c);b.interleaved=c;return Zg(a,d)}\nfunction Zg(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var $g=!1;function ah(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction bh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function ch(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction dh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return Zg(a,c)}e=d.interleaved;null===e?(b.next=b,Xg(d)):(b.next=e.next,e.next=b);d.interleaved=b;return Zg(a,c)}function eh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction fh(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction gh(a,b,c,d){var e=a.updateQueue;$g=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:$g=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);hh|=g;a.lanes=g;a.memoizedState=q}}\nfunction ih(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var jh=(new aa.Component).refs;function kh(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar nh={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=L(),d=\nlh(a),e=ch(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=dh(a,e,d);null!==b&&(mh(b,a,d,c),eh(b,a,d))}};function oh(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction ph(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Vg(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=nh;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction qh(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&nh.enqueueReplaceState(b,b.state,null)}\nfunction rh(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jh;ah(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Vg(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kh(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&nh.enqueueReplaceState(e,e.state,null),gh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}\nfunction sh(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;b===jh&&(b=e.refs={});null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction th(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function uh(a){var b=a._init;return b(a._payload)}\nfunction vh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=wh(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=xh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&uh(f)===b.type))return d=e(b,c.props),d.ref=sh(a,b,c),d.return=a,d;d=yh(c.type,c.key,c.props,null,a.mode,d);d.ref=sh(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=zh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ah(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=xh(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=yh(b.type,b.key,b.props,null,a.mode,c),\nc.ref=sh(a,null,b),c.return=a,c;case wa:return b=zh(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Ah(b,a.mode,c,null),b.return=a,b;th(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);th(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);th(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&uh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=sh(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Ah(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=yh(f.type,f.key,f.props,null,a.mode,h),h.ref=sh(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=zh(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);th(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=xh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(a){if(a===Dh)throw Error(p(174));return a}function Ih(a,b){G(Gh,b);G(Fh,a);G(Eh,Dh);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(Eh);G(Eh,b)}function Jh(){E(Eh);E(Fh);E(Gh)}\nfunction Kh(a){Hh(Gh.current);var b=Hh(Eh.current);var c=lb(b,a.type);b!==c&&(G(Fh,a),G(Eh,c))}function Lh(a){Fh.current===a&&(E(Eh),E(Fh))}var M=Uf(0);\nfunction Mh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Nh=[];\nfunction Oh(){for(var a=0;a<Nh.length;a++)Nh[a]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p(321));}function Wh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Xh(a,b,c,d,e,f){Rh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Ph.current=null===a||null===a.memoizedState?Yh:Zh;a=c(d,e);if(Th){f=0;do{Th=!1;Uh=0;if(25<=f)throw Error(p(301));f+=1;P=O=null;b.updateQueue=null;Ph.current=$h;a=c(d,e)}while(Th)}Ph.current=ai;b=null!==O&&null!==O.next;Rh=0;P=O=N=null;Sh=!1;if(b)throw Error(p(300));return a}function bi(){var a=0!==Uh;Uh=0;return a}\nfunction ci(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function di(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(p(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\nfunction ei(a,b){return\"function\"===typeof b?b(a):b}\nfunction fi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Rh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;N.lanes|=m;hh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(Ug=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,N.lanes|=f,hh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction gi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(Ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function hi(){}\nfunction ii(a,b){var c=N,d=di(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,Ug=!0);d=d.queue;ji(ki.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==P&&P.memoizedState.tag&1){c.flags|=2048;li(9,mi.bind(null,c,d,e,b),void 0,null);if(null===R)throw Error(p(349));0!==(Rh&30)||ni(c,b,e)}return e}function ni(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction mi(a,b,c,d){b.value=c;b.getSnapshot=d;oi(b)&&pi(a)}function ki(a,b,c){return c(function(){oi(b)&&pi(a)})}function oi(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function pi(a){var b=Zg(a,1);null!==b&&mh(b,a,1,-1)}\nfunction qi(a){var b=ci();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:a};b.queue=a;a=a.dispatch=ri.bind(null,N,a);return[b.memoizedState,a]}\nfunction li(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function si(){return di().memoizedState}function ti(a,b,c,d){var e=ci();N.flags|=a;e.memoizedState=li(1|b,c,void 0,void 0===d?null:d)}\nfunction ui(a,b,c,d){var e=di();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Wh(d,g.deps)){e.memoizedState=li(b,c,f,d);return}}N.flags|=a;e.memoizedState=li(1|b,c,f,d)}function vi(a,b){return ti(8390656,8,a,b)}function ji(a,b){return ui(2048,8,a,b)}function wi(a,b){return ui(4,2,a,b)}function xi(a,b){return ui(4,4,a,b)}\nfunction yi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function zi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ui(4,4,yi.bind(null,b,a),c)}function Ai(){}function Bi(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Ci(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Di(a,b,c){if(0===(Rh&21))return a.baseState&&(a.baseState=!1,Ug=!0),a.memoizedState=c;He(c,b)||(c=yc(),N.lanes|=c,hh|=c,a.baseState=!0);return b}function Ei(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Qh.transition;Qh.transition={};try{a(!1),b()}finally{C=c,Qh.transition=d}}function Fi(){return di().memoizedState}\nfunction Gi(a,b,c){var d=lh(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,c);else if(c=Yg(a,b,c,d),null!==c){var e=L();mh(c,a,d,e);Ji(c,b,d)}}\nfunction ri(a,b,c){var d=lh(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,Xg(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=Yg(a,b,e,d);null!==c&&(e=L(),mh(c,a,d,e),Ji(c,b,d))}}\nfunction Hi(a){var b=a.alternate;return a===N||null!==b&&b===N}function Ii(a,b){Th=Sh=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Ji(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(a,b){ci().memoizedState=[a,void 0===b?null:b];return a},useContext:Vg,useEffect:vi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ti(4194308,\n4,yi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ti(4194308,4,a,b)},useInsertionEffect:function(a,b){return ti(4,2,a,b)},useMemo:function(a,b){var c=ci();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=ci();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Gi.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=\nci();a={current:a};return b.memoizedState=a},useState:qi,useDebugValue:Ai,useDeferredValue:function(a){return ci().memoizedState=a},useTransition:function(){var a=qi(!1),b=a[0];a=Ei.bind(null,a[1]);ci().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=N,e=ci();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===R)throw Error(p(349));0!==(Rh&30)||ni(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;vi(ki.bind(null,d,\nf,a),[a]);d.flags|=2048;li(9,mi.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=ci(),b=R.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Uh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Vh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},\nuseDebugValue:Ai,useDeferredValue:function(a){var b=di();return Di(b,O.memoizedState,a)},useTransition:function(){var a=fi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(a){var b=di();return null===\nO?b.memoizedState=a:Di(b,O.memoizedState,a)},useTransition:function(){var a=gi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}function Li(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}\nfunction Mi(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Ni=\"function\"===typeof WeakMap?WeakMap:Map;function Oi(a,b,c){c=ch(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Pi||(Pi=!0,Qi=d);Mi(a,b)};return c}\nfunction Ri(a,b,c){c=ch(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Mi(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Mi(a,b);\"function\"!==typeof d&&(null===Si?Si=new Set([this]):Si.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Ti(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ni;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ui.bind(null,a,b,c),b.then(a,a))}function Vi(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Wi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=ch(-1,1),b.tag=2,dh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(a,b,c,d){b.child=null===a?Ch(b,null,c,d):Bh(b,a.child,c,d)}\nfunction Zi(a,b,c,d,e){c=c.render;var f=b.ref;Tg(b,e);d=Xh(a,b,c,d,f,e);c=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&c&&vg(b);b.flags|=1;Yi(a,b,d,e);return b.child}\nfunction aj(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!bj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,cj(a,b,f,d,e);a=yh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return $i(a,b,e)}b.flags|=1;a=wh(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction cj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(Ug=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(Ug=!0);else return b.lanes=a.lanes,$i(a,b,e)}return dj(a,b,c,d,e)}\nfunction ej(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(fj,gj),gj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(fj,gj);gj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(fj,gj),gj|=d;Yi(a,b,e,c);return b.child}function hj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function dj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);Tg(b,e);c=Xh(a,b,c,d,f,e);d=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&d&&vg(b);b.flags|=1;Yi(a,b,c,e);return b.child}\nfunction ij(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;Tg(b,e);if(null===b.stateNode)jj(a,b),ph(b,c,d),rh(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Vg(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&qh(b,g,d,l);$g=!1;var r=b.memoizedState;g.state=r;gh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||$g?(\"function\"===typeof m&&(kh(b,c,m,d),k=b.memoizedState),(h=$g||oh(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;bh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Lg(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=Vg(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&qh(b,g,d,k);$g=!1;r=b.memoizedState;g.state=r;gh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||$g?(\"function\"===typeof y&&(kh(b,c,y,d),n=b.memoizedState),(l=$g||oh(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return kj(a,b,c,d,f,e)}\nfunction kj(a,b,c,d,e,f){hj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),$i(a,b,f);d=b.stateNode;Xi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Bh(b,a.child,null,f),b.child=Bh(b,null,h,f)):Yi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function lj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);Ih(a,b.containerInfo)}\nfunction mj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Yi(a,b,c,d);return b.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction pj(a,b,c){var d=b.pendingProps,e=M.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(M,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=qj(g,d,0,null),a=Ah(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=oj(c),b.memoizedState=nj,a):rj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return sj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=wh(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=wh(h,f):(f=Ah(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?oj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=nj;return d}f=a.child;a=f.sibling;d=wh(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction rj(a,b){b=qj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function tj(a,b,c,d){null!==d&&Jg(d);Bh(b,a.child,null,c);a=rj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction sj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Li(Error(p(422))),tj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=qj({mode:\"visible\",children:d.children},e,0,null);f=Ah(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Bh(b,a.child,null,g);b.child.memoizedState=oj(g);b.memoizedState=nj;return f}if(0===(b.mode&1))return tj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Li(f,d,void 0);return tj(a,b,g,d)}h=0!==(g&a.childLanes);if(Ug||h){d=R;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,Zg(a,e),mh(d,a,e,-1))}uj();d=Li(Error(p(421)));return tj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=vj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=rj(b,d.children);b.flags|=4096;return b}function wj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);Sg(a.return,b,c)}\nfunction xj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction yj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Yi(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&wj(a,c,b);else if(19===a.tag)wj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(M,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Mh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);xj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Mh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}xj(b,!0,c,null,f);break;case \"together\":xj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction jj(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function $i(a,b,c){null!==a&&(b.dependencies=a.dependencies);hh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=wh(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=wh(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction zj(a,b,c){switch(b.tag){case 3:lj(b);Ig();break;case 5:Kh(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:Ih(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Mg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(M,M.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return pj(a,b,c);G(M,M.current&1);a=$i(a,b,c);return null!==a?a.sibling:null}G(M,M.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return yj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(M,M.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,ej(a,b,c)}return $i(a,b,c)}var Aj,Bj,Cj,Dj;\nAj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bj=function(){};\nCj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Hh(Eh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Dj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Ej(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Fj(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;Jh();E(Wf);E(H);Oh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Gj(zg),zg=null));Bj(a,b);S(b);return null;case 5:Lh(b);var e=Hh(Gh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Cj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;Aj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Dj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Hh(Gh.current);Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(M);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Gj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(M.current&1)?0===T&&(T=3):uj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return Jh(),\nBj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return Rg(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(M);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Ej(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Mh(a);if(null!==g){b.flags|=128;Ej(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(M,M.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Hj&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304)}else{if(!d)if(a=Mh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Ej(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Hj&&1073741824!==c&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=M.current,G(M,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Ij(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(gj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Jj(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Jh(),E(Wf),E(H),Oh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Lh(b),null;case 13:E(M);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(b.type._context),null;case 22:case 23:return Ij(),\nnull;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Mj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Nj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Oj=!1;\nfunction Pj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Lg(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Oj;Oj=!1;return n}\nfunction Qj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Nj(b,c,f)}e=e.next}while(e!==d)}}function Rj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Sj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Tj(a){var b=a.alternate;null!==b&&(a.alternate=null,Tj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Uj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Vj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Uj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}\nfunction Xj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Xj(a,b,c),a=a.sibling;null!==a;)Xj(a,b,c),a=a.sibling}var X=null,Yj=!1;function Zj(a,b,c){for(c=c.child;null!==c;)ak(a,b,c),c=c.sibling}\nfunction ak(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Mj(c,b);case 6:var d=X,e=Yj;X=null;Zj(a,b,c);X=d;Yj=e;null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Yj;X=c.stateNode.containerInfo;Yj=!0;\nZj(a,b,c);X=d;Yj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Nj(c,b,g):0!==(f&4)&&Nj(c,b,g));e=e.next}while(e!==d)}Zj(a,b,c);break;case 1:if(!U&&(Mj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Zj(a,b,c);break;case 21:Zj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Zj(a,b,c),U=d):Zj(a,b,c);break;default:Zj(a,b,c)}}function bk(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Lj);b.forEach(function(b){var d=ck.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction dk(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Yj=!1;break a;case 3:X=h.stateNode.containerInfo;Yj=!0;break a;case 4:X=h.stateNode.containerInfo;Yj=!0;break a}h=h.return}if(null===X)throw Error(p(160));ak(f,g,e);X=null;Yj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)ek(b,a),b=b.sibling}\nfunction ek(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:dk(b,a);fk(a);if(d&4){try{Qj(3,a,a.return),Rj(3,a)}catch(t){W(a,a.return,t)}try{Qj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);break;case 5:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:dk(b,a);fk(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:dk(b,a);fk(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:dk(b,a);fk(a);break;case 13:dk(b,a);fk(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(gk=B()));d&4&&bk(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,dk(b,a),U=l):dk(b,a);fk(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Qj(4,r,r.return);break;case 1:Mj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Mj(r,r.return);break;case 22:if(null!==r.memoizedState){hk(q);continue}}null!==y?(y.return=r,V=y):hk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:dk(b,a);fk(a);d&4&&bk(a);break;case 21:break;default:dk(b,\na),fk(a)}}function fk(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Uj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Vj(a);Xj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Vj(a);Wj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function ik(a,b,c){V=a;jk(a,b,c)}\nfunction jk(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Kj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Kj;var l=U;Kj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?kk(e):null!==k?(k.return=g,V=k):kk(e);for(;null!==f;)V=f,jk(f,b,c),f=f.sibling;V=e;Kj=h;U=l}lk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):lk(a,b,c)}}\nfunction lk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Rj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Lg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&ih(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}ih(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Sj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function hk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction kk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Rj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Sj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Sj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=Infinity,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return 0!==(K&6)?B():-1!==Bk?Bk:Bk=B()}\nfunction lh(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Ck&&(Ck=yc()),Ck;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function mh(a,b,c,d){if(50<zk)throw zk=0,Ak=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==R)a===R&&(0===(K&2)&&(rk|=c),4===T&&Dk(a,Z)),Ek(a,d),1===c&&0===K&&0===(b.mode&1)&&(Hj=B()+500,fg&&jg())}\nfunction Ek(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===R?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Fk.bind(null,a)):hg(Fk.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Gk(c,Hk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Hk(a,b){Bk=-1;Ck=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Ik()&&a.callbackNode!==c)return null;var d=uc(a,a===R?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Jk(a,d);else{b=d;var e=K;K|=2;var f=Kk();if(R!==a||Z!==b)vk=null,Hj=B()+500,Lk(a,b);do try{Mk();break}catch(h){Nk(a,h)}while(1);Qg();nk.current=f;K=e;null!==Y?b=0:(R=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Ok(a,e)));if(1===b)throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;if(6===b)Dk(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Pk(e)&&(b=Jk(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Ok(a,f))),1===b))throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Qk(a,uk,vk);break;case 3:Dk(a,d);if((d&130023424)===d&&(b=gk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){L();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),b);break}Qk(a,uk,vk);break;case 4:Dk(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*mk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),d);break}Qk(a,uk,vk);break;case 5:Qk(a,uk,vk);break;default:throw Error(p(329));}}}Ek(a,B());return a.callbackNode===c?Hk.bind(null,a):null}\nfunction Ok(a,b){var c=tk;a.current.memoizedState.isDehydrated&&(Lk(a,b).flags|=256);a=Jk(a,b);2!==a&&(b=uk,uk=c,null!==b&&Gj(b));return a}function Gj(a){null===uk?uk=a:uk.push.apply(uk,a)}\nfunction Pk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Dk(a,b){b&=~sk;b&=~rk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Fk(a){if(0!==(K&6))throw Error(p(327));Ik();var b=uc(a,0);if(0===(b&1))return Ek(a,B()),null;var c=Jk(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Ok(a,d))}if(1===c)throw c=qk,Lk(a,0),Dk(a,b),Ek(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Qk(a,uk,vk);Ek(a,B());return null}\nfunction Rk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Hj=B()+500,fg&&jg())}}function Sk(a){null!==xk&&0===xk.tag&&0===(K&6)&&Ik();var b=K;K|=1;var c=pk.transition,d=C;try{if(pk.transition=null,C=1,a)return a()}finally{C=d,pk.transition=c,K=b,0===(K&6)&&jg()}}function Ij(){gj=fj.current;E(fj)}\nfunction Lk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:Jh();E(Wf);E(H);Oh();break;case 5:Lh(d);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(d.type._context);break;case 22:case 23:Ij()}c=c.return}R=a;Y=a=wh(a.current,null);Z=gj=b;T=0;qk=null;sk=rk=hh=0;uk=tk=null;if(null!==Wg){for(b=\n0;b<Wg.length;b++)if(c=Wg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}Wg=null}return a}\nfunction Nk(a,b){do{var c=Y;try{Qg();Ph.current=ai;if(Sh){for(var d=N.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Sh=!1}Rh=0;P=O=N=null;Th=!1;Uh=0;ok.current=null;if(null===c||null===c.return){T=1;qk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Vi(g);if(null!==y){y.flags&=-257;Wi(y,g,h,f,b);y.mode&1&&Ti(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Ti(f,l,b);uj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Vi(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Wi(J,g,h,f,b);Jg(Ki(k,h));break a}}f=k=Ki(k,h);4!==T&&(T=2);null===tk?tk=[f]:tk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Oi(f,k,b);fh(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Si||!Si.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Ri(f,h,b);fh(f,F);break a}}f=f.return}while(null!==f)}Tk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Kk(){var a=nk.current;nk.current=ai;return null===a?ai:a}\nfunction uj(){if(0===T||3===T||2===T)T=4;null===R||0===(hh&268435455)&&0===(rk&268435455)||Dk(R,Z)}function Jk(a,b){var c=K;K|=2;var d=Kk();if(R!==a||Z!==b)vk=null,Lk(a,b);do try{Uk();break}catch(e){Nk(a,e)}while(1);Qg();K=c;nk.current=d;if(null!==Y)throw Error(p(261));R=null;Z=0;return T}function Uk(){for(;null!==Y;)Vk(Y)}function Mk(){for(;null!==Y&&!cc();)Vk(Y)}function Vk(a){var b=Wk(a.alternate,a,gj);a.memoizedProps=a.pendingProps;null===b?Tk(a):Y=b;ok.current=null}\nfunction Tk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Fj(c,b,gj),null!==c){Y=c;return}}else{c=Jj(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Qk(a,b,c){var d=C,e=pk.transition;try{pk.transition=null,C=1,Xk(a,b,c,d)}finally{pk.transition=e,C=d}return null}\nfunction Xk(a,b,c,d){do Ik();while(null!==xk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===R&&(Y=R=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||wk||(wk=!0,Gk(hc,function(){Ik();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=pk.transition;pk.transition=null;\nvar g=C;C=1;var h=K;K|=4;ok.current=null;Pj(a,c);ek(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;ik(c,a,e);dc();K=h;C=g;pk.transition=f}else a.current=c;wk&&(wk=!1,xk=a,yk=e);f=a.pendingLanes;0===f&&(Si=null);mc(c.stateNode,d);Ek(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Pi)throw Pi=!1,a=Qi,Qi=null,a;0!==(yk&1)&&0!==a.tag&&Ik();f=a.pendingLanes;0!==(f&1)?a===Ak?zk++:(zk=0,Ak=a):zk=0;jg();return null}\nfunction Ik(){if(null!==xk){var a=Dc(yk),b=pk.transition,c=C;try{pk.transition=null;C=16>a?16:a;if(null===xk)var d=!1;else{a=xk;xk=null;yk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Qj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Tj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Qj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Rj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,pk.transition=b}}return!1}function Yk(a,b,c){b=Ki(c,b);b=Oi(a,b,1);a=dh(a,b,1);b=L();null!==a&&(Ac(a,1,b),Ek(a,b))}\nfunction W(a,b,c){if(3===a.tag)Yk(a,a,c);else for(;null!==b;){if(3===b.tag){Yk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Si||!Si.has(d))){a=Ki(c,a);a=Ri(b,a,1);b=dh(b,a,1);a=L();null!==b&&(Ac(b,1,a),Ek(b,a));break}}b=b.return}}\nfunction Ui(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=L();a.pingedLanes|=a.suspendedLanes&c;R===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-gk?Lk(a,0):sk|=c);Ek(a,b)}function Zk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=L();a=Zg(a,b);null!==a&&(Ac(a,b,c),Ek(a,c))}function vj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Zk(a,c)}\nfunction ck(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Zk(a,c)}var Wk;\nWk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)Ug=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return Ug=!1,zj(a,b,c);Ug=0!==(a.flags&131072)?!0:!1}else Ug=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;jj(a,b);a=b.pendingProps;var e=Yf(b,H.current);Tg(b,c);e=Xh(null,b,d,a,e,c);var f=bi();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,ah(b),e.updater=nh,b.stateNode=e,e._reactInternals=b,rh(b,d,a,c),b=kj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Yi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{jj(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=$k(d);a=Lg(d,a);switch(e){case 0:b=dj(null,b,d,a,c);break a;case 1:b=ij(null,b,d,a,c);break a;case 11:b=Zi(null,b,d,a,c);break a;case 14:b=aj(null,b,d,Lg(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),dj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),ij(a,b,d,e,c);case 3:a:{lj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;bh(a,b);gh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ki(Error(p(423)),b);b=mj(a,b,d,c,e);break a}else if(d!==e){e=Ki(Error(p(424)),b);b=mj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Ch(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=$i(a,b,c);break a}Yi(a,b,d,c)}b=b.child}return b;case 5:return Kh(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\nhj(a,b),Yi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return pj(a,b,c);case 4:return Ih(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Bh(b,null,d,c):Yi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),Zi(a,b,d,e,c);case 7:return Yi(a,b,b.pendingProps,c),b.child;case 8:return Yi(a,b,b.pendingProps.children,c),b.child;case 12:return Yi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Mg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=$i(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=ch(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);Sg(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);Sg(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Yi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,Tg(b,c),e=Vg(e),d=d(e),b.flags|=1,Yi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Lg(d,b.pendingProps),e=Lg(d.type,e),aj(a,b,d,e,c);case 15:return cj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),jj(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,Tg(b,c),ph(b,d,e),rh(b,d,e,c),kj(null,b,d,!0,a,c);case 19:return yj(a,b,c);case 22:return ej(a,b,c)}throw Error(p(156,b.tag));};function Gk(a,b){return ac(a,b)}\nfunction al(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new al(a,b,c,d)}function bj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction $k(a){if(\"function\"===typeof a)return bj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction wh(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction yh(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)bj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Ah(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return qj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Ah(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function qj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function xh(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction zh(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction bl(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function cl(a,b,c,d,e,f,g,h,k){a=new bl(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};ah(f);return a}function dl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction el(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction fl(a,b,c,d,e,f,g,h,k){a=cl(c,d,!0,a,e,f,g,h,k);a.context=el(null);c=a.current;d=L();e=lh(c);f=ch(d,e);f.callback=void 0!==b&&null!==b?b:null;dh(c,f,e);a.current.lanes=e;Ac(a,e,d);Ek(a,d);return a}function gl(a,b,c,d){var e=b.current,f=L(),g=lh(e);c=el(c);null===b.context?b.context=c:b.pendingContext=c;b=ch(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=dh(e,b,g);null!==a&&(mh(a,e,g,f),eh(a,e,g));return g}\nfunction hl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function il(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function jl(a,b){il(a,b);(a=a.alternate)&&il(a,b)}function kl(){return null}var ll=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ml(a){this._internalRoot=a}\nnl.prototype.render=ml.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));gl(a,b,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Sk(function(){gl(null,a,null,null)});b[uf]=null}};function nl(a){this._internalRoot=a}\nnl.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function pl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function ql(){}\nfunction rl(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=hl(g);f.call(a)}}var g=fl(b,d,a,0,null,!1,!1,\"\",ql);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Sk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=hl(k);h.call(a)}}var k=cl(a,0,!1,null,null,!1,!1,\"\",ql);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Sk(function(){gl(b,k,c,d)});return k}\nfunction sl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=hl(g);h.call(a)}}gl(b,g,a,e)}else g=rl(c,b,a,e,d);return hl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Ek(b,B()),0===(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var b=Zg(a,1);if(null!==b){var c=L();mh(b,a,1,c)}}),jl(a,1)}};\nFc=function(a){if(13===a.tag){var b=Zg(a,134217728);if(null!==b){var c=L();mh(b,a,134217728,c)}jl(a,134217728)}};Gc=function(a){if(13===a.tag){var b=lh(a),c=Zg(a,b);if(null!==c){var d=L();mh(c,a,b,d)}jl(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Rk;Hb=Sk;\nvar tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:\"18.2.0\",rendererPackageName:\"react-dom\"};\nvar vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||\nkl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.2.0-next-9e3b772b8-20220608\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ol(b))throw Error(p(200));return dl(a,b,null,c)};exports.createRoot=function(a,b){if(!ol(a))throw Error(p(299));var c=!1,d=\"\",e=ll;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=cl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ml(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Sk(a)};exports.hydrate=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!ol(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=ll;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=fl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new nl(b)};exports.render=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!pl(a))throw Error(p(40));return a._reactRootContainer?(Sk(function(){sl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Rk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!pl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return sl(a,b,c,!1,d)};exports.version=\"18.2.0-next-9e3b772b8-20220608\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/* global Map:readonly, Set:readonly, ArrayBuffer:readonly */\n\nvar hasElementType = typeof Element !== 'undefined';\nvar hasMap = typeof Map === 'function';\nvar hasSet = typeof Set === 'function';\nvar hasArrayBuffer = typeof ArrayBuffer === 'function' && !!ArrayBuffer.isView;\n\n// Note: We **don't** need `envHasBigInt64Array` in fde es6/index.js\n\nfunction equal(a, b) {\n  // START: fast-deep-equal es6/index.js 3.1.1\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    // START: Modifications:\n    // 1. Extra `has<Type> &&` helpers in initial condition allow es6 code\n    //    to co-exist with es5.\n    // 2. Replace `for of` with es5 compliant iteration using `for`.\n    //    Basically, take:\n    //\n    //    ```js\n    //    for (i of a.entries())\n    //      if (!b.has(i[0])) return false;\n    //    ```\n    //\n    //    ... and convert to:\n    //\n    //    ```js\n    //    it = a.entries();\n    //    while (!(i = it.next()).done)\n    //      if (!b.has(i.value[0])) return false;\n    //    ```\n    //\n    //    **Note**: `i` access switches to `i.value`.\n    var it;\n    if (hasMap && (a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!equal(i.value[1], b.get(i.value[0]))) return false;\n      return true;\n    }\n\n    if (hasSet && (a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      it = a.entries();\n      while (!(i = it.next()).done)\n        if (!b.has(i.value[0])) return false;\n      return true;\n    }\n    // END: Modifications\n\n    if (hasArrayBuffer && ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    // END: fast-deep-equal\n\n    // START: react-fast-compare\n    // custom handling for DOM elements\n    if (hasElementType && a instanceof Element) return false;\n\n    // custom handling for React/Preact\n    for (i = length; i-- !== 0;) {\n      if ((keys[i] === '_owner' || keys[i] === '__v' || keys[i] === '__o') && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner\n        // Preact-specific: avoid traversing Preact elements' __v and __o\n        //    __v = $_original / $_vnode\n        //    __o = $_owner\n        // These properties contain circular references and are not needed when\n        // comparing the actual elements (and not their owners)\n        // .$$typeof and ._store on just reasonable markers of elements\n\n        continue;\n      }\n\n      // all other properties should be traversed as usual\n      if (!equal(a[keys[i]], b[keys[i]])) return false;\n    }\n    // END: react-fast-compare\n\n    // START: fast-deep-equal\n    return true;\n  }\n\n  return a !== a && b !== b;\n}\n// end fast-deep-equal\n\nmodule.exports = function isEqual(a, b) {\n  try {\n    return equal(a, b);\n  } catch (error) {\n    if (((error.message || '').match(/stack|recursion/i))) {\n      // warn on circular references, don't crash\n      // browsers give this different errors name and messages:\n      // chrome/safari: \"RangeError\", \"Maximum call stack size exceeded\"\n      // firefox: \"InternalError\", too much recursion\"\n      // edge: \"Error\", \"Out of stack space\"\n      console.warn('react-fast-compare cannot handle circular refs');\n      return false;\n    }\n    // some other error. we should definitely know about these\n    throw error;\n  }\n};\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.BrowserSprite = factory());\n}(this, (function () { 'use strict';\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\n\n\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar deepmerge = createCommonjsModule(function (module, exports) {\n(function (root, factory) {\n    if (typeof undefined === 'function' && undefined.amd) {\n        undefined(factory);\n    } else {\n        module.exports = factory();\n    }\n}(commonjsGlobal, function () {\n\nfunction isMergeableObject(val) {\n    var nonNullObject = val && typeof val === 'object';\n\n    return nonNullObject\n        && Object.prototype.toString.call(val) !== '[object RegExp]'\n        && Object.prototype.toString.call(val) !== '[object Date]'\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true;\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice();\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument);\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument);\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument));\n        }\n    });\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {};\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function (key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n        });\n    }\n    Object.keys(source).forEach(function (key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n        }\n    });\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var array = Array.isArray(source);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge };\n    var arrayMerge = options.arrayMerge || defaultArrayMerge;\n\n    if (array) {\n        return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n};\n\nreturn deepmerge\n\n}));\n});\n\n//      \n// An event handler can take an optional event argument\n// and should not return a value\n                                          \n// An array of all currently registered event handlers for a type\n                                            \n// A map of event types and their corresponding event handlers.\n                        \n                                   \n  \n\n/** Mitt: Tiny (~200b) functional event emitter / pubsub.\n *  @name mitt\n *  @returns {Mitt}\n */\nfunction mitt(all                 ) {\n\tall = all || Object.create(null);\n\n\treturn {\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to listen for, or `\"*\"` for all events\n\t\t * @param  {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton: function on(type        , handler              ) {\n\t\t\t(all[type] || (all[type] = [])).push(handler);\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t *\n\t\t * @param  {String} type\tType of event to unregister `handler` from, or `\"*\"`\n\t\t * @param  {Function} handler Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff: function off(type        , handler              ) {\n\t\t\tif (all[type]) {\n\t\t\t\tall[type].splice(all[type].indexOf(handler) >>> 0, 1);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `\"*\"` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * @param {String} type  The event type to invoke\n\t\t * @param {Any} [evt]  Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberof mitt\n\t\t */\n\t\temit: function emit(type        , evt     ) {\n\t\t\t(all[type] || []).map(function (handler) { handler(evt); });\n\t\t\t(all['*'] || []).map(function (handler) { handler(type, evt); });\n\t\t}\n\t};\n}\n\nvar namespaces_1 = createCommonjsModule(function (module, exports) {\nvar namespaces = {\n  svg: {\n    name: 'xmlns',\n    uri: 'http://www.w3.org/2000/svg'\n  },\n  xlink: {\n    name: 'xmlns:xlink',\n    uri: 'http://www.w3.org/1999/xlink'\n  }\n};\n\nexports.default = namespaces;\nmodule.exports = exports.default;\n});\n\n/**\n * @param {Object} attrs\n * @return {string}\n */\nvar objectToAttrsString = function (attrs) {\n  return Object.keys(attrs).map(function (attr) {\n    var value = attrs[attr].toString().replace(/\"/g, '&quot;');\n    return (attr + \"=\\\"\" + value + \"\\\"\");\n  }).join(' ');\n};\n\nvar svg = namespaces_1.svg;\nvar xlink = namespaces_1.xlink;\n\nvar defaultAttrs = {};\ndefaultAttrs[svg.name] = svg.uri;\ndefaultAttrs[xlink.name] = xlink.uri;\n\n/**\n * @param {string} [content]\n * @param {Object} [attributes]\n * @return {string}\n */\nvar wrapInSvgString = function (content, attributes) {\n  if ( content === void 0 ) content = '';\n\n  var attrs = deepmerge(defaultAttrs, attributes || {});\n  var attrsRendered = objectToAttrsString(attrs);\n  return (\"<svg \" + attrsRendered + \">\" + content + \"</svg>\");\n};\n\nvar svg$1 = namespaces_1.svg;\nvar xlink$1 = namespaces_1.xlink;\n\nvar defaultConfig = {\n  attrs: ( obj = {\n    style: ['position: absolute', 'width: 0', 'height: 0'].join('; '),\n    'aria-hidden': 'true'\n  }, obj[svg$1.name] = svg$1.uri, obj[xlink$1.name] = xlink$1.uri, obj )\n};\nvar obj;\n\nvar Sprite = function Sprite(config) {\n  this.config = deepmerge(defaultConfig, config || {});\n  this.symbols = [];\n};\n\n/**\n * Add new symbol. If symbol with the same id exists it will be replaced.\n * @param {SpriteSymbol} symbol\n * @return {boolean} `true` - symbol was added, `false` - replaced\n */\nSprite.prototype.add = function add (symbol) {\n  var ref = this;\n    var symbols = ref.symbols;\n  var existing = this.find(symbol.id);\n\n  if (existing) {\n    symbols[symbols.indexOf(existing)] = symbol;\n    return false;\n  }\n\n  symbols.push(symbol);\n  return true;\n};\n\n/**\n * Remove symbol & destroy it\n * @param {string} id\n * @return {boolean} `true` - symbol was found & successfully destroyed, `false` - otherwise\n */\nSprite.prototype.remove = function remove (id) {\n  var ref = this;\n    var symbols = ref.symbols;\n  var symbol = this.find(id);\n\n  if (symbol) {\n    symbols.splice(symbols.indexOf(symbol), 1);\n    symbol.destroy();\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * @param {string} id\n * @return {SpriteSymbol|null}\n */\nSprite.prototype.find = function find (id) {\n  return this.symbols.filter(function (s) { return s.id === id; })[0] || null;\n};\n\n/**\n * @param {string} id\n * @return {boolean}\n */\nSprite.prototype.has = function has (id) {\n  return this.find(id) !== null;\n};\n\n/**\n * @return {string}\n */\nSprite.prototype.stringify = function stringify () {\n  var ref = this.config;\n    var attrs = ref.attrs;\n  var stringifiedSymbols = this.symbols.map(function (s) { return s.stringify(); }).join('');\n  return wrapInSvgString(stringifiedSymbols, attrs);\n};\n\n/**\n * @return {string}\n */\nSprite.prototype.toString = function toString () {\n  return this.stringify();\n};\n\nSprite.prototype.destroy = function destroy () {\n  this.symbols.forEach(function (s) { return s.destroy(); });\n};\n\nvar SpriteSymbol = function SpriteSymbol(ref) {\n  var id = ref.id;\n  var viewBox = ref.viewBox;\n  var content = ref.content;\n\n  this.id = id;\n  this.viewBox = viewBox;\n  this.content = content;\n};\n\n/**\n * @return {string}\n */\nSpriteSymbol.prototype.stringify = function stringify () {\n  return this.content;\n};\n\n/**\n * @return {string}\n */\nSpriteSymbol.prototype.toString = function toString () {\n  return this.stringify();\n};\n\nSpriteSymbol.prototype.destroy = function destroy () {\n    var this$1 = this;\n\n  ['id', 'viewBox', 'content'].forEach(function (prop) { return delete this$1[prop]; });\n};\n\n/**\n * @param {string} content\n * @return {Element}\n */\nvar parse = function (content) {\n  var hasImportNode = !!document.importNode;\n  var doc = new DOMParser().parseFromString(content, 'image/svg+xml').documentElement;\n\n  /**\n   * Fix for browser which are throwing WrongDocumentError\n   * if you insert an element which is not part of the document\n   * @see http://stackoverflow.com/a/7986519/4624403\n   */\n  if (hasImportNode) {\n    return document.importNode(doc, true);\n  }\n\n  return doc;\n};\n\nvar BrowserSpriteSymbol = (function (SpriteSymbol$$1) {\n  function BrowserSpriteSymbol () {\n    SpriteSymbol$$1.apply(this, arguments);\n  }\n\n  if ( SpriteSymbol$$1 ) BrowserSpriteSymbol.__proto__ = SpriteSymbol$$1;\n  BrowserSpriteSymbol.prototype = Object.create( SpriteSymbol$$1 && SpriteSymbol$$1.prototype );\n  BrowserSpriteSymbol.prototype.constructor = BrowserSpriteSymbol;\n\n  var prototypeAccessors = { isMounted: {} };\n\n  prototypeAccessors.isMounted.get = function () {\n    return !!this.node;\n  };\n\n  /**\n   * @param {Element} node\n   * @return {BrowserSpriteSymbol}\n   */\n  BrowserSpriteSymbol.createFromExistingNode = function createFromExistingNode (node) {\n    return new BrowserSpriteSymbol({\n      id: node.getAttribute('id'),\n      viewBox: node.getAttribute('viewBox'),\n      content: node.outerHTML\n    });\n  };\n\n  BrowserSpriteSymbol.prototype.destroy = function destroy () {\n    if (this.isMounted) {\n      this.unmount();\n    }\n    SpriteSymbol$$1.prototype.destroy.call(this);\n  };\n\n  /**\n   * @param {Element|string} target\n   * @return {Element}\n   */\n  BrowserSpriteSymbol.prototype.mount = function mount (target) {\n    if (this.isMounted) {\n      return this.node;\n    }\n\n    var mountTarget = typeof target === 'string' ? document.querySelector(target) : target;\n    var node = this.render();\n    this.node = node;\n\n    mountTarget.appendChild(node);\n\n    return node;\n  };\n\n  /**\n   * @return {Element}\n   */\n  BrowserSpriteSymbol.prototype.render = function render () {\n    var content = this.stringify();\n    return parse(wrapInSvgString(content)).childNodes[0];\n  };\n\n  BrowserSpriteSymbol.prototype.unmount = function unmount () {\n    this.node.parentNode.removeChild(this.node);\n  };\n\n  Object.defineProperties( BrowserSpriteSymbol.prototype, prototypeAccessors );\n\n  return BrowserSpriteSymbol;\n}(SpriteSymbol));\n\nvar defaultConfig$1 = {\n  /**\n   * Should following options be automatically configured:\n   * - `syncUrlsWithBaseTag`\n   * - `locationChangeAngularEmitter`\n   * - `moveGradientsOutsideSymbol`\n   * @type {boolean}\n   */\n  autoConfigure: true,\n\n  /**\n   * Default mounting selector\n   * @type {string}\n   */\n  mountTo: 'body',\n\n  /**\n   * Fix disappearing SVG elements when <base href> exists.\n   * Executes when sprite mounted.\n   * @see http://stackoverflow.com/a/18265336/796152\n   * @see https://github.com/everdimension/angular-svg-base-fix\n   * @see https://github.com/angular/angular.js/issues/8934#issuecomment-56568466\n   * @type {boolean}\n   */\n  syncUrlsWithBaseTag: false,\n\n  /**\n   * Should sprite listen custom location change event\n   * @type {boolean}\n   */\n  listenLocationChangeEvent: true,\n\n  /**\n   * Custom window event name which should be emitted to update sprite urls\n   * @type {string}\n   */\n  locationChangeEvent: 'locationChange',\n\n  /**\n   * Emit location change event in Angular automatically\n   * @type {boolean}\n   */\n  locationChangeAngularEmitter: false,\n\n  /**\n   * Selector to find symbols usages when updating sprite urls\n   * @type {string}\n   */\n  usagesToUpdate: 'use[*|href]',\n\n  /**\n   * Fix Firefox bug when gradients and patterns don't work if they are within a symbol.\n   * Executes when sprite is rendered, but not mounted.\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=306674\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=353575\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=1235364\n   * @type {boolean}\n   */\n  moveGradientsOutsideSymbol: false\n};\n\n/**\n * @param {*} arrayLike\n * @return {Array}\n */\nvar arrayFrom = function (arrayLike) {\n  return Array.prototype.slice.call(arrayLike, 0);\n};\n\nvar browser = {\n  isChrome: function () { return /chrome/i.test(navigator.userAgent); },\n  isFirefox: function () { return /firefox/i.test(navigator.userAgent); },\n\n  // https://msdn.microsoft.com/en-us/library/ms537503(v=vs.85).aspx\n  isIE: function () { return /msie/i.test(navigator.userAgent) || /trident/i.test(navigator.userAgent); },\n  isEdge: function () { return /edge/i.test(navigator.userAgent); }\n};\n\n/**\n * @param {string} name\n * @param {*} data\n */\nvar dispatchEvent = function (name, data) {\n  var event = document.createEvent('CustomEvent');\n  event.initCustomEvent(name, false, false, data);\n  window.dispatchEvent(event);\n};\n\n/**\n * IE doesn't evaluate <style> tags in SVGs that are dynamically added to the page.\n * This trick will trigger IE to read and use any existing SVG <style> tags.\n * @see https://github.com/iconic/SVGInjector/issues/23\n * @see https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n *\n * @param {Element} node DOM Element to search <style> tags in\n * @return {Array<HTMLStyleElement>}\n */\nvar evalStylesIEWorkaround = function (node) {\n  var updatedNodes = [];\n\n  arrayFrom(node.querySelectorAll('style'))\n    .forEach(function (style) {\n      style.textContent += '';\n      updatedNodes.push(style);\n    });\n\n  return updatedNodes;\n};\n\n/**\n * @param {string} [url] If not provided - current URL will be used\n * @return {string}\n */\nvar getUrlWithoutFragment = function (url) {\n  return (url || window.location.href).split('#')[0];\n};\n\n/* global angular */\n/**\n * @param {string} eventName\n */\nvar locationChangeAngularEmitter = function (eventName) {\n  angular.module('ng').run(['$rootScope', function ($rootScope) {\n    $rootScope.$on('$locationChangeSuccess', function (e, newUrl, oldUrl) {\n      dispatchEvent(eventName, { oldUrl: oldUrl, newUrl: newUrl });\n    });\n  }]);\n};\n\nvar defaultSelector = 'linearGradient, radialGradient, pattern, mask, clipPath';\n\n/**\n * @param {Element} svg\n * @param {string} [selector]\n * @return {Element}\n */\nvar moveGradientsOutsideSymbol = function (svg, selector) {\n  if ( selector === void 0 ) selector = defaultSelector;\n\n  arrayFrom(svg.querySelectorAll('symbol')).forEach(function (symbol) {\n    arrayFrom(symbol.querySelectorAll(selector)).forEach(function (node) {\n      symbol.parentNode.insertBefore(node, symbol);\n    });\n  });\n  return svg;\n};\n\n/**\n * @param {NodeList} nodes\n * @param {Function} [matcher]\n * @return {Attr[]}\n */\nfunction selectAttributes(nodes, matcher) {\n  var attrs = arrayFrom(nodes).reduce(function (acc, node) {\n    if (!node.attributes) {\n      return acc;\n    }\n\n    var arrayfied = arrayFrom(node.attributes);\n    var matched = matcher ? arrayfied.filter(matcher) : arrayfied;\n    return acc.concat(matched);\n  }, []);\n\n  return attrs;\n}\n\n/**\n * @param {NodeList|Node} nodes\n * @param {boolean} [clone=true]\n * @return {string}\n */\n\nvar xLinkNS = namespaces_1.xlink.uri;\nvar xLinkAttrName = 'xlink:href';\n\n// eslint-disable-next-line no-useless-escape\nvar specialUrlCharsPattern = /[{}|\\\\\\^\\[\\]`\"<>]/g;\n\nfunction encoder(url) {\n  return url.replace(specialUrlCharsPattern, function (match) {\n    return (\"%\" + (match[0].charCodeAt(0).toString(16).toUpperCase()));\n  });\n}\n\nfunction escapeRegExp(str) {\n  return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // $& means the whole matched string\n}\n\n/**\n * @param {NodeList} nodes\n * @param {string} startsWith\n * @param {string} replaceWith\n * @return {NodeList}\n */\nfunction updateReferences(nodes, startsWith, replaceWith) {\n  arrayFrom(nodes).forEach(function (node) {\n    var href = node.getAttribute(xLinkAttrName);\n    if (href && href.indexOf(startsWith) === 0) {\n      var newUrl = href.replace(startsWith, replaceWith);\n      node.setAttributeNS(xLinkNS, xLinkAttrName, newUrl);\n    }\n  });\n\n  return nodes;\n}\n\n/**\n * List of SVG attributes to update url() target in them\n */\nvar attList = [\n  'clipPath',\n  'colorProfile',\n  'src',\n  'cursor',\n  'fill',\n  'filter',\n  'marker',\n  'markerStart',\n  'markerMid',\n  'markerEnd',\n  'mask',\n  'stroke',\n  'style'\n];\n\nvar attSelector = attList.map(function (attr) { return (\"[\" + attr + \"]\"); }).join(',');\n\n/**\n * Update URLs in svg image (like `fill=\"url(...)\"`) and update referencing elements\n * @param {Element} svg\n * @param {NodeList} references\n * @param {string|RegExp} startsWith\n * @param {string} replaceWith\n * @return {void}\n *\n * @example\n * const sprite = document.querySelector('svg.sprite');\n * const usages = document.querySelectorAll('use');\n * updateUrls(sprite, usages, '#', 'prefix#');\n */\nvar updateUrls = function (svg, references, startsWith, replaceWith) {\n  var startsWithEncoded = encoder(startsWith);\n  var replaceWithEncoded = encoder(replaceWith);\n\n  var nodes = svg.querySelectorAll(attSelector);\n  var attrs = selectAttributes(nodes, function (ref) {\n    var localName = ref.localName;\n    var value = ref.value;\n\n    return attList.indexOf(localName) !== -1 && value.indexOf((\"url(\" + startsWithEncoded)) !== -1;\n  });\n\n  attrs.forEach(function (attr) { return attr.value = attr.value.replace(new RegExp(escapeRegExp(startsWithEncoded), 'g'), replaceWithEncoded); });\n  updateReferences(references, startsWithEncoded, replaceWithEncoded);\n};\n\n/**\n * Internal emitter events\n * @enum\n * @private\n */\nvar Events = {\n  MOUNT: 'mount',\n  SYMBOL_MOUNT: 'symbol_mount'\n};\n\nvar BrowserSprite = (function (Sprite$$1) {\n  function BrowserSprite(cfg) {\n    var this$1 = this;\n    if ( cfg === void 0 ) cfg = {};\n\n    Sprite$$1.call(this, deepmerge(defaultConfig$1, cfg));\n\n    var emitter = mitt();\n    this._emitter = emitter;\n    this.node = null;\n\n    var ref = this;\n    var config = ref.config;\n\n    if (config.autoConfigure) {\n      this._autoConfigure(cfg);\n    }\n\n    if (config.syncUrlsWithBaseTag) {\n      var baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\n      emitter.on(Events.MOUNT, function () { return this$1.updateUrls('#', baseUrl); });\n    }\n\n    var handleLocationChange = this._handleLocationChange.bind(this);\n    this._handleLocationChange = handleLocationChange;\n\n    // Provide way to update sprite urls externally via dispatching custom window event\n    if (config.listenLocationChangeEvent) {\n      window.addEventListener(config.locationChangeEvent, handleLocationChange);\n    }\n\n    // Emit location change event in Angular automatically\n    if (config.locationChangeAngularEmitter) {\n      locationChangeAngularEmitter(config.locationChangeEvent);\n    }\n\n    // After sprite mounted\n    emitter.on(Events.MOUNT, function (spriteNode) {\n      if (config.moveGradientsOutsideSymbol) {\n        moveGradientsOutsideSymbol(spriteNode);\n      }\n    });\n\n    // After symbol mounted into sprite\n    emitter.on(Events.SYMBOL_MOUNT, function (symbolNode) {\n      if (config.moveGradientsOutsideSymbol) {\n        moveGradientsOutsideSymbol(symbolNode.parentNode);\n      }\n\n      if (browser.isIE() || browser.isEdge()) {\n        evalStylesIEWorkaround(symbolNode);\n      }\n    });\n  }\n\n  if ( Sprite$$1 ) BrowserSprite.__proto__ = Sprite$$1;\n  BrowserSprite.prototype = Object.create( Sprite$$1 && Sprite$$1.prototype );\n  BrowserSprite.prototype.constructor = BrowserSprite;\n\n  var prototypeAccessors = { isMounted: {} };\n\n  /**\n   * @return {boolean}\n   */\n  prototypeAccessors.isMounted.get = function () {\n    return !!this.node;\n  };\n\n  /**\n   * Automatically configure following options\n   * - `syncUrlsWithBaseTag`\n   * - `locationChangeAngularEmitter`\n   * - `moveGradientsOutsideSymbol`\n   * @param {Object} cfg\n   * @private\n   */\n  BrowserSprite.prototype._autoConfigure = function _autoConfigure (cfg) {\n    var ref = this;\n    var config = ref.config;\n\n    if (typeof cfg.syncUrlsWithBaseTag === 'undefined') {\n      config.syncUrlsWithBaseTag = typeof document.getElementsByTagName('base')[0] !== 'undefined';\n    }\n\n    if (typeof cfg.locationChangeAngularEmitter === 'undefined') {\n        config.locationChangeAngularEmitter = typeof window.angular !== 'undefined';\n    }\n\n    if (typeof cfg.moveGradientsOutsideSymbol === 'undefined') {\n      config.moveGradientsOutsideSymbol = browser.isFirefox();\n    }\n  };\n\n  /**\n   * @param {Event} event\n   * @param {Object} event.detail\n   * @param {string} event.detail.oldUrl\n   * @param {string} event.detail.newUrl\n   * @private\n   */\n  BrowserSprite.prototype._handleLocationChange = function _handleLocationChange (event) {\n    var ref = event.detail;\n    var oldUrl = ref.oldUrl;\n    var newUrl = ref.newUrl;\n    this.updateUrls(oldUrl, newUrl);\n  };\n\n  /**\n   * Add new symbol. If symbol with the same id exists it will be replaced.\n   * If sprite already mounted - `symbol.mount(sprite.node)` will be called.\n   * @fires Events#SYMBOL_MOUNT\n   * @param {BrowserSpriteSymbol} symbol\n   * @return {boolean} `true` - symbol was added, `false` - replaced\n   */\n  BrowserSprite.prototype.add = function add (symbol) {\n    var sprite = this;\n    var isNewSymbol = Sprite$$1.prototype.add.call(this, symbol);\n\n    if (this.isMounted && isNewSymbol) {\n      symbol.mount(sprite.node);\n      this._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);\n    }\n\n    return isNewSymbol;\n  };\n\n  /**\n   * Attach to existing DOM node\n   * @param {string|Element} target\n   * @return {Element|null} attached DOM Element. null if node to attach not found.\n   */\n  BrowserSprite.prototype.attach = function attach (target) {\n    var this$1 = this;\n\n    var sprite = this;\n\n    if (sprite.isMounted) {\n      return sprite.node;\n    }\n\n    /** @type Element */\n    var node = typeof target === 'string' ? document.querySelector(target) : target;\n    sprite.node = node;\n\n    // Already added symbols needs to be mounted\n    this.symbols.forEach(function (symbol) {\n      symbol.mount(sprite.node);\n      this$1._emitter.emit(Events.SYMBOL_MOUNT, symbol.node);\n    });\n\n    // Create symbols from existing DOM nodes, add and mount them\n    arrayFrom(node.querySelectorAll('symbol'))\n      .forEach(function (symbolNode) {\n        var symbol = BrowserSpriteSymbol.createFromExistingNode(symbolNode);\n        symbol.node = symbolNode; // hack to prevent symbol mounting to sprite when adding\n        sprite.add(symbol);\n      });\n\n    this._emitter.emit(Events.MOUNT, node);\n\n    return node;\n  };\n\n  BrowserSprite.prototype.destroy = function destroy () {\n    var ref = this;\n    var config = ref.config;\n    var symbols = ref.symbols;\n    var _emitter = ref._emitter;\n\n    symbols.forEach(function (s) { return s.destroy(); });\n\n    _emitter.off('*');\n    window.removeEventListener(config.locationChangeEvent, this._handleLocationChange);\n\n    if (this.isMounted) {\n      this.unmount();\n    }\n  };\n\n  /**\n   * @fires Events#MOUNT\n   * @param {string|Element} [target]\n   * @param {boolean} [prepend=false]\n   * @return {Element|null} rendered sprite node. null if mount node not found.\n   */\n  BrowserSprite.prototype.mount = function mount (target, prepend) {\n    if ( target === void 0 ) target = this.config.mountTo;\n    if ( prepend === void 0 ) prepend = false;\n\n    var sprite = this;\n\n    if (sprite.isMounted) {\n      return sprite.node;\n    }\n\n    var mountNode = typeof target === 'string' ? document.querySelector(target) : target;\n    var node = sprite.render();\n    this.node = node;\n\n    if (prepend && mountNode.childNodes[0]) {\n      mountNode.insertBefore(node, mountNode.childNodes[0]);\n    } else {\n      mountNode.appendChild(node);\n    }\n\n    this._emitter.emit(Events.MOUNT, node);\n\n    return node;\n  };\n\n  /**\n   * @return {Element}\n   */\n  BrowserSprite.prototype.render = function render () {\n    return parse(this.stringify());\n  };\n\n  /**\n   * Detach sprite from the DOM\n   */\n  BrowserSprite.prototype.unmount = function unmount () {\n    this.node.parentNode.removeChild(this.node);\n  };\n\n  /**\n   * Update URLs in sprite and usage elements\n   * @param {string} oldUrl\n   * @param {string} newUrl\n   * @return {boolean} `true` - URLs was updated, `false` - sprite is not mounted\n   */\n  BrowserSprite.prototype.updateUrls = function updateUrls$1 (oldUrl, newUrl) {\n    if (!this.isMounted) {\n      return false;\n    }\n\n    var usages = document.querySelectorAll(this.config.usagesToUpdate);\n\n    updateUrls(\n      this.node,\n      usages,\n      ((getUrlWithoutFragment(oldUrl)) + \"#\"),\n      ((getUrlWithoutFragment(newUrl)) + \"#\")\n    );\n\n    return true;\n  };\n\n  Object.defineProperties( BrowserSprite.prototype, prototypeAccessors );\n\n  return BrowserSprite;\n}(Sprite));\n\nreturn BrowserSprite;\n\n})));\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.BrowserSpriteSymbol = factory());\n}(this, (function () { 'use strict';\n\nvar SpriteSymbol = function SpriteSymbol(ref) {\n  var id = ref.id;\n  var viewBox = ref.viewBox;\n  var content = ref.content;\n\n  this.id = id;\n  this.viewBox = viewBox;\n  this.content = content;\n};\n\n/**\n * @return {string}\n */\nSpriteSymbol.prototype.stringify = function stringify () {\n  return this.content;\n};\n\n/**\n * @return {string}\n */\nSpriteSymbol.prototype.toString = function toString () {\n  return this.stringify();\n};\n\nSpriteSymbol.prototype.destroy = function destroy () {\n    var this$1 = this;\n\n  ['id', 'viewBox', 'content'].forEach(function (prop) { return delete this$1[prop]; });\n};\n\n/**\n * @param {string} content\n * @return {Element}\n */\nvar parse = function (content) {\n  var hasImportNode = !!document.importNode;\n  var doc = new DOMParser().parseFromString(content, 'image/svg+xml').documentElement;\n\n  /**\n   * Fix for browser which are throwing WrongDocumentError\n   * if you insert an element which is not part of the document\n   * @see http://stackoverflow.com/a/7986519/4624403\n   */\n  if (hasImportNode) {\n    return document.importNode(doc, true);\n  }\n\n  return doc;\n};\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\n\n\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar deepmerge = createCommonjsModule(function (module, exports) {\n(function (root, factory) {\n    if (typeof undefined === 'function' && undefined.amd) {\n        undefined(factory);\n    } else {\n        module.exports = factory();\n    }\n}(commonjsGlobal, function () {\n\nfunction isMergeableObject(val) {\n    var nonNullObject = val && typeof val === 'object';\n\n    return nonNullObject\n        && Object.prototype.toString.call(val) !== '[object RegExp]'\n        && Object.prototype.toString.call(val) !== '[object Date]'\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true;\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice();\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument);\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument);\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument));\n        }\n    });\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {};\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function (key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n        });\n    }\n    Object.keys(source).forEach(function (key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n        }\n    });\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var array = Array.isArray(source);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge };\n    var arrayMerge = options.arrayMerge || defaultArrayMerge;\n\n    if (array) {\n        return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n};\n\nreturn deepmerge\n\n}));\n});\n\nvar namespaces_1 = createCommonjsModule(function (module, exports) {\nvar namespaces = {\n  svg: {\n    name: 'xmlns',\n    uri: 'http://www.w3.org/2000/svg'\n  },\n  xlink: {\n    name: 'xmlns:xlink',\n    uri: 'http://www.w3.org/1999/xlink'\n  }\n};\n\nexports.default = namespaces;\nmodule.exports = exports.default;\n});\n\n/**\n * @param {Object} attrs\n * @return {string}\n */\nvar objectToAttrsString = function (attrs) {\n  return Object.keys(attrs).map(function (attr) {\n    var value = attrs[attr].toString().replace(/\"/g, '&quot;');\n    return (attr + \"=\\\"\" + value + \"\\\"\");\n  }).join(' ');\n};\n\nvar svg = namespaces_1.svg;\nvar xlink = namespaces_1.xlink;\n\nvar defaultAttrs = {};\ndefaultAttrs[svg.name] = svg.uri;\ndefaultAttrs[xlink.name] = xlink.uri;\n\n/**\n * @param {string} [content]\n * @param {Object} [attributes]\n * @return {string}\n */\nvar wrapInSvgString = function (content, attributes) {\n  if ( content === void 0 ) content = '';\n\n  var attrs = deepmerge(defaultAttrs, attributes || {});\n  var attrsRendered = objectToAttrsString(attrs);\n  return (\"<svg \" + attrsRendered + \">\" + content + \"</svg>\");\n};\n\nvar BrowserSpriteSymbol = (function (SpriteSymbol$$1) {\n  function BrowserSpriteSymbol () {\n    SpriteSymbol$$1.apply(this, arguments);\n  }\n\n  if ( SpriteSymbol$$1 ) BrowserSpriteSymbol.__proto__ = SpriteSymbol$$1;\n  BrowserSpriteSymbol.prototype = Object.create( SpriteSymbol$$1 && SpriteSymbol$$1.prototype );\n  BrowserSpriteSymbol.prototype.constructor = BrowserSpriteSymbol;\n\n  var prototypeAccessors = { isMounted: {} };\n\n  prototypeAccessors.isMounted.get = function () {\n    return !!this.node;\n  };\n\n  /**\n   * @param {Element} node\n   * @return {BrowserSpriteSymbol}\n   */\n  BrowserSpriteSymbol.createFromExistingNode = function createFromExistingNode (node) {\n    return new BrowserSpriteSymbol({\n      id: node.getAttribute('id'),\n      viewBox: node.getAttribute('viewBox'),\n      content: node.outerHTML\n    });\n  };\n\n  BrowserSpriteSymbol.prototype.destroy = function destroy () {\n    if (this.isMounted) {\n      this.unmount();\n    }\n    SpriteSymbol$$1.prototype.destroy.call(this);\n  };\n\n  /**\n   * @param {Element|string} target\n   * @return {Element}\n   */\n  BrowserSpriteSymbol.prototype.mount = function mount (target) {\n    if (this.isMounted) {\n      return this.node;\n    }\n\n    var mountTarget = typeof target === 'string' ? document.querySelector(target) : target;\n    var node = this.render();\n    this.node = node;\n\n    mountTarget.appendChild(node);\n\n    return node;\n  };\n\n  /**\n   * @return {Element}\n   */\n  BrowserSpriteSymbol.prototype.render = function render () {\n    var content = this.stringify();\n    return parse(wrapInSvgString(content)).childNodes[0];\n  };\n\n  BrowserSpriteSymbol.prototype.unmount = function unmount () {\n    this.node.parentNode.removeChild(this.node);\n  };\n\n  Object.defineProperties( BrowserSpriteSymbol.prototype, prototypeAccessors );\n\n  return BrowserSpriteSymbol;\n}(SpriteSymbol));\n\nreturn BrowserSpriteSymbol;\n\n})));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","export const canUseDOM = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  /* eslint-disable */\n  window.document.createElement\n  /* eslint-enable */\n);\n\nexport const canUseEventListeners: boolean = canUseDOM && !!window.addEventListener;\n\nexport function onDOMLoaded(callback: (...args: any[]) => any) {\n  if (document.readyState !== 'loading') {\n    callback();\n  } else {\n    document.addEventListener('DOMContentLoaded', callback);\n  }\n}\n","import { canUseDOM, canUseEventListeners } from './dom';\nimport { SupportEvent } from './types';\n\ntype TimingInterface = (timeFraction: number) => number;\n\ntype DrawInterface = (progress: number) => void;\n\ninterface AnimateArgumentsInterface {\n  duration: number;\n  timing: TimingInterface;\n  draw: DrawInterface;\n}\n\n/**\n * Функция для js анимации\n * @param {number} duration\n * @param {function} timing тайминг функция анимации\n * @param {function} draw коллбэк, в который прокидывается прогресс [0, 1]\n * @returns {void}\n */\nexport function animate({ duration, timing, draw }: AnimateArgumentsInterface) {\n  if (!canUseDOM) {\n    return;\n  }\n\n  const start = window.performance.now();\n\n  window.requestAnimationFrame(function animate(time) {\n    let timeFraction = (time - start) / duration;\n\n    if (timeFraction > 1) {\n      timeFraction = 1;\n    }\n\n    const progress = timing(timeFraction);\n\n    draw(progress);\n\n    if (timeFraction < 1) {\n      window.requestAnimationFrame(animate);\n    }\n  });\n}\n\n// WebKitAnimationEvent и WebKitTransitionEvent не существуют в глобальном контексте\ndeclare const WebKitAnimationEvent: AnimationEvent;\ndeclare const WebKitTransitionEvent: TransitionEvent;\n\nexport const animationEvent: SupportEvent<'animationend'> = {\n  supported: false,\n  name: 'animationend',\n};\n\nexport const transitionEvent: SupportEvent<'transitionend'> = {\n  supported: false,\n  name: 'transitionend',\n};\n\nif (canUseDOM) {\n  if (typeof AnimationEvent !== 'undefined') {\n    animationEvent.supported = true;\n  } else if (typeof WebKitAnimationEvent !== 'undefined') {\n    animationEvent.supported = true;\n\n    // webkitAnimationEnd не входит в перечисление событий, но соответствует animationend\n    animationEvent.name = 'webkitAnimationEnd' as unknown as 'animationend';\n  }\n\n  if (typeof TransitionEvent !== 'undefined') {\n    transitionEvent.supported = true;\n  } else if (typeof WebKitTransitionEvent !== 'undefined') {\n    transitionEvent.supported = true;\n\n    // webkitTransitionEnd не входит в перечисление событий, но соответствует transitionend\n    transitionEvent.name = 'webkitTransitionEnd' as unknown as 'transitionend';\n  }\n}\n\n/**\n * Ожидание окончания анимации на элементе\n *\n * @param listener коллбэк окончания ожидания\n * @param fallbackTime сколько ждать в мс если событие не поддерживается\n * @param el элемент\n */\nexport function waitAnimationEnd(listener: (ev?: AnimationEvent) => any, fallbackTime: number, el?: GlobalEventHandlers) {\n  if (canUseEventListeners) {\n    if (animationEvent.supported && el) {\n      el.addEventListener(animationEvent.name, listener);\n    } else {\n      return window.setTimeout(listener, fallbackTime);\n    }\n  }\n}\n\n/**\n * Прекращение ожидания окончания анимации на элементе\n *\n * @param listener коллбэк окончания ожидания\n * @param handle то, что вернулось из ```waitAnimationEnd```\n * @param el элемент\n */\nexport function cancelWaitAnimationEnd(listener: (ev?: AnimationEvent) => any, handle?: number, el?: GlobalEventHandlers) {\n  if (canUseEventListeners) {\n    if (animationEvent.supported && el) {\n      el.removeEventListener(animationEvent.name, listener);\n    } else {\n      window.clearTimeout(handle);\n    }\n  }\n}\n\n/**\n * Ожидание окончания анимации перехода на элементе\n *\n * @param listener коллбэк окончания ожидания\n * @param fallbackTime сколько ждать в мс если событие не поддерживается\n * @param el элемент\n */\nexport function waitTransitionEnd(el: GlobalEventHandlers, listener: (ev?: TransitionEvent) => any, fallbackTime: number) {\n  if (canUseEventListeners) {\n    if (transitionEvent.supported && el) {\n      el.addEventListener(transitionEvent.name, listener);\n    } else {\n      return window.setTimeout(listener, fallbackTime);\n    }\n  }\n}\n\n/**\n * Прекращение ожидания окончания анимации перехода на элементе\n *\n * @param listener коллбэк окончания ожидания\n * @param handle то, что вернулось из ```waitTransitionEnd```\n * @param el элемент\n */\nexport function cancelWaitTransitionEnd(listener: (ev?: TransitionEvent) => any, handle?: number, el?: GlobalEventHandlers) {\n  if (canUseEventListeners) {\n    if (transitionEvent.supported && el) {\n      el.removeEventListener(transitionEvent.name, listener);\n    } else {\n      window.clearTimeout(handle);\n    }\n  }\n}\n\n","export const noop = () => { }; // eslint-disable-line @typescript-eslint/no-empty-function\n\nexport function throttle<T extends any[]>(fn: (...args: T) => unknown, threshold = 50, scope = window) {\n  let prevDate: number = Date.now() - threshold;\n  let timeoutId: ReturnType<typeof setTimeout>;\n\n  const throttledFn = function(...args: T) {\n    const timeLeft = prevDate + threshold - Date.now();\n\n    clearTimeout(timeoutId);\n    if (timeLeft > 0) {\n      timeoutId = setTimeout(() => {\n        prevDate = Date.now();\n        fn.apply(scope, args);\n      }, timeLeft);\n      return;\n    }\n\n    prevDate = Date.now();\n    fn.apply(scope, args);\n  };\n\n  throttledFn.cancel = () => {\n    clearTimeout(timeoutId);\n  };\n\n  return throttledFn;\n}\n\nexport function debounce<T extends any[]>(fn: (...args: T) => unknown, delay: number, context = window) {\n  let timeoutId: ReturnType<typeof setTimeout>;\n  let args: T;\n\n  const later = () => fn.apply(context, args);\n  const debouncedFn = (...a: T) => {\n    args = a;\n    clearTimeout(timeoutId);\n    timeoutId = setTimeout(later, delay);\n  };\n\n  debouncedFn.cancel = () => {\n    clearTimeout(timeoutId);\n  };\n\n  return debouncedFn;\n}\n","import { noop } from './functions';\nimport { canUseDOM, canUseEventListeners } from './dom';\n\nexport let isPassiveEventsSupported = false;\n\nif (canUseEventListeners) {\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function() {\n        isPassiveEventsSupported = true;\n      },\n    });\n\n    window.addEventListener('test', noop, options);\n    window.removeEventListener('test', noop, options);\n  } catch (e) {}\n}\n\nfunction detectSmoothScrollSupport() {\n  if (!canUseDOM) {\n    return false;\n  }\n\n  let isSupported = false;\n  try {\n    const div = document.createElement('div');\n    div.scrollTo({\n      top: 0,\n      // @ts-ignore\n      get behavior() {\n        isSupported = true;\n        return 'smooth';\n      },\n    });\n  } catch (e) {}\n  return isSupported;\n}\n\nexport let isSmoothScrollSupported = detectSmoothScrollSupport();\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","export interface ParsedQuery<T = string> {\n  [key: string]: T | T[] | null;\n}\n\nfunction parse(query: string | any): ParsedQuery {\n  if (typeof query !== 'string') {\n    return {};\n  }\n\n  query = query.trim().replace(/^[?#&]/, '');\n  if (!query) {\n    return {};\n  }\n\n  const matches = /\\?(.+)$/ig.exec(query);\n  const str = matches ? matches[1] : query;\n\n  return str\n    .split('&')\n    .reduce((acc: ParsedQuery, item: string) => {\n      const param = item.split('=');\n\n      if (param[1]) {\n        acc[param[0]] = decodeURIComponent(param[1]);\n      }\n\n      return acc;\n    }, {});\n}\n\ntype StringifyQueryItem = string | boolean | number | null | undefined;\n\ntype StringifyQuery = Record<string, StringifyQueryItem | readonly StringifyQueryItem[]>;\n\ninterface StringifyOptions {\n  /**\n   * URL encode the keys and values\n   *\n   * @default true\n   */\n  encode?: boolean;\n\n  /**\n   * Skip keys with `null` as the value.\n   * Keys with `undefined` as the value are always ignored.\n   *\n   * @default true\n   */\n  skipNull?: true;\n}\n\nfunction stringify(data: StringifyQuery, options: StringifyOptions = {}): string {\n  if (typeof data !== 'object' || data === null) {\n    return '';\n  }\n\n  options = {\n    encode: true,\n    ...options,\n  };\n\n  const encode = (value: any): string => {\n    return options.encode ? encodeURIComponent(value) : String(value);\n  };\n\n  return Object.keys(data).reduce<string[]>((acc, key) => {\n    const value = data[key];\n\n    if (value === undefined) {\n      return acc;\n    }\n\n    if (value === null) {\n      if (!options.skipNull) {\n        acc.push([encode(key), ''].join('='));\n      }\n\n      return acc;\n    }\n\n    if (Array.isArray(value)) {\n      value.map((arrayItem) => {\n        acc.push(`${encode(key)}[]=${encode(arrayItem)}`);\n      }).join();\n      return acc;\n    }\n\n    acc.push([encode(key), encode(value)].join('='));\n    return acc;\n  }, []).join('&');\n}\n\nexport const querystring = {\n  parse,\n  stringify,\n};\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import { canUseDOM } from './dom';\n\nexport const IPHONE_SAFARI_BOTTOM_BAR = 45;\nexport const IPHONE_X_SAFARI_BOTTOM_BAR = 85;\n\nexport const IPHONE_KEYBOARD_REJECT_OFFSET = 180;\n\n// 44 iPhone, 55 iPad, iPad Pro 69\nexport const IOS_NO_KEYBOARD_ALLOWED_OFFSET = 70;\n\nexport function detectIOS(ua?: string) {\n  if (!ua) {\n    ua = canUseDOM ? navigator.userAgent.toLowerCase() : '';\n  }\n\n  const isIPadOS = checkIPadOS(ua);\n  const isIPad = isIPadOS || ua.indexOf('ipad') !== -1;\n  const isIPhone = !isIPad && ua.search(/iphone|ipod/) !== -1;\n  const isIOS = isIPhone || isIPad;\n\n  let iosVersion = isIOS && ua.match(/OS ([\\d_]+) like Mac OS X/i);\n  let iosMajor = 0;\n  let iosMinor = 0;\n\n  if (isIPadOS) {\n    iosMajor = 13;\n    iosMinor = 0;\n  } else if (iosVersion) {\n    iosVersion = iosVersion[1].split('_');\n    iosMajor = +iosVersion[0];\n    iosMinor = +iosVersion[1];\n  }\n\n  iosVersion = null;\n\n  const isScrollBasedViewport = iosMajor < 13 && !(iosMajor === 11 && iosMinor < 3);\n  const isWKWebView = isIOS && checkWKWebView(ua);\n\n  let isIPhoneX = false;\n\n  if (canUseDOM) {\n    isIPhoneX = isIOS && screen.width === 375 &&\n      screen.height === 812 && window.devicePixelRatio === 3;\n  }\n\n  const isIOSChrome = ua.search(/crios/i) !== -1;\n\n  return {\n    isIPad, isIPhone, isIOS, isIPadOS,\n    iosMajor, iosMinor,\n    isWKWebView, isScrollBasedViewport,\n    isIPhoneX,\n    isIOSChrome,\n  };\n}\n\nconst {\n  isIPad, isIPhone, isIOS, isIPadOS,\n  iosMajor, iosMinor,\n  isWKWebView, isScrollBasedViewport,\n  isIPhoneX,\n  isIOSChrome,\n} = detectIOS();\n\nexport {\n  isIPad, isIPhone, isIOS, isIPadOS,\n  iosMajor, iosMinor,\n  isWKWebView, isScrollBasedViewport,\n  isIPhoneX,\n  isIOSChrome,\n};\n\nexport function isLandscapePhone() {\n  return Math.abs(window.orientation as number) === 90 && !isIPad;\n}\n\n// Reference:\n// https://stackoverflow.com/questions/28795476/detect-if-page-is-loaded-inside-wkwebview-in-javascript/30495399#30495399\nfunction checkWKWebView(ua: string) {\n  if (!canUseDOM) {\n    return false;\n  }\n\n  const webkit = (window as any).webkit;\n\n  if (webkit && webkit.messageHandlers) {\n    return true;\n  }\n\n  const lte9 = /constructor/i.test(String(window.HTMLElement));\n  const idb = !!window.indexedDB;\n\n  if (\n    ua.indexOf('safari') !== -1 &&\n    ua.indexOf('version') !== -1 &&\n    !(navigator as any).standalone\n  ) {\n    // Safari (WKWebView/Nitro since 6+)\n  } else if ((!idb && lte9) || !(window.statusbar && window.statusbar.visible)) {\n    // UIWebView\n  } else if (!lte9 || idb) {\n    // WKWebView\n    return true;\n  }\n\n  return false;\n}\n\nexport function checkIPadOS(ua: string) {\n  if (!canUseDOM) {\n    return false;\n  }\n\n  const notIOS = !/ipad|iphone|ipod/.test(ua);\n  const macOS = /mac os/.test(ua);\n\n  if (macOS && notIOS && typeof (navigator as any).standalone === 'boolean') {\n    return true;\n  }\n\n  return false;\n}\n","import { isIOS, isIPadOS } from './IOSDetections';\nimport { canUseDOM } from './dom';\n\nlet hasMouse: boolean;\nlet hasTouchEvents: boolean;\nlet hasHover: boolean;\nlet hasTouch: boolean;\n\nif (canUseDOM) {\n  if (isIOS && !isIPadOS) {\n    hasMouse = false;\n    hasHover = false;\n    hasTouchEvents = true;\n    hasTouch = true;\n  } else {\n    hasTouchEvents = 'ontouchstart' in document;\n    hasTouch = hasTouchEvents ||\n      ('maxTouchPoints' in navigator && navigator.maxTouchPoints > 0);\n\n    if (hasTouch) {\n      const notMobile = !/android|mobile|tablet/i.test(navigator.userAgent);\n\n      hasMouse = window.matchMedia && matchMedia('(pointer)').matches ?\n        matchMedia('(pointer: fine)').matches : notMobile;\n\n      hasHover = hasMouse && (window.matchMedia && matchMedia('(hover)').matches ?\n        matchMedia('(hover: hover)').matches : notMobile);\n    } else {\n      hasMouse = true;\n      hasHover = true;\n    }\n  }\n} else {\n  hasMouse = false;\n  hasTouchEvents = false;\n  hasHover = false;\n  hasTouch = false;\n}\n\nexport { hasMouse, hasHover, hasTouchEvents, hasTouch };\n","/* eslint-disable */\nimport { canUseDOM } from \"./dom\";\n\nexport type MatchesMethod = (css: string) => boolean;\n\nexport interface OldElement extends Element {\n  matchesSelector?: MatchesMethod;\n  mozMatchesSelector?: MatchesMethod;\n  msMatchesSelector?: MatchesMethod;\n}\n\nif (canUseDOM) {\n  const ElementProto = Element.prototype;\n\n  // Element.prototype.matches\n  if (!ElementProto.matches) {\n    ElementProto.matches =\n      (ElementProto as OldElement).matchesSelector ||\n      ElementProto.webkitMatchesSelector ||\n      (ElementProto as OldElement).mozMatchesSelector ||\n      (ElementProto as OldElement).msMatchesSelector;\n  }\n\n  // Element.prototype.closest\n  if (!ElementProto.closest) {\n    ElementProto.closest = function (css: string): Element | null {\n      let node: Element | null = this;\n      while (node) {\n        if (node.matches(css)) {\n          return node;\n        } else {\n          node = node.parentElement;\n        }\n      }\n      return null;\n    };\n  }\n}\n\n// Array.prototype.includes\nif (!Array.prototype.includes) {\n  Object.defineProperty(Array.prototype, \"includes\", {\n    value: function (searchElement: any, fromIndex: number) {\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined');\n      }\n      const o = Object(this);\n      const len = o.length >>> 0;\n      if (len === 0) {\n        return false;\n      }\n      const n = fromIndex | 0;\n      let k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\n      function sameValueZero(x: any, y: any) {\n        return (\n          x === y ||\n          (typeof x === \"number\" &&\n            typeof y === \"number\" &&\n            isNaN(x) &&\n            isNaN(y))\n        );\n      }\n      while (k < len) {\n        if (sameValueZero(o[k], searchElement)) {\n          return true;\n        }\n        k++;\n      }\n      return false;\n    },\n  });\n}\n\n// Array.prototype.find\nif (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, \"find\", {\n    value: function (callback: Parameters<Array<any>[\"find\"]>[0]) {\n      if (this === null) {\n        throw new TypeError(\"Array.prototype.find called on null or undefined\");\n      } else if (typeof callback !== \"function\") {\n        throw new TypeError(\"callback must be a function\");\n      }\n\n      let list = Object(this);\n      let length = list.length >>> 0;\n      let thisArg = arguments[1];\n\n      for (let i = 0; i < length; i++) {\n        let element = list[i];\n        if (callback.call(thisArg, element, i, list)) {\n          return element;\n        }\n      }\n    },\n  });\n}\n\n// String.prototype.padStart\nif (!String.prototype.padStart) {\n  String.prototype.padStart = function padStart(targetLength, padString) {\n    targetLength = targetLength >> 0;\n    padString = String(padString || \" \");\n    if (this.length > targetLength) {\n      return String(this);\n    } else {\n      targetLength = targetLength - this.length;\n      if (targetLength > padString.length) {\n        padString += padString.repeat(targetLength / padString.length);\n      }\n      return padString.slice(0, targetLength) + String(this);\n    }\n  };\n}\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","// exported for tests =(\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const __controller = {\n  _noConflict: false,\n  _isSet: false,\n  get noConflict() {\n    return this._noConflict;\n  },\n  set noConflict(v: boolean) {\n    if (this._isSet && v !== this.noConflict) {\n      setTimeout(() => {\n        throw new Error(\n          \"[vkui]: Single VKUI instance can not have different globalClassName settings\"\n        );\n      }, 0);\n    }\n    this._noConflict = v;\n    this._isSet = true;\n  },\n};\n\nexport const classScopingMode: { noConflict: boolean } = __controller;\n","import { classScopingMode } from \"./classScopingMode\";\n\nconst hasTransformable = /\\b(?=[A-Z])/g;\nconst noConflictCache: any = {};\nconst legacyCache: any = {};\nfunction prefixSingle(scopedStyle: string): string {\n  const { noConflict } = classScopingMode;\n  const cache = noConflict ? noConflictCache : legacyCache;\n  if (cache[scopedStyle]) {\n    return cache[scopedStyle];\n  }\n  const prefixed = scopedStyle.replace(hasTransformable, \"vkui\");\n  const resolved =\n    noConflict || scopedStyle === prefixed\n      ? prefixed\n      : prefixed + \" \" + scopedStyle;\n  cache[scopedStyle] = resolved;\n  return resolved;\n}\n\nexport function prefixClass(scopedStyle: string | string[]) {\n  if (typeof scopedStyle === \"string\") {\n    return prefixSingle(scopedStyle);\n  }\n\n  let resolved = \"\";\n  for (let i = 0; i < scopedStyle.length; i++) {\n    const separator = resolved ? \" \" : \"\";\n\n    resolved += separator + prefixSingle(scopedStyle[i]);\n  }\n\n  return resolved;\n}\n","import * as React from \"react\";\nimport { prefixClass } from \"./prefixClass\";\n\nfunction processProps(props: any) {\n  const newProps: any = {};\n  for (let key in props) {\n    if (\n      Object.prototype.hasOwnProperty.call(props, key) &&\n      key !== \"vkuiClass\"\n    ) {\n      newProps[key] = props[key];\n    }\n  }\n  if (props.vkuiClass) {\n    const className: string = props.className;\n    const resolved = prefixClass(props.vkuiClass);\n    newProps.className = className ? className + \" \" + resolved : resolved;\n  }\n  return newProps;\n}\n\nfunction createScopedElement(_type: any, props?: any) {\n  let args = arguments;\n\n  if (!props || !(\"vkuiClass\" in props)) {\n    return React.createElement.apply(undefined, args as any);\n  }\n\n  let argsLength = args.length;\n  let createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = args[0];\n  createElementArgArray[1] = processProps(props);\n\n  for (let i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  }\n\n  return React.createElement.apply(null, createElementArgArray as any);\n}\n\ncreateScopedElement.Fragment = React.Fragment;\n\nexport { createScopedElement };\n","export interface ObjectClassNames {\n  [index: string]: boolean | undefined | null;\n}\n\nexport type ClassName =\n  | number\n  | string\n  | ObjectClassNames\n  | false\n  | null\n  | undefined;\n\nexport function classNames(...classnames: ClassName[]): string | string[];\nexport function classNames() {\n  let result: string[] = [];\n\n  for (let i = 0; i < arguments.length; i++) {\n    const item = arguments[i];\n    if (!item) {\n      continue;\n    }\n    switch (typeof item) {\n      case \"string\":\n        result.push(item);\n        break;\n      case \"object\":\n        for (let key in item) {\n          if (item[key]) {\n            result.push(key);\n          }\n        }\n        break;\n      default:\n        result.push(`${item}`);\n    }\n  }\n\n  return result.length > 1 ? result : result[0] || \"\";\n}\n\nexport function classNamesString(...args: ClassName[]) {\n  const res = classNames(...args);\n  return typeof res === \"string\" ? res : res.join(\" \");\n}\n","import { canUseDOM } from \"./dom\";\n\n// eslint-disable-next-line no-restricted-globals\nexport const isTesting = Boolean(canUseDOM && (window as any).__isVkuiTesting);\n","import { Version } from \"../types\";\nimport { detectIOS } from \"@vkontakte/vkjs\";\n\nexport enum System {\n  IOS = \"ios\",\n  UNKNOWN = \"\",\n}\n\nexport interface BrowserInfo {\n  userAgent: string;\n  system: System;\n  systemVersion: Version | null;\n}\n\nconst memoized: { [index: string]: BrowserInfo } = {};\n\nexport function computeBrowserInfo(userAgent = \"\"): BrowserInfo {\n  if (memoized[userAgent]) {\n    return memoized[userAgent];\n  }\n\n  let systemVersion: Version | null = null;\n  let system = System.UNKNOWN;\n\n  const { isIOS, iosMajor, iosMinor } = detectIOS(userAgent);\n\n  if (isIOS) {\n    system = System.IOS;\n    systemVersion = {\n      major: iosMajor,\n      minor: iosMinor,\n    };\n  }\n\n  const browserInfo: BrowserInfo = {\n    userAgent,\n    system,\n    systemVersion,\n  };\n\n  memoized[userAgent] = browserInfo;\n\n  return browserInfo;\n}\n","import { canUseDOM } from \"./dom\";\nimport { isTesting } from \"./testing\";\n\nexport type VKUISupportEvents = {\n  supported: boolean;\n  name?: string | null;\n};\n\n// WebKitAnimationEvent и WebKitTransitionEvent не существуют в глобальном контексте\ndeclare const WebKitAnimationEvent: AnimationEvent;\ndeclare const WebKitTransitionEvent: TransitionEvent;\n\nconst animationEvent = {\n  supported: false,\n};\n\nconst transitionEvent: VKUISupportEvents = {\n  supported: false,\n  name: null,\n};\n\nif (canUseDOM && !isTesting) {\n  if (typeof AnimationEvent !== \"undefined\") {\n    animationEvent.supported = true;\n  } else if (typeof WebKitAnimationEvent !== \"undefined\") {\n    animationEvent.supported = true;\n  }\n\n  if (typeof TransitionEvent !== \"undefined\") {\n    transitionEvent.supported = true;\n    transitionEvent.name = \"transitionend\";\n  } else if (typeof WebKitTransitionEvent !== \"undefined\") {\n    transitionEvent.supported = true;\n    transitionEvent.name = \"webkitTransitionEnd\";\n  }\n}\n\nexport { animationEvent, transitionEvent };\n","import { BrowserInfo, computeBrowserInfo } from \"./browser\";\nimport { querystring } from \"@vkontakte/vkjs\";\nimport { canUseDOM } from \"./dom\";\n\nexport enum Platform {\n  ANDROID = \"android\",\n  IOS = \"ios\",\n  VKCOM = \"vkcom\",\n}\n\nconst PLATFORM_ALIAS = {\n  desktop_web: Platform.VKCOM,\n};\n\nfunction isPlatformAlias(\n  platformAlias: string\n): platformAlias is keyof typeof PLATFORM_ALIAS {\n  return platformAlias in PLATFORM_ALIAS;\n}\n\n/**\n * Значение, которое передаётся в качестве query-параметра при открытии VK Mini Apps\n * @see {@link https://dev.vk.com/mini-apps/development/launch-params#vk_platform vk_platform}\n */\nfunction getPlatformByQueryString(queryString: string): Platform | undefined {\n  try {\n    const parsedQuery = querystring.parse(queryString);\n    const platformAliasByQuery = parsedQuery[\"vk_platform\"];\n\n    return typeof platformAliasByQuery === \"string\" &&\n      isPlatformAlias(platformAliasByQuery)\n      ? PLATFORM_ALIAS[platformAliasByQuery]\n      : undefined;\n  } catch (e) {\n    console.warn(e);\n\n    return undefined;\n  }\n}\n\nconst platformByQueryString = canUseDOM\n  ? getPlatformByQueryString(location.search)\n  : undefined;\n\nexport const ANDROID = Platform.ANDROID;\nexport const IOS = Platform.IOS;\nexport const VKCOM = Platform.VKCOM;\n\nexport type PlatformType =\n  | Platform.ANDROID\n  | Platform.IOS\n  | Platform.VKCOM\n  | string;\n\nexport function platform(browserInfo?: BrowserInfo): PlatformType {\n  if (platformByQueryString) {\n    return platformByQueryString;\n  }\n\n  if (!browserInfo) {\n    browserInfo = computeBrowserInfo();\n  }\n\n  return browserInfo.system === \"ios\" ? IOS : ANDROID;\n}\n\nconst platformName = platform();\n\n/**\n * @deprecated для определения платформы используйте withPlatform или usePlatform\n */\nexport const IS_PLATFORM_IOS: boolean = platformName === IOS;\n/**\n * @deprecated для определения платформы используйте withPlatform или usePlatform\n */\nexport const IS_PLATFORM_ANDROID: boolean = platformName === ANDROID;\n","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import { canUseDOM } from \"./dom\";\n\nexport interface VKUITouchEvent extends MouseEvent, TouchEvent {}\nexport type VKUITouchEventHander = (e: VKUITouchEvent) => void;\n\n/*\n * Получает координату по оси абсцисс из touch- или mouse-события\n */\nconst coordX = (e: VKUITouchEvent): number => {\n  if (e.clientX != null) {\n    return e.clientX;\n  }\n  return e.changedTouches && e.changedTouches[0].clientX;\n};\n\n/*\n * Получает координату по оси ординат из touch- или mouse-события\n */\nconst coordY = (e: VKUITouchEvent): number => {\n  if (e.clientY != null) {\n    return e.clientY;\n  }\n  return e.changedTouches && e.changedTouches[0].clientY;\n};\n\n// eslint-disable-next-line no-restricted-globals\nconst touchEnabled = () => canUseDOM && \"ontouchstart\" in window;\n\n/*\n * Возвращает массив поддерживаемых событий\n * Если браузер поддерживает pointer events или подключена handjs, вернет события указателя.\n * Если нет, используем события мыши\n */\nfunction getSupportedEvents(): string[] {\n  if (touchEnabled()) {\n    return [\"touchstart\", \"touchmove\", \"touchend\", \"touchcancel\"];\n  }\n\n  return [\"mousedown\", \"mousemove\", \"mouseup\", \"mouseleave\"];\n}\n\n/*\n * Рассчитывает \"сопротивление\" для iOS тач-событий\n */\nfunction rubber(\n  offset: number,\n  dimension: number,\n  resistanceRate: number,\n  isAndroid: boolean\n): number {\n  if (isAndroid || offset < 0) {\n    return offset;\n  }\n\n  const offsettedResistance = offset * resistanceRate;\n  return (offsettedResistance * dimension) / (offsettedResistance + dimension);\n}\n\nexport { getSupportedEvents, coordX, coordY, touchEnabled, rubber };\n","import * as React from \"react\";\nimport { canUseDOM } from \"@vkontakte/vkjs\";\nexport { canUseDOM, canUseEventListeners, onDOMLoaded } from \"@vkontakte/vkjs\";\n\nexport interface DOMContextInterface {\n  /**\n   * @ignore\n   */\n  window?: Window;\n  /**\n   * @ignore\n   */\n  document?: Document;\n}\n\nexport type DOMProps = DOMContextInterface;\n\n/* eslint-disable no-restricted-globals */\nexport const getDOM = () => ({\n  window: canUseDOM ? window : undefined,\n  document: canUseDOM ? document : undefined,\n});\n/* eslint-enable no-restricted-globals */\n\nexport const DOMContext = React.createContext<DOMContextInterface>(getDOM());\n\nexport const useDOM = () => {\n  return React.useContext(DOMContext);\n};\n\nexport function withDOM<Props>(\n  Component: React.ComponentType<Props & DOMProps>\n): React.ComponentType<Props> {\n  const WithDOM = (props: Props) => {\n    const dom = useDOM();\n    return <Component {...props} {...dom} />;\n  };\n  return WithDOM;\n}\n\nexport function blurActiveElement(document: Document | undefined) {\n  if (document && document.activeElement) {\n    (document.activeElement as HTMLElement).blur();\n  }\n}\n","import * as React from \"react\";\n\nexport type ImgOnlyAttributes = {\n  [index in Exclude<\n    keyof React.ImgHTMLAttributes<HTMLImageElement>,\n    keyof React.HTMLAttributes<HTMLImageElement>\n  >]: React.ImgHTMLAttributes<HTMLImageElement>[index];\n};\n\n// Является ли переданное значение числовым\nexport function isNumeric(value: any): boolean {\n  return !isNaN(parseFloat(value)) && isFinite(value);\n}\n\n// Является ли переданное значение функцией\nexport function isFunction(value: any): value is (...args: any[]) => any {\n  return typeof value === \"function\";\n}\n\nexport function debounce<A extends any[]>(\n  fn: (...args: A) => void,\n  delay: number\n) {\n  let timeout: any;\n\n  return (...args: A) => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => fn(...args), delay);\n  };\n}\n\nexport function leadingZero(val: number) {\n  let strVal = val.toFixed();\n\n  if (strVal.length === 1) {\n    return \"0\" + strVal;\n  }\n\n  return strVal;\n}\n\nexport function hasReactNode(value: React.ReactNode): boolean {\n  return (\n    value !== undefined && value !== false && value !== null && value !== \"\"\n  );\n}\n\nexport function isPrimitiveReactNode(node: React.ReactNode): boolean {\n  return typeof node === \"string\" || typeof node === \"number\";\n}\n\nexport function setRef<T>(element: T, ref?: React.Ref<T>): void {\n  if (ref) {\n    if (typeof ref === \"function\") {\n      ref(element);\n    } else {\n      (ref as React.MutableRefObject<T>).current = element;\n    }\n  }\n}\n\nexport function multiRef<T>(\n  ...refs: Array<React.Ref<T> | undefined>\n): React.RefObject<T> {\n  let current: T | null = null;\n  return {\n    get current() {\n      return current;\n    },\n    set current(element) {\n      current = element;\n      refs.forEach((ref) => ref && setRef(element, ref));\n    },\n  };\n}\n\n// eslint-disable-next-line\nexport const noop = () => {};\n\nexport function getTitleFromChildren(children: React.ReactNode): string {\n  let label = \"\";\n\n  React.Children.map(children, (child) => {\n    if (typeof child === \"string\") {\n      label += child;\n    }\n  });\n\n  return label;\n}\n\nexport const generateRandomId = () => {\n  return Math.random()\n    .toString(36)\n    .replace(/[^a-z]+/g, \"\");\n};\n\nexport const stopPropagation = <T extends React.SyntheticEvent>(event: T) =>\n  event.stopPropagation();\n","import * as React from \"react\";\nimport { setRef } from \"../lib/utils\";\n\nexport function useExternRef<T>(\n  ...externRefs: Array<React.Ref<T> | undefined | false>\n): React.MutableRefObject<T | null> {\n  const stableRef = React.useRef<T | null>(null);\n\n  return React.useMemo(\n    () => ({\n      get current() {\n        return stableRef.current;\n      },\n      set current(el) {\n        stableRef.current = el;\n        externRefs.forEach((ref) => {\n          if (ref) {\n            setRef(el, ref);\n          }\n        });\n      },\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    externRefs\n  );\n}\n","import * as React from \"react\";\nimport { canUseDOM } from \"./dom\";\n\nexport const useIsomorphicLayoutEffect = canUseDOM\n  ? // eslint-disable-next-line no-restricted-properties\n    React.useLayoutEffect\n  : React.useEffect;\n","import * as React from \"react\";\nimport { noop } from \"../lib/utils\";\nimport { canUseDOM } from \"../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../lib/useIsomorphicLayoutEffect\";\n\ninterface EventListenerHandle {\n  add: (el: HTMLElement | Document | Window) => void;\n  remove: () => void;\n}\n\nexport function useEventListener<K extends keyof GlobalEventHandlersEventMap>(\n  event: K,\n  _cb:\n    | false\n    | null\n    | undefined\n    | ((ev: GlobalEventHandlersEventMap[K]) => void),\n  _options?: AddEventListenerOptions\n): EventListenerHandle;\nexport function useEventListener<E extends Event>(\n  event: string,\n  _cb: false | null | undefined | ((ev: E) => void),\n  _options?: AddEventListenerOptions\n): EventListenerHandle;\nexport function useEventListener<\n  E extends Event,\n  K extends keyof GlobalEventHandlersEventMap\n>(\n  event: string | K,\n  _cb: false | null | undefined | ((ev: E) => void),\n  _options?: AddEventListenerOptions\n): EventListenerHandle {\n  const cbRef = React.useRef(_cb);\n  useIsomorphicLayoutEffect(() => {\n    cbRef.current = _cb;\n  }, [_cb]);\n  const cb = React.useCallback(\n    (e: any) => cbRef.current && cbRef.current(e),\n    []\n  );\n\n  const detach = React.useRef(noop);\n  const remove = React.useCallback(() => {\n    detach.current();\n    detach.current = noop;\n  }, []);\n  const add = React.useCallback(\n    (el: HTMLElement | Document | Window) => {\n      if (!canUseDOM) {\n        return;\n      }\n      remove();\n      if (!el) {\n        return;\n      }\n      const options = { ..._options };\n      el.addEventListener(event, cb, options);\n      detach.current = () => el.removeEventListener(event, cb, options);\n    },\n    [_options, cb, event, remove]\n  );\n  React.useEffect(() => remove, [remove]);\n\n  return { add, remove };\n}\n","import * as React from \"react\";\nimport {\n  getSupportedEvents,\n  coordX,\n  coordY,\n  touchEnabled,\n  VKUITouchEvent,\n} from \"../../lib/touch\";\nimport { HasComponent, HasRootRef } from \"../../types\";\nimport { useDOM } from \"../../lib/dom\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { useEventListener } from \"../../hooks/useEventListener\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\n\nexport interface TouchProps\n  extends React.AllHTMLAttributes<HTMLElement>,\n    HasRootRef<HTMLElement>,\n    HasComponent {\n  /**\n   * Привязать onEnter и onLeave через pointer-events - работает на disabled-инпутах\n   */\n  usePointerHover?: boolean;\n  useCapture?: boolean;\n  slideThreshold?: number;\n  noSlideClick?: boolean;\n  onEnter?: HoverHandler;\n  onLeave?: HoverHandler;\n  onStart?: TouchEventHandler;\n  onStartX?: TouchEventHandler;\n  onStartY?: TouchEventHandler;\n  onMove?: TouchEventHandler;\n  onMoveX?: TouchEventHandler;\n  onMoveY?: TouchEventHandler;\n  onEnd?: TouchEventHandler;\n  onEndX?: TouchEventHandler;\n  onEndY?: TouchEventHandler;\n  stopPropagation?: boolean;\n}\n\nexport interface Gesture {\n  startX: number;\n  startY: number;\n  startT: Date;\n  duration: number;\n  isPressed: boolean;\n  isY: boolean;\n  isX: boolean;\n  isSlideX: boolean;\n  isSlideY: boolean;\n  isSlide: boolean;\n  shiftX: number;\n  shiftY: number;\n  shiftXAbs: number;\n  shiftYAbs: number;\n}\n\nexport interface TouchEvent extends Gesture {\n  originalEvent: VKUITouchEvent;\n}\n\ntype HoverHandler = (outputEvent: MouseEvent) => void;\nexport type TouchEventHandler = (e: TouchEvent) => void;\nexport type ClickHandler = (e: React.MouseEvent<HTMLElement>) => void;\nexport type DragHandler = (e: React.DragEvent<HTMLElement>) => void;\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Touch\n */\nexport const Touch = ({\n  onStart,\n  onStartX,\n  onStartY,\n  onMove: _onMove,\n  onMoveX,\n  onMoveY,\n  onLeave,\n  onEnter,\n  onEnd: _onEnd,\n  onEndX,\n  onEndY,\n  onClickCapture,\n  usePointerHover,\n  slideThreshold = 5,\n  useCapture = false,\n  Component = \"div\",\n  getRootRef,\n  noSlideClick = false,\n  stopPropagation = false,\n  ...restProps\n}: TouchProps) => {\n  const { document } = useDOM();\n  const events = React.useMemo(getSupportedEvents, []);\n  const didSlide = React.useRef(false);\n  const gesture = React.useRef<Partial<Gesture> | null>(null);\n  const handle = (\n    e: VKUITouchEvent,\n    handlers: Array<TouchEventHandler | undefined | false>\n  ) => {\n    stopPropagation && e.stopPropagation();\n    handlers.forEach((cb) => {\n      const duration = Date.now() - (gesture.current?.startT?.getTime() ?? 0);\n      cb && cb({ ...(gesture.current as Gesture), duration, originalEvent: e });\n    });\n  };\n\n  const enterHandler = useEventListener(\n    usePointerHover ? \"pointerenter\" : \"mouseenter\",\n    onEnter\n  );\n  const leaveHandler = useEventListener(\n    usePointerHover ? \"pointerleave\" : \"mouseleave\",\n    onLeave\n  );\n  const startHandler = useEventListener(\n    events[0],\n    (e: VKUITouchEvent) => {\n      gesture.current = initGesture(coordX(e), coordY(e));\n\n      handle(e, [onStart, onStartX, onStartY]);\n      // 1 line, 2 bad specs, 2 workarounds:\n      subscribe(\n        touchEnabled()\n          ? // Touch events fire on initial target, and won't bubble if its removed\n            // see: #235, #1968, https://stackoverflow.com/a/45760014\n            (e.target as HTMLElement)\n          : // Mouse events fire on the element under pointer, so we lose move / end\n            // if pointer goes outside container.\n            // Can be fixed by PointerEvents' setPointerCapture later\n            document\n      );\n    },\n    { capture: useCapture, passive: false }\n  );\n  const containerRef = useExternRef(getRootRef);\n\n  useIsomorphicLayoutEffect(() => {\n    const el = containerRef.current;\n    if (el) {\n      enterHandler.add(el);\n      leaveHandler.add(el);\n      startHandler.add(el);\n    }\n  }, [Component]);\n\n  function onMove(e: VKUITouchEvent) {\n    const {\n      isPressed,\n      isX,\n      isY,\n      startX = 0,\n      startY = 0,\n    } = gesture.current ?? {};\n\n    if (isPressed) {\n      // смещения\n      const shiftX = coordX(e) - startX;\n      const shiftY = coordY(e) - startY;\n\n      // абсолютные значения смещений\n      const shiftXAbs = Math.abs(shiftX);\n      const shiftYAbs = Math.abs(shiftY);\n\n      // Если определяем мультитач, то прерываем жест\n      if (!!e.touches && e.touches.length > 1) {\n        return onEnd(e);\n      }\n\n      // если мы ещё не определились\n      if (!isX && !isY) {\n        const willBeX = shiftXAbs >= slideThreshold && shiftXAbs > shiftYAbs;\n        const willBeY = shiftYAbs >= slideThreshold && shiftYAbs > shiftXAbs;\n        const willBeSlidedX = willBeX && (!!onMoveX || !!_onMove);\n        const willBeSlidedY = willBeY && (!!onMoveY || !!_onMove);\n\n        Object.assign(gesture.current, {\n          isY: willBeY,\n          isX: willBeX,\n          isSlideX: willBeSlidedX,\n          isSlideY: willBeSlidedY,\n          isSlide: willBeSlidedX || willBeSlidedY,\n        });\n      }\n\n      if (gesture.current?.isSlide) {\n        Object.assign(gesture.current, {\n          shiftX,\n          shiftY,\n          shiftXAbs,\n          shiftYAbs,\n        });\n\n        handle(e, [\n          _onMove,\n          gesture.current.isSlideX && onMoveX,\n          gesture.current.isSlideY && onMoveY,\n        ]);\n      }\n    }\n  }\n\n  function onEnd(e: VKUITouchEvent) {\n    const { isPressed, isSlide, isSlideX, isSlideY } = gesture.current ?? {};\n\n    if (isPressed) {\n      handle(e, [_onEnd, isSlideY && onEndY, isSlideX && onEndX]);\n    }\n\n    didSlide.current = Boolean(isSlide);\n    gesture.current = {};\n\n    // Если это был тач-евент, симулируем отмену hover\n    if (touchEnabled()) {\n      onLeave && onLeave(e);\n    }\n    unsubscribe();\n  }\n\n  const listenerParams = { capture: useCapture, passive: false };\n  const listeners = [\n    useEventListener(events[1], onMove, listenerParams),\n    useEventListener(events[2], onEnd, listenerParams),\n    useEventListener(events[3], onEnd, listenerParams),\n  ];\n  function subscribe(el: HTMLElement | Document | null | undefined) {\n    if (el) {\n      listeners.forEach((l) => l.add(el));\n    }\n  }\n  function unsubscribe() {\n    listeners.forEach((l) => l.remove());\n  }\n\n  /**\n   * Обработчик событий dragstart\n   * Отменяет нативное браузерное поведение для вложенных ссылок и изображений\n   */\n  const onDragStart = (e: React.DragEvent<HTMLElement>) => {\n    const target = e.target as HTMLElement;\n    if (target.tagName === \"A\" || target.tagName === \"IMG\") {\n      e.preventDefault();\n    }\n  };\n\n  /**\n   * Обработчик клика по компоненту\n   * Отменяет переход по вложенной ссылке, если был зафиксирован свайп\n   */\n  const postGestureClick: typeof onClickCapture = (e) => {\n    if (!didSlide.current) {\n      return onClickCapture && onClickCapture(e);\n    }\n    // eslint-disable-next-line no-restricted-properties\n    if ((e.target as HTMLElement).closest(\"a\")) {\n      e.preventDefault();\n    }\n    if (noSlideClick) {\n      e.stopPropagation();\n    } else {\n      onClickCapture && onClickCapture(e);\n    }\n    didSlide.current = false;\n  };\n\n  return (\n    <Component\n      {...restProps}\n      onDragStart={onDragStart}\n      onClickCapture={postGestureClick}\n      ref={containerRef}\n    />\n  );\n};\n\nfunction initGesture(startX: number, startY: number): Gesture {\n  return {\n    startX,\n    startY,\n    startT: new Date(),\n    duration: 0,\n    isPressed: true,\n    isY: false,\n    isX: false,\n    isSlideX: false,\n    isSlideY: false,\n    isSlide: false,\n    shiftX: 0,\n    shiftY: 0,\n    shiftXAbs: 0,\n    shiftYAbs: 0,\n  };\n}\n","import * as React from \"react\";\nimport vkBridge, { AppearanceType } from \"@vkontakte/vk-bridge\";\nimport { PlatformType, platform } from \"../../lib/platform\";\n\nexport enum WebviewType {\n  VKAPPS = \"vkapps\",\n  INTERNAL = \"internal\",\n}\n\nexport interface ConfigProviderContextInterface {\n  /**\n   * Подсказывает приложению, обёрнутому в `ConfigProvider`, где открыто приложение: внутри webview или в мобильном браузере\n   */\n  isWebView: boolean;\n  /**\n   * Тип вебвью.<br>\n   * В случае `WebviewType.VKAPPS` интерфейс будет адаптирован для отображения в вебвью Mini Apps (системные контролы в правой части шапки)\n   */\n  webviewType: WebviewType.INTERNAL | WebviewType.VKAPPS;\n  /**\n   * Тип приложения\n   */\n  app?: string;\n  /**\n   * Тип цветовой схемы – `light` или `dark`\n   */\n  appearance?: AppearanceType;\n  /**\n   * Включена ли анимация переходов между экранами в `Root` и `View`\n   */\n  transitionMotionEnabled: boolean;\n  /**\n   * Платформа\n   */\n  platform: PlatformType;\n  hasNewTokens: boolean;\n}\n\nexport const ConfigProviderContext =\n  React.createContext<ConfigProviderContextInterface>({\n    webviewType: WebviewType.VKAPPS,\n    isWebView: vkBridge.isWebView(),\n    transitionMotionEnabled: true,\n    platform: platform(),\n    hasNewTokens: false,\n    // appearance is auto-detected by default\n    // appearance: Appearance.LIGHT,\n  });\n\nexport const useConfigProvider = () => React.useContext(ConfigProviderContext);\n","export const clamp = (value: number, min: number, max: number) =>\n  Math.max(min, Math.min(value, max));\n\nexport function precisionRound(number: number, precision = 1) {\n  let factor = Math.pow(10, precision);\n  return Math.round(number * factor) / factor;\n}\n\nfunction precision(number: number) {\n  return (`${number}`.split(\".\")[1] || \"\").length;\n}\n\nfunction decimatedClamp(val: number, min: number, max: number, step?: number) {\n  if (step == null || step <= 0) {\n    return clamp(val, min, max);\n  }\n  const prec = precision(step);\n  // Round value to nearest min + k1 * step\n  const decimatedOffset = precisionRound(\n    Math.round((val - min) / step) * step,\n    prec\n  );\n  // Round range length _down_ to nearest min + k2 * step\n  const decimatedRange = precisionRound(\n    Math.floor((max - min) / step) * step,\n    prec\n  );\n  return min + clamp(decimatedOffset, 0, decimatedRange);\n}\n\nexport function rescale(\n  value: number,\n  from: [number, number],\n  to: [number, number],\n  options: { step?: number } = {}\n) {\n  const scaled =\n    ((value - from[0]) / (from[1] - from[0])) * (to[1] - to[0]) + to[0];\n  return decimatedClamp(scaled, to[0], to[1], options.step);\n}\n","import * as React from \"react\";\nimport { noop } from \"../../lib/utils\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { clamp } from \"../../helpers/math\";\nimport { useDOM } from \"../../lib/dom\";\n\nconst clearDisableScrollStyle = (node: HTMLElement) => {\n  Object.assign(node.style, {\n    position: \"\",\n    top: \"\",\n    left: \"\",\n    right: \"\",\n    overflowY: \"\",\n    overflowX: \"\",\n  });\n};\n\nexport interface ScrollContextInterface {\n  getScroll(this: void): { x: number; y: number };\n  scrollTo(this: void, x?: number, y?: number): void;\n  isScrollLock: boolean;\n  enableScrollLock(this: void): void;\n  disableScrollLock(this: void): void;\n  beforeScrollLockFnSetRef?: React.RefObject<Set<() => void>>;\n}\n\nexport const ScrollContext = React.createContext<ScrollContextInterface>({\n  getScroll: () => ({ x: 0, y: 0 }),\n  scrollTo: noop,\n  isScrollLock: false,\n  enableScrollLock: noop,\n  disableScrollLock: noop,\n});\n\nexport const useScroll = () => React.useContext(ScrollContext);\n\nexport interface ScrollControllerProps {\n  elRef: React.RefObject<HTMLElement>;\n  children?: React.ReactNode;\n}\n\nexport const GlobalScrollController = ({ children }: ScrollControllerProps) => {\n  const { window, document } = useDOM();\n  const [isScrollLock, setScrollLock] = React.useState(false);\n  const beforeScrollLockFnSetRef = React.useRef<Set<() => void>>(new Set());\n\n  const getScroll = React.useCallback<ScrollContextInterface[\"getScroll\"]>(\n    () => ({ x: window!.pageXOffset, y: window!.pageYOffset }),\n    [window]\n  );\n  const scrollTo = React.useCallback<ScrollContextInterface[\"scrollTo\"]>(\n    (x = 0, y = 0) => {\n      // Some iOS versions do not normalize scroll — do it manually.\n      window!.scrollTo(\n        x ? clamp(x, 0, document!.body.scrollWidth - window!.innerWidth) : 0,\n        y ? clamp(y, 0, document!.body.scrollHeight - window!.innerHeight) : 0\n      );\n    },\n    [document, window]\n  );\n\n  const enableScrollLock = React.useCallback<\n    ScrollContextInterface[\"enableScrollLock\"]\n  >(() => {\n    beforeScrollLockFnSetRef.current.forEach((fn) => {\n      fn();\n    });\n\n    const scrollY = window!.pageYOffset;\n    const scrollX = window!.pageXOffset;\n    const overflowY =\n      window!.innerWidth > document!.documentElement.clientWidth\n        ? \"scroll\"\n        : \"\";\n    const overflowX =\n      window!.innerHeight > document!.documentElement.clientHeight\n        ? \"scroll\"\n        : \"\";\n\n    Object.assign(document!.body.style, {\n      position: \"fixed\",\n      top: `-${scrollY}px`,\n      left: `-${scrollX}px`,\n      right: \"0\",\n      overflowY,\n      overflowX,\n    });\n    setScrollLock(true);\n  }, [document, window]);\n\n  const disableScrollLock = React.useCallback<\n    ScrollContextInterface[\"disableScrollLock\"]\n  >(() => {\n    const scrollY = document!.body.style.top;\n    const scrollX = document!.body.style.left;\n\n    clearDisableScrollStyle(document!.body);\n    window!.scrollTo(-parseInt(scrollX || \"0\"), -parseInt(scrollY || \"0\"));\n    setScrollLock(false);\n  }, [document, window]);\n\n  const scrollController = React.useMemo<ScrollContextInterface>(\n    () => ({\n      getScroll,\n      scrollTo,\n      isScrollLock,\n      disableScrollLock,\n      enableScrollLock,\n\n      beforeScrollLockFnSetRef: beforeScrollLockFnSetRef,\n    }),\n    [getScroll, scrollTo, isScrollLock, disableScrollLock, enableScrollLock]\n  );\n\n  return (\n    <ScrollContext.Provider value={scrollController}>\n      {children}\n    </ScrollContext.Provider>\n  );\n};\n\nexport const ElementScrollController = ({\n  elRef,\n  children,\n}: ScrollControllerProps) => {\n  const [isScrollLock, setScrollLock] = React.useState(false);\n  const beforeScrollLockFnSetRef = React.useRef<Set<() => void>>(new Set());\n\n  const getScroll = React.useCallback<ScrollContextInterface[\"getScroll\"]>(\n    () => ({\n      x: elRef.current?.scrollLeft ?? 0,\n      y: elRef.current?.scrollTop ?? 0,\n    }),\n    [elRef]\n  );\n  const scrollTo = React.useCallback<ScrollContextInterface[\"scrollTo\"]>(\n    (x = 0, y = 0) => {\n      const el = elRef.current;\n      // Some iOS versions do not normalize scroll — do it manually.\n      el?.scrollTo(\n        x ? clamp(x, 0, el.scrollWidth - el.clientWidth) : 0,\n        y ? clamp(y, 0, el.scrollHeight - el.clientHeight) : 0\n      );\n    },\n    [elRef]\n  );\n\n  const enableScrollLock = React.useCallback<\n    ScrollContextInterface[\"enableScrollLock\"]\n  >(() => {\n    const el = elRef.current;\n    if (!el) {\n      return;\n    }\n    beforeScrollLockFnSetRef.current.forEach((fn) => {\n      fn();\n    });\n\n    const scrollY = el.scrollTop;\n    const scrollX = el.scrollLeft;\n    const overflowY = el.scrollWidth > el.clientWidth ? \"scroll\" : \"\";\n    const overflowX = el.scrollHeight > el.clientHeight ? \"scroll\" : \"\";\n\n    Object.assign(el.style, {\n      position: \"absolute\",\n      top: `-${scrollY}px`,\n      left: `-${scrollX}px`,\n      right: \"0\",\n      overflowY,\n      overflowX,\n    });\n    setScrollLock(true);\n  }, [elRef]);\n\n  const disableScrollLock = React.useCallback<\n    ScrollContextInterface[\"disableScrollLock\"]\n  >(() => {\n    const el = elRef.current;\n    if (!el) {\n      return;\n    }\n\n    const scrollY = el.style.top;\n    const scrollX = el.style.left;\n\n    clearDisableScrollStyle(el);\n    el.scrollTo(-parseInt(scrollX || \"0\"), -parseInt(scrollY || \"0\"));\n    setScrollLock(false);\n  }, [elRef]);\n\n  const scrollController = React.useMemo<ScrollContextInterface>(\n    () => ({\n      getScroll,\n      scrollTo,\n      isScrollLock,\n      disableScrollLock,\n      enableScrollLock,\n      beforeScrollLockFnSetRef,\n    }),\n    [getScroll, scrollTo, isScrollLock, disableScrollLock, enableScrollLock]\n  );\n\n  return (\n    <ScrollContext.Provider value={scrollController}>\n      {children}\n    </ScrollContext.Provider>\n  );\n};\n\n/**\n * Вызывает функцию effect, до блокировки прокрутки\n * @param effect функция, которая может возвращать функцию очистки\n * @param deps effect обновится только при изменении значений в списке.\n */\nexport const useScrollLockEffect = (\n  effect: React.EffectCallback,\n  deps: React.DependencyList\n) => {\n  const destructorRef = React.useRef<ReturnType<React.EffectCallback>>(noop);\n  const { isScrollLock, beforeScrollLockFnSetRef } = useScroll();\n\n  // Изменяем effectCallback только при изменении deps\n  const effectCallback = React.useCallback(() => {\n    destructorRef.current = effect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, deps);\n\n  // Добавляем effectCallback в список функций, которые необходимо вызвать\n  // до блокировки\n  React.useEffect(() => {\n    const beforeSet = beforeScrollLockFnSetRef?.current;\n    if (!beforeSet) {\n      return noop;\n    }\n\n    beforeSet.add(effectCallback);\n\n    return () => {\n      beforeSet.delete(effectCallback);\n    };\n  }, [beforeScrollLockFnSetRef, effectCallback]);\n\n  // Вызываем сбрасывающую функцию, после отключения блокировки\n  React.useEffect(() => {\n    if (!isScrollLock && destructorRef.current) {\n      destructorRef.current();\n    }\n  }, [isScrollLock]);\n};\n\nexport const useScrollLock = (enabled = true) => {\n  const { enableScrollLock, disableScrollLock } = useScroll();\n  useIsomorphicLayoutEffect(() => {\n    if (enabled) {\n      enableScrollLock();\n      return disableScrollLock;\n    }\n    return noop;\n  }, [enableScrollLock, disableScrollLock, enabled]);\n};\n","import { AppearanceSchemeType, AppearanceType } from \"@vkontakte/vk-bridge\";\nimport { PlatformType, VKCOM } from \"../lib/platform\";\nimport { warnOnce } from \"../lib/warnOnce\";\nimport { getScheme } from \"./getScheme\";\n\nexport enum Scheme {\n  /**\n   * @deprecated будет удалено в 5.0.0\n   * версия оставлена для совместимости со старыми версиями клиентов\n   */\n  DEPRECATED_CLIENT_LIGHT = \"client_light\",\n  /**\n   * @deprecated будет удалено в 5.0.0\n   * версия оставлена для совместимости со старыми версиями клиентов\n   */\n  DEPRECATED_CLIENT_DARK = \"client_dark\",\n  /**\n   * @deprecated будет удалено в 5.0.0\n   * версия оставлена для совместимости с vkcom, когда там была только одна схема\n   */\n  VKCOM = \"vkcom\",\n\n  BRIGHT_LIGHT = \"bright_light\",\n  SPACE_GRAY = \"space_gray\",\n  VKCOM_LIGHT = \"vkcom_light\",\n  VKCOM_DARK = \"vkcom_dark\",\n}\n\nexport type AppearanceScheme =\n  | AppearanceSchemeType\n  | Scheme.VKCOM\n  | Scheme.VKCOM_DARK\n  | Scheme.VKCOM_LIGHT\n  | \"inherit\";\n\nexport enum Appearance {\n  DARK = \"dark\",\n  LIGHT = \"light\",\n}\n\nconst warn = warnOnce(\"scheme\");\n\nexport interface NormalizeSchemeProps {\n  platform: PlatformType;\n  scheme?: AppearanceScheme;\n  appearance?: AppearanceType;\n}\n\nexport function normalizeScheme({\n  platform,\n  scheme,\n  appearance,\n}: NormalizeSchemeProps): Scheme | \"inherit\" {\n  if (scheme === \"inherit\") {\n    return scheme;\n  }\n\n  if (appearance || scheme === undefined) {\n    return getScheme({ platform, appearance });\n  }\n\n  if (scheme === Scheme.VKCOM) {\n    process.env.NODE_ENV === \"development\" &&\n      warn(\n        `Схема \"${Scheme.VKCOM}\" устарела и будет удалена в v5.0.0. Вместо неё используйте \"${Scheme.VKCOM_LIGHT}\"`\n      );\n    return Scheme.VKCOM_LIGHT;\n  }\n  if (\n    platform === VKCOM &&\n    (scheme === Scheme.BRIGHT_LIGHT || scheme === Scheme.SPACE_GRAY)\n  ) {\n    process.env.NODE_ENV === \"development\" &&\n      warn(\n        `Платформа \"vkcom\" и схема \"${scheme}\" несовместимы. С этой платформой можно использовать схемы \"${Scheme.VKCOM_LIGHT}\" или \"${Scheme.VKCOM_DARK}\"`,\n        \"error\"\n      );\n    return Scheme.VKCOM_LIGHT;\n  }\n  switch (scheme) {\n    case Scheme.DEPRECATED_CLIENT_LIGHT:\n      return Scheme.BRIGHT_LIGHT;\n    case Scheme.DEPRECATED_CLIENT_DARK:\n      return Scheme.SPACE_GRAY;\n    default:\n      return scheme as Scheme;\n  }\n}\n","import * as React from \"react\";\nimport { useScrollLockEffect } from \"../AppRoot/ScrollContext\";\nimport { classNames } from \"../../lib/classNames\";\nimport { noop } from \"../../lib/utils\";\nimport \"./SplitCol.css\";\n\nexport interface SplitColContextProps {\n  colRef: React.RefObject<HTMLDivElement> | null;\n  animate: boolean;\n}\n\nexport const SplitColContext = React.createContext<SplitColContextProps>({\n  colRef: null,\n  animate: true,\n});\n\nexport const useSplitCol = () => React.useContext(SplitColContext);\n\nexport interface SplitColProps extends React.HTMLAttributes<HTMLDivElement> {\n  width?: number | string;\n  maxWidth?: number | string;\n  minWidth?: number | string;\n  /**\n   * Если false, то переходы между Panel происходят без анимации\n   */\n  animate?: boolean;\n  /**\n   * Если true, то добавляются боковые отступы фиксированной величины\n   */\n  spaced?: boolean;\n  fixed?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SplitCol\n */\nexport const SplitCol = ({\n  children,\n  width,\n  maxWidth,\n  minWidth,\n  spaced,\n  animate = false,\n  fixed,\n  style,\n  ...restProps\n}: SplitColProps) => {\n  const baseRef = React.useRef<HTMLDivElement>(null);\n\n  const fixedInnerRef = React.useRef<HTMLDivElement>(null);\n\n  const contextValue = React.useMemo(() => {\n    return {\n      colRef: baseRef,\n      animate,\n    };\n  }, [baseRef, animate]);\n\n  useScrollLockEffect(() => {\n    const fixedInner = fixedInnerRef.current;\n    if (!fixedInner) {\n      return noop;\n    }\n\n    fixedInner.style.top = `${fixedInner.offsetTop}px`;\n\n    return () => {\n      fixedInner.style.top = \"\";\n    };\n  }, [fixedInnerRef.current]);\n\n  return (\n    <div\n      {...restProps}\n      style={{\n        ...style,\n        width: width,\n        maxWidth: maxWidth,\n        minWidth: minWidth,\n      }}\n      ref={baseRef}\n      vkuiClass={classNames(\n        \"SplitCol\",\n        spaced && \"SplitCol--spaced\",\n        fixed && \"SplitCol--fixed\"\n      )}\n    >\n      <SplitColContext.Provider value={contextValue}>\n        {fixed ? (\n          <div ref={fixedInnerRef} vkuiClass=\"SplitCol__fixedInner\">\n            {children}\n          </div>\n        ) : (\n          children\n        )}\n      </SplitColContext.Provider>\n    </div>\n  );\n};\n","import * as React from \"react\";\n\nexport interface AppRootContextInterface {\n  appRoot?: React.RefObject<HTMLDivElement>;\n  portalRoot?: HTMLDivElement | null;\n  embedded?: boolean;\n  mode?: \"partial\" | \"embedded\" | \"full\";\n  keyboardInput?: boolean;\n  disablePortal?: boolean;\n}\n\nexport const AppRootContext = React.createContext<AppRootContextInterface>({\n  portalRoot: null,\n});\n","export type WarnOnceHandler = (\n  message: string,\n  type?: \"warn\" | \"error\"\n) => void;\n\nexport function warnOnce(zone: string): WarnOnceHandler {\n  const didWarn: { [msg: string]: boolean } = {};\n\n  return (message: string, type: \"warn\" | \"error\" = \"warn\") => {\n    if (!didWarn[message]) {\n      console[type](`[VKUI/${zone}] ${message}`);\n      didWarn[message] = true;\n    }\n  };\n}\n","import { AppearanceType } from \"@vkontakte/vk-bridge\";\nimport { PlatformType, VKCOM } from \"../lib/platform\";\nimport { Scheme } from \"./scheme\";\n\nexport interface GetSchemeProps {\n  platform?: PlatformType;\n  appearance?: AppearanceType;\n}\n\nexport function getScheme({ platform, appearance }: GetSchemeProps): Scheme {\n  switch (appearance) {\n    case \"dark\":\n      switch (platform) {\n        case VKCOM:\n          return Scheme.VKCOM_DARK;\n        default:\n          return Scheme.SPACE_GRAY;\n      }\n    default:\n      switch (platform) {\n        case VKCOM:\n          return Scheme.VKCOM_LIGHT;\n        default:\n          return Scheme.BRIGHT_LIGHT;\n      }\n  }\n}\n","import * as React from \"react\";\nimport { AppearanceType } from \"@vkontakte/vk-bridge\";\nimport { Appearance } from \"../../helpers/scheme\";\n\nexport const AppearanceProviderContext = React.createContext<AppearanceType>(\n  Appearance.LIGHT\n);\n","import * as React from \"react\";\nimport { PlatformType, platform } from \"./platform\";\nimport { BrowserInfo, computeBrowserInfo } from \"./browser\";\nimport { DOMContext, getDOM } from \"../lib/dom\";\n\nexport interface SSRContextInterface {\n  platform: PlatformType | null;\n  userAgent?: string;\n  browserInfo?: BrowserInfo;\n}\n\nexport const SSRContext = React.createContext<SSRContextInterface>({\n  platform: null,\n  userAgent: \"\",\n  browserInfo: undefined,\n});\n\nexport interface SSRWrapperProps {\n  userAgent?: string;\n  browserInfo?: BrowserInfo;\n  children?: React.ReactNode;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SSR\n */\nexport const SSRWrapper = ({\n  userAgent,\n  browserInfo,\n  children,\n}: SSRWrapperProps) => {\n  if (!browserInfo && userAgent) {\n    browserInfo = computeBrowserInfo(userAgent);\n  }\n\n  // TODO: Каждый раз создаётся новый объект для контекста - плохо\n  const contextValue = {\n    platform: platform(browserInfo),\n    browserInfo,\n    userAgent,\n  };\n\n  // TODO: move to state, and update in effect?\n  const dom = getDOM();\n\n  return (\n    <SSRContext.Provider value={contextValue}>\n      <DOMContext.Provider value={dom}>{children}</DOMContext.Provider>\n    </SSRContext.Provider>\n  );\n};\n","import * as React from \"react\";\nimport { PlatformType } from \"../lib/platform\";\nimport { SSRContext } from \"../lib/SSR\";\nimport { ConfigProviderContext } from \"../components/ConfigProvider/ConfigProviderContext\";\n\nexport function usePlatform(): PlatformType {\n  const ssrContext = React.useContext(SSRContext);\n  const { platform } = React.useContext(ConfigProviderContext);\n  return ssrContext.platform || platform;\n}\n","import * as React from \"react\";\nimport { AppearanceType } from \"@vkontakte/vk-bridge\";\nimport { AppearanceProviderContext } from \"./AppearanceProviderContext\";\nimport { getScheme } from \"../../helpers/getScheme\";\nimport { classNamesString } from \"../../lib/classNames\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { Platform } from \"../../lib/platform\";\n\nexport interface AppearanceProviderProps {\n  appearance?: AppearanceType;\n  children?: React.ReactNode;\n}\n\nexport const generateVKUITokensClassName = (\n  platform: string,\n  appearance: string\n): string => {\n  let tokensPlatform;\n  switch (platform) {\n    case Platform.ANDROID:\n      tokensPlatform = \"vkBase\";\n      break;\n    case Platform.IOS:\n      tokensPlatform = \"vkIOS\";\n      break;\n    case Platform.VKCOM:\n      tokensPlatform = \"vkCom\";\n      break;\n    default:\n      tokensPlatform = platform;\n  }\n\n  return `vkui--${tokensPlatform}--${appearance}`;\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/AppearanceProvider\n */\nexport const AppearanceProvider = ({\n  children,\n  appearance = \"light\",\n}: AppearanceProviderProps) => {\n  const platform = usePlatform();\n  const scheme = getScheme({\n    platform,\n    appearance,\n  });\n\n  return (\n    <AppearanceProviderContext.Provider value={appearance}>\n      {React.Children.map(children, (child) => {\n        if (React.isValidElement(child)) {\n          return React.cloneElement(child, {\n            className: classNamesString(\n              child.props.className,\n              `vkui${scheme}`,\n              generateVKUITokensClassName(platform, appearance)\n            ),\n          });\n        }\n        return child;\n      })}\n    </AppearanceProviderContext.Provider>\n  );\n};\n","import * as React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { AppRootContext } from \"./AppRootContext\";\nimport { AppearanceProvider } from \"../AppearanceProvider/AppearanceProvider\";\nimport { useAppearance } from \"../../hooks/useAppearance\";\n\nexport interface AppRootPortalProps {\n  className?: string;\n  forcePortal?: boolean;\n  children?: React.ReactNode;\n}\n\nexport const AppRootPortal = ({\n  children,\n  className,\n  forcePortal,\n}: AppRootPortalProps) => {\n  const { portalRoot, mode, disablePortal } = React.useContext(AppRootContext);\n  const appearance = useAppearance();\n\n  forcePortal = forcePortal ?? mode !== \"full\";\n  return !disablePortal && portalRoot && forcePortal ? (\n    createPortal(\n      <AppearanceProvider appearance={appearance}>\n        <div className={className}>{children}</div>\n      </AppearanceProvider>,\n      portalRoot\n    )\n  ) : (\n    <React.Fragment>{children}</React.Fragment>\n  );\n};\n","import * as React from \"react\";\nimport { AppearanceProviderContext } from \"../components/AppearanceProvider/AppearanceProviderContext\";\n\nexport const useAppearance = () => React.useContext(AppearanceProviderContext);\n","import * as React from \"react\";\n\nexport function objectEquals(o1: any, o2: any) {\n  return (\n    Object.keys(o1).length === Object.keys(o2).length &&\n    Object.keys(o1).every((k) => o1[k] === o2[k])\n  );\n}\n\nexport function useObjectMemo<T>(object: T): T {\n  const cache = React.useRef(object);\n  if (!objectEquals(cache.current, object)) {\n    cache.current = object;\n  }\n  return cache.current;\n}\n","import * as React from \"react\";\nimport { useObjectMemo } from \"../../hooks/useObjectMemo\";\n\nexport interface TransitionContextProps {\n  entering: boolean;\n}\nconst TransitionContext = React.createContext<TransitionContextProps>({\n  entering: false,\n});\nexport const useNavTransition = () => React.useContext(TransitionContext);\n\nexport const NavTransitionProvider = ({\n  children,\n  entering,\n}: React.PropsWithChildren<TransitionContextProps>) => {\n  const parentContext = useNavTransition();\n  const contextValue = useObjectMemo({\n    entering: parentContext.entering || entering,\n  });\n  return (\n    <TransitionContext.Provider value={contextValue}>\n      {children}\n    </TransitionContext.Provider>\n  );\n};\n","import { WarnOnceHandler } from \"./warnOnce\";\n\nexport interface NavIdProps {\n  /** Уникальный идентификатор навигационного элемента (вместо id) */\n  nav?: string;\n  id?: string;\n}\n\nexport function getNavId(props: NavIdProps, warn?: WarnOnceHandler) {\n  const id = props.nav || props.id;\n  if (process.env.NODE_ENV === \"development\" && !id && warn) {\n    warn('Навигационный элемент должен иметь свойство \"nav\" или \"id\"', \"error\");\n  }\n  return id;\n}\n","import * as React from \"react\";\nimport { useDOM } from \"../lib/dom\";\nimport { transitionEvent } from \"../lib/supportEvents\";\n\nexport const useWaitTransitionFinish = () => {\n  const timeoutRef = React.useRef<ReturnType<typeof setTimeout> | null>(null);\n  const { document } = useDOM();\n\n  const waitTransitionFinish = React.useCallback(\n    (\n      element: HTMLElement | null,\n      eventHandler: VoidFunction,\n      durationFallback: number\n    ) => {\n      if (element) {\n        if (\n          !document?.hidden &&\n          transitionEvent.supported &&\n          transitionEvent.name\n        ) {\n          element.removeEventListener(transitionEvent.name, eventHandler);\n          element.addEventListener(transitionEvent.name, eventHandler);\n        } else {\n          if (timeoutRef?.current) {\n            clearTimeout(timeoutRef.current);\n          }\n          timeoutRef.current = setTimeout(eventHandler, durationFallback);\n        }\n      }\n    },\n    [document, timeoutRef]\n  );\n\n  return {\n    waitTransitionFinish,\n  };\n};\n","import * as React from \"react\";\nimport { useIsomorphicLayoutEffect } from \"../lib/useIsomorphicLayoutEffect\";\nimport { canUseDOM } from \"../lib/dom\";\n\nexport function useTimeout(cb: () => any, duration: number) {\n  const options = React.useRef({ cb, duration });\n  useIsomorphicLayoutEffect(() => {\n    options.current.cb = cb;\n    options.current.duration = duration;\n  }, [cb, duration]);\n\n  const timeout = React.useRef<ReturnType<typeof setTimeout>>();\n  const clear = React.useCallback(() => {\n    if (canUseDOM && timeout?.current) {\n      clearTimeout(timeout.current);\n    }\n  }, []);\n  const set = React.useCallback(\n    (duration = options.current.duration) => {\n      clear();\n      if (canUseDOM) {\n        timeout.current = setTimeout(() => {\n          const { cb } = options.current;\n          typeof cb === \"function\" && cb();\n        }, duration);\n      }\n    },\n    [clear]\n  );\n  useIsomorphicLayoutEffect(() => clear, []);\n\n  return { set, clear };\n}\n","import * as React from \"react\";\n\nexport function usePrevious<T>(value: T): T | undefined {\n  const ref = React.useRef<T | undefined>();\n\n  React.useEffect(() => {\n    ref.current = value;\n  });\n\n  return ref.current;\n}\n","import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { animationEvent } from \"../../lib/supportEvents\";\nimport { IOS } from \"../../lib/platform\";\nimport { Touch, TouchEvent } from \"../Touch/Touch\";\nimport { useConfigProvider } from \"../ConfigProvider/ConfigProviderContext\";\nimport { useSplitCol } from \"../SplitCol/SplitCol\";\nimport { AppRootPortal } from \"../AppRoot/AppRootPortal\";\nimport { canUseDOM, useDOM, blurActiveElement } from \"../../lib/dom\";\nimport { useScroll } from \"../AppRoot/ScrollContext\";\nimport { NavTransitionProvider } from \"../NavTransitionContext/NavTransitionContext\";\nimport { getNavId, NavIdProps } from \"../../lib/getNavId\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { swipeBackExcluded } from \"./utils\";\nimport { useWaitTransitionFinish } from \"../../hooks/useWaitTransitionFinish\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { usePrevious } from \"../../hooks/usePrevious\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { noop } from \"../../lib/utils\";\nimport \"./View.css\";\n\nenum SwipeBackResults {\n  fail = 1,\n  success,\n}\n\ninterface Scrolls {\n  [index: string]: number | undefined;\n}\n\ninterface ViewsScrolls {\n  [index: string]: Scrolls;\n}\n\nexport let scrollsCache: ViewsScrolls = {};\n\nexport interface ViewProps\n  extends React.HTMLAttributes<HTMLElement>,\n    NavIdProps {\n  activePanel: string;\n  /**\n   * @deprecated будет удалено в 5.0.0. Используйте одноименное свойство у `SplitLayout`.\n   *\n   * Свойство для отрисовки `Alert`, `ActionSheet` и `ScreenSpinner`.\n   */\n  popout?: React.ReactNode;\n  /**\n   * @deprecated будет удалено в 5.0.0. Используйте одноименное свойство у `SplitLayout`.\n   *\n   * Свойство для отрисовки `ModalRoot`.\n   */\n  modal?: React.ReactNode;\n  onTransition?(params: { isBack: boolean; from: string; to: string }): void;\n  /**\n   * callback свайпа назад\n   */\n  onSwipeBack?(): void;\n  /**\n   * callback начала анимации свайпа назад.\n   */\n  onSwipeBackStart?(): void;\n  /**\n   * callback завершения анимации отмененного пользователем свайпа\n   */\n  onSwipeBackCancel?(): void;\n  history?: string[];\n}\n\nexport interface ViewState {\n  animated: boolean;\n\n  visiblePanels: string[];\n  activePanel: string | null;\n  isBack: boolean | undefined;\n  prevPanel: string | null;\n  nextPanel: string | null;\n\n  swipingBack: boolean;\n  swipeBackStartX: number;\n  swipeBackShift: number;\n  swipeBackNextPanel: string | null;\n  swipeBackPrevPanel: string | null;\n  swipeBackResult: SwipeBackResults | null;\n\n  browserSwipe: boolean;\n}\n\nconst warn = warnOnce(\"View\");\n\n/**\n * @see https://vkcom.github.io/VKUI/#/View\n */\nexport const View = ({\n  popout,\n  modal,\n  activePanel: activePanelProp,\n  history,\n  nav,\n  onTransition,\n  onSwipeBack,\n  onSwipeBackStart,\n  onSwipeBackCancel: onSwipeBackCancelProp,\n  children,\n\n  ...restProps\n}: ViewProps) => {\n  if (process.env.NODE_ENV === \"development\") {\n    popout &&\n      warn(\n        \"Свойство popout устарело и будет удалено в 5.0.0. Используйте одноименное свойство у SplitLayout.\"\n      );\n    modal &&\n      warn(\n        \"Свойство modal устарело и будет удалено в 5.0.0. Используйте одноименное свойство у SplitLayout.\"\n      );\n  }\n\n  const scrolls = React.useRef(\n    scrollsCache[getNavId({ nav, id: restProps.id }) as string] || {}\n  );\n  const afterTransition = React.useRef(noop);\n\n  React.useEffect(() => () => {\n    const id = getNavId({ nav, id: restProps.id });\n    if (id) {\n      scrollsCache[id] = scrolls.current;\n    }\n  });\n\n  const panelNodes = React.useRef<{ [id: string]: HTMLDivElement | null }>({});\n\n  const { window, document } = useDOM();\n  const scroll = useScroll();\n  const configProvider = useConfigProvider();\n  const splitCol = useSplitCol();\n  const platform = usePlatform();\n\n  const [animated, setAnimated] = React.useState(false);\n\n  const [visiblePanels, setVisiblePanels] = React.useState([activePanelProp]);\n  const [activePanel, setActivePanel] = React.useState<string | null>(\n    activePanelProp\n  );\n  const [isBack, setIsBack] = React.useState<boolean | undefined>(undefined);\n  const [prevPanel, setPrevPanel] = React.useState<string | null>(null);\n  const [nextPanel, setNextPanel] = React.useState<string | null>(null);\n\n  const [swipingBack, setSwipingBack] = React.useState<boolean>(false);\n  const [swipeBackStartX, setSwipeBackStartX] = React.useState<number>(0);\n  const [swipeBackShift, setSwipeBackShift] = React.useState<number>(0);\n  const [swipeBackNextPanel, setSwipeBackNextPanel] = React.useState<\n    string | null\n  >(null);\n  const [swipeBackPrevPanel, setSwipeBackPrevPanel] = React.useState<\n    string | null\n  >(null);\n  const [swipeBackResult, setSwipeBackResult] =\n    React.useState<SwipeBackResults | null>(null);\n\n  const [browserSwipe, setBrowserSwipe] = React.useState(false);\n\n  const prevActivePanel = usePrevious(activePanelProp);\n  const prevSwipingBack = usePrevious(swipingBack);\n  const prevBrowserSwipe = usePrevious(browserSwipe);\n  const prevSwipeBackResult = usePrevious(swipeBackResult);\n  const prevSwipeBackPrevPanel = usePrevious(swipeBackPrevPanel);\n  const prevOnTransition = usePrevious(onTransition);\n\n  const hasPopout = !!popout;\n  const hasModal = !!modal;\n\n  const panels = (\n    React.Children.toArray(children) as React.ReactElement[]\n  ).filter((panel: React.ReactElement) => {\n    const panelId = getNavId(panel.props, warn);\n\n    return (\n      (panelId !== undefined && visiblePanels.includes(panelId)) ||\n      panelId === swipeBackPrevPanel ||\n      panelId === swipeBackNextPanel\n    );\n  });\n\n  const disableAnimation =\n    configProvider?.transitionMotionEnabled === false || !splitCol?.animate;\n\n  const pickPanel = (id: string | null) => {\n    if (id === null) {\n      return null;\n    }\n    return panelNodes.current[id];\n  };\n\n  const flushTransition = React.useCallback(\n    (prevPanel: string, isBackTransition: boolean) => {\n      if (isBackTransition) {\n        scrolls.current[prevPanel] = 0;\n      }\n      setPrevPanel(null);\n      setNextPanel(null);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n      setAnimated(false);\n      setIsBack(undefined);\n\n      afterTransition.current = () => {\n        scroll?.scrollTo(\n          0,\n          isBackTransition ? scrolls.current[activePanelProp] : 0\n        );\n        onTransition &&\n          onTransition({\n            isBack: isBackTransition,\n            from: prevPanel,\n            to: activePanelProp,\n          });\n      };\n    },\n    [activePanelProp, onTransition, scroll]\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    afterTransition.current();\n    afterTransition.current = noop;\n  }, [afterTransition.current]);\n\n  const transitionEndHandler = React.useCallback(\n    (e?: React.AnimationEvent): void => {\n      if (\n        (!e ||\n          [\n            \"vkui-animation-ios-next-forward\",\n            \"vkui-animation-ios-prev-back\",\n            \"vkui-animation-view-next-forward\",\n            \"vkui-animation-view-prev-back\",\n          ].includes(e.animationName)) &&\n        prevPanel !== null\n      ) {\n        flushTransition(prevPanel, Boolean(isBack));\n      }\n    },\n    [flushTransition, isBack, prevPanel]\n  );\n\n  const { waitTransitionFinish } = useWaitTransitionFinish();\n  const animationFinishTimeout = useTimeout(\n    transitionEndHandler,\n    platform === IOS ? 600 : 300\n  );\n\n  const onSwipeBackSuccess = React.useCallback(() => {\n    onSwipeBack && onSwipeBack();\n  }, [onSwipeBack]);\n\n  const onSwipeBackCancel = React.useCallback(() => {\n    onSwipeBackCancelProp && onSwipeBackCancelProp();\n    setSwipeBackPrevPanel(null);\n    setSwipeBackNextPanel(null);\n    setSwipingBack(false);\n    setSwipeBackResult(null);\n    setSwipeBackStartX(0);\n    setSwipeBackShift(0);\n  }, [onSwipeBackCancelProp]);\n\n  const swipingBackTransitionEndHandler = React.useCallback(\n    (e?: TransitionEvent): void => {\n      // indexOf because of vendor prefixes in old browsers\n      if (\n        !e ||\n        (e?.propertyName.includes(\"transform\") &&\n          e?.target === pickPanel(swipeBackNextPanel))\n      ) {\n        switch (swipeBackResult) {\n          case SwipeBackResults.fail:\n            onSwipeBackCancel();\n            break;\n          case SwipeBackResults.success:\n            onSwipeBackSuccess();\n        }\n      }\n    },\n    [onSwipeBackCancel, onSwipeBackSuccess, swipeBackNextPanel, swipeBackResult]\n  );\n\n  const onMoveX = (e: TouchEvent): void => {\n    if (swipeBackExcluded(e)) {\n      return;\n    }\n\n    if (\n      platform === IOS &&\n      !configProvider?.isWebView &&\n      (e.startX <= 70 || e.startX >= window!.innerWidth - 70) &&\n      !browserSwipe\n    ) {\n      setBrowserSwipe(true);\n    }\n\n    if (platform === IOS && configProvider?.isWebView && onSwipeBack) {\n      if ((animated && e.startX <= 70) || !window) {\n        return;\n      }\n\n      if (e.startX <= 70 && !swipingBack && history && history.length > 1) {\n        if (activePanel !== null) {\n          scrolls.current[activePanel] = scroll?.getScroll().y;\n        }\n\n        setSwipingBack(true);\n        setSwipeBackStartX(e.startX);\n        setSwipeBackPrevPanel(activePanel);\n        setSwipeBackNextPanel(history.slice(-2)[0]);\n      }\n      if (swipingBack) {\n        let swipeBackShift = 0;\n        if (e.shiftX < 0) {\n          swipeBackShift = 0;\n        } else if (e.shiftX > window.innerWidth - swipeBackStartX) {\n          swipeBackShift = window?.innerWidth;\n        } else {\n          swipeBackShift = e.shiftX;\n        }\n        setSwipeBackShift(swipeBackShift);\n      }\n    }\n  };\n\n  const onEnd = React.useCallback(\n    (e: TouchEvent): void => {\n      if (swipingBack && window) {\n        const speed = (swipeBackShift / e.duration) * 1000;\n        if (swipeBackShift === 0) {\n          onSwipeBackCancel();\n        } else if (swipeBackShift >= (window?.innerWidth ?? 0)) {\n          onSwipeBackSuccess();\n        } else if (\n          speed > 250 ||\n          swipeBackStartX + swipeBackShift > window.innerWidth / 2\n        ) {\n          setSwipeBackResult(SwipeBackResults.success);\n        } else {\n          setSwipeBackResult(SwipeBackResults.fail);\n        }\n      }\n    },\n    [\n      onSwipeBackCancel,\n      onSwipeBackSuccess,\n      swipeBackShift,\n      swipeBackStartX,\n      swipingBack,\n      window,\n    ]\n  );\n\n  const calcPanelSwipeStyles = (\n    panelId: string | undefined\n  ): React.CSSProperties => {\n    if (!canUseDOM || !window) {\n      return {};\n    }\n\n    const isPrev = panelId === swipeBackPrevPanel;\n    const isNext = panelId === swipeBackNextPanel;\n\n    if ((!isPrev && !isNext) || swipeBackResult) {\n      return {};\n    }\n\n    let prevPanelTranslate = `${swipeBackShift}px`;\n    let nextPanelTranslate = `${\n      -50 + (swipeBackShift * 100) / window.innerWidth / 2\n    }%`;\n    let prevPanelShadow =\n      (0.3 * (window.innerWidth - swipeBackShift)) / window.innerWidth;\n\n    if (swipeBackResult) {\n      return isPrev\n        ? { boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})` }\n        : {};\n    }\n\n    if (isNext) {\n      return {\n        transform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${nextPanelTranslate}, 0, 0)`,\n      };\n    }\n    if (isPrev) {\n      return {\n        transform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        WebkitTransform: `translate3d(${prevPanelTranslate}, 0, 0)`,\n        boxShadow: `-2px 0 12px rgba(0, 0, 0, ${prevPanelShadow})`,\n      };\n    }\n\n    return {};\n  };\n\n  React.useEffect(() => {\n    popout && blurActiveElement(document);\n  }, [document, popout]);\n\n  React.useEffect(() => {\n    modal && blurActiveElement(document);\n  }, [document, modal]);\n\n  React.useEffect(() => {\n    // Нужен переход\n    if (\n      prevActivePanel &&\n      prevActivePanel !== activePanelProp &&\n      !prevSwipingBack &&\n      !prevBrowserSwipe\n    ) {\n      const firstLayerId = (\n        React.Children.toArray(children) as React.ReactElement[]\n      )\n        .map((panel) => getNavId(panel.props, warn))\n        .find((id) => id === prevActivePanel || id === activePanelProp);\n\n      const isBackTransition = firstLayerId === activePanelProp;\n      scrolls.current[prevActivePanel] = scroll?.getScroll().y;\n\n      if (disableAnimation) {\n        flushTransition(prevActivePanel, isBackTransition);\n      } else {\n        blurActiveElement(document);\n\n        setVisiblePanels([prevActivePanel, activePanelProp]);\n        setPrevPanel(prevActivePanel);\n        setNextPanel(activePanelProp);\n        setActivePanel(null);\n        setAnimated(true);\n        setIsBack(isBackTransition);\n\n        // Фолбек анимации перехода\n        if (!animationEvent.supported) {\n          animationFinishTimeout.set();\n        }\n      }\n    }\n\n    // Закончилась анимация свайпа назад\n    if (\n      prevActivePanel &&\n      prevActivePanel !== activePanelProp &&\n      prevSwipingBack\n    ) {\n      const nextPanel = activePanelProp;\n      const prevPanel = prevActivePanel;\n      if (prevSwipeBackPrevPanel) {\n        scrolls.current[prevSwipeBackPrevPanel] = 0;\n      }\n\n      setSwipeBackPrevPanel(null);\n      setSwipeBackNextPanel(null);\n      setSwipingBack(false);\n      setSwipeBackResult(null);\n      setSwipeBackStartX(0);\n      setSwipeBackShift(0);\n      setActivePanel(nextPanel);\n      setVisiblePanels([nextPanel]);\n\n      afterTransition.current = () => {\n        if (nextPanel !== null) {\n          scroll?.scrollTo(0, scrolls.current[nextPanel]);\n        }\n        prevOnTransition &&\n          prevOnTransition({\n            isBack: true,\n            from: prevPanel,\n            to: nextPanel,\n          });\n      };\n    }\n\n    // Начался свайп назад\n    if (!prevSwipingBack && swipingBack) {\n      onSwipeBackStart && onSwipeBackStart();\n    }\n\n    // Началась анимация завершения свайпа назад.\n    if (!prevSwipeBackResult && swipeBackResult) {\n      waitTransitionFinish(\n        pickPanel(swipeBackNextPanel),\n        swipingBackTransitionEndHandler,\n        platform === IOS ? 600 : 300\n      );\n    }\n\n    // Если свайп назад отменился (когда пользователь недостаточно сильно свайпнул)\n    if (\n      prevSwipeBackResult === SwipeBackResults.fail &&\n      !swipeBackResult &&\n      activePanel !== null\n    ) {\n      scroll?.scrollTo(0, scrolls.current[activePanel]);\n    }\n\n    // Закончился Safari свайп\n    if (prevActivePanel !== activePanelProp && browserSwipe) {\n      setBrowserSwipe(false);\n      setNextPanel(null);\n      setPrevPanel(null);\n      setAnimated(false);\n      setVisiblePanels([activePanelProp]);\n      setActivePanel(activePanelProp);\n    }\n  }, [\n    activePanelProp,\n    activePanel,\n    animationFinishTimeout,\n    browserSwipe,\n    children,\n    disableAnimation,\n    document,\n    flushTransition,\n    onSwipeBackStart,\n    panels,\n    platform,\n    prevActivePanel,\n    prevBrowserSwipe,\n    prevOnTransition,\n    prevSwipeBackPrevPanel,\n    prevSwipeBackResult,\n    prevSwipingBack,\n    scroll,\n    swipeBackNextPanel,\n    swipeBackResult,\n    swipingBack,\n    swipingBackTransitionEndHandler,\n    waitTransitionFinish,\n  ]);\n\n  return (\n    <Touch\n      Component=\"section\"\n      {...restProps}\n      vkuiClass={classNames(\n        \"View\",\n        platform === IOS && \"View--ios\",\n        !disableAnimation && animated && \"View--animated\",\n        !disableAnimation && swipingBack && \"View--swiping-back\",\n        disableAnimation && \"View--no-motion\"\n      )}\n      onMoveX={onMoveX}\n      onEnd={onEnd}\n    >\n      <div vkuiClass=\"View__panels\">\n        {panels.map((panel: React.ReactElement) => {\n          const panelId = getNavId(panel.props, warn);\n          const isPrev =\n            panelId === prevPanel || panelId === swipeBackPrevPanel;\n          const isTransitionTarget =\n            animated && panelId === (isBack ? prevPanel : nextPanel);\n          const compensateScroll =\n            isPrev ||\n            panelId === swipeBackNextPanel ||\n            (panelId === nextPanel && isBack);\n\n          return (\n            <div\n              vkuiClass={classNames(\n                \"View__panel\",\n                panelId === activePanel && \"View__panel--active\",\n                panelId === prevPanel && \"View__panel--prev\",\n                panelId === nextPanel && \"View__panel--next\",\n                panelId === swipeBackPrevPanel &&\n                  \"View__panel--swipe-back-prev\",\n                panelId === swipeBackNextPanel &&\n                  \"View__panel--swipe-back-next\",\n                swipeBackResult === SwipeBackResults.success &&\n                  \"View__panel--swipe-back-success\",\n                swipeBackResult === SwipeBackResults.fail &&\n                  \"View__panel--swipe-back-failed\"\n              )}\n              onAnimationEnd={\n                isTransitionTarget ? transitionEndHandler : undefined\n              }\n              ref={(el) =>\n                panelId !== undefined && (panelNodes.current[panelId] = el)\n              }\n              style={calcPanelSwipeStyles(panelId)}\n              key={panelId}\n            >\n              <div\n                vkuiClass=\"View__panel-in\"\n                style={{\n                  marginTop: compensateScroll\n                    ? -(scrolls.current[panelId as string] ?? 0)\n                    : undefined,\n                }}\n              >\n                <NavTransitionProvider\n                  entering={\n                    panelId === nextPanel || panelId === swipeBackNextPanel\n                  }\n                >\n                  {panel}\n                </NavTransitionProvider>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <AppRootPortal>\n        {hasPopout && <div vkuiClass=\"View__popout\">{popout}</div>}\n        {hasModal && <div vkuiClass=\"View__modal\">{modal}</div>}\n      </AppRootPortal>\n    </Touch>\n  );\n};\n","import * as React from \"react\";\nimport { hasHover, hasMouse } from \"@vkontakte/vkjs\";\n\nexport enum SizeType {\n  COMPACT = \"compact\",\n  REGULAR = \"regular\",\n}\n\nexport enum ViewWidth {\n  SMALL_MOBILE = 1,\n  MOBILE,\n  SMALL_TABLET,\n  TABLET,\n  DESKTOP,\n}\n\nexport enum ViewHeight {\n  EXTRA_SMALL = 1,\n  SMALL,\n  MEDIUM,\n}\n\nexport interface SizeProps {\n  sizeX?: SizeType;\n  sizeY?: SizeType;\n}\n\nexport interface AdaptivityProps extends SizeProps {\n  /**\n   * @ignore\n   */\n  viewWidth?: ViewWidth;\n  /**\n   * @ignore\n   */\n  viewHeight?: ViewHeight;\n  /**\n   * @ignore\n   */\n  hasMouse?: boolean;\n  /**\n   * @ignore\n   */\n  deviceHasHover?: boolean;\n}\n\nexport interface AdaptivityContextInterface extends SizeProps {\n  viewWidth: ViewWidth;\n  viewHeight: ViewHeight;\n  hasMouse: boolean;\n  deviceHasHover: boolean;\n}\n\nexport const AdaptivityContext =\n  React.createContext<AdaptivityContextInterface>({\n    sizeX: SizeType.COMPACT,\n    sizeY: SizeType.REGULAR,\n    hasMouse,\n    deviceHasHover: hasHover,\n    viewWidth: 0,\n    viewHeight: 0,\n  });\n","import { TouchEvent } from \"../Touch/Touch\";\n\nconst swipeBackExcludedSelector =\n  \"input, textarea, [data-vkui-swipe-back=false]\";\n\nexport function swipeBackExcluded(e: TouchEvent) {\n  const target = e.originalEvent.target as HTMLElement;\n  // eslint-disable-next-line no-restricted-properties\n  return Boolean(target?.closest?.(swipeBackExcludedSelector));\n}\n","import * as React from \"react\";\n\nexport const tooltipContainerAttr = \"data-tooltip-container\";\nexport const TooltipContainer = React.forwardRef<\n  HTMLDivElement,\n  React.HtmlHTMLAttributes<HTMLDivElement> & { fixed?: boolean }\n>(function TooltipContainer({ fixed = false, ...props }, ref) {\n  (props as any)[tooltipContainerAttr] = fixed ? \"fixed\" : \"true\";\n  return <div {...props} ref={ref} />;\n});\n","import * as React from \"react\";\nimport {\n  AdaptivityContext,\n  SizeType,\n  ViewHeight,\n  ViewWidth,\n  AdaptivityContextInterface,\n  AdaptivityProps,\n  SizeProps,\n} from \"../components/AdaptivityProvider/AdaptivityContext\";\n\nexport { SizeType, ViewWidth, ViewHeight };\nexport type { AdaptivityProps };\n\ninterface Config {\n  sizeX?: boolean;\n  sizeY?: boolean;\n  viewWidth?: boolean;\n  viewHeight?: boolean;\n  hasMouse?: boolean;\n  deviceHasHover?: boolean;\n}\n\nexport function withAdaptivity<T extends AdaptivityProps>(\n  TargetComponent: React.ComponentType<T>,\n  config: Config\n): React.FC<Omit<T, keyof AdaptivityContextInterface> & SizeProps> {\n  const AdaptivityConsumer = (\n    props: Omit<T, keyof AdaptivityContextInterface> & SizeProps\n  ) => {\n    const context = React.useContext(AdaptivityContext);\n    let update = false;\n\n    if (props.sizeX || props.sizeY) {\n      update = true;\n    }\n\n    const sizeX = props.sizeX || context.sizeX;\n    const sizeY = props.sizeY || context.sizeY;\n    const viewWidth = context.viewWidth;\n    const viewHeight = context.viewHeight;\n    const hasMouse = context.hasMouse;\n    const deviceHasHover = context.deviceHasHover;\n\n    const adaptivityProps: {\n      sizeX?: SizeType;\n      sizeY?: SizeType;\n      viewWidth?: ViewWidth;\n      viewHeight?: ViewHeight;\n      hasMouse?: boolean;\n      deviceHasHover?: boolean;\n    } = {};\n\n    config.sizeX ? (adaptivityProps.sizeX = sizeX) : undefined;\n    config.sizeY ? (adaptivityProps.sizeY = sizeY) : undefined;\n    config.viewWidth ? (adaptivityProps.viewWidth = viewWidth) : undefined;\n    config.viewHeight ? (adaptivityProps.viewHeight = viewHeight) : undefined;\n    config.hasMouse ? (adaptivityProps.hasMouse = hasMouse) : undefined;\n    config.deviceHasHover\n      ? (adaptivityProps.deviceHasHover = deviceHasHover)\n      : undefined;\n\n    const target = <TargetComponent {...(props as T)} {...adaptivityProps} />;\n\n    if (update) {\n      return (\n        <AdaptivityContext.Provider\n          value={{\n            sizeX,\n            sizeY,\n            viewWidth,\n            viewHeight,\n            hasMouse,\n            deviceHasHover,\n          }}\n        >\n          {target}\n        </AdaptivityContext.Provider>\n      );\n    }\n\n    return target;\n  };\n\n  return AdaptivityConsumer;\n}\n","import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { Touch } from \"../Touch/Touch\";\nimport { TooltipContainer } from \"../Tooltip/TooltipContainer\";\nimport { HasRootRef } from \"../../types\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { IOS, VKCOM } from \"../../lib/platform\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { NavIdProps } from \"../../lib/getNavId\";\nimport {\n  AdaptivityContextInterface,\n  AdaptivityProps,\n} from \"../AdaptivityProvider/AdaptivityContext\";\nimport \"./Panel.css\";\n\nexport interface PanelProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    HasRootRef<HTMLDivElement>,\n    AdaptivityProps,\n    NavIdProps {\n  centered?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Panel\n */\nexport const Panel = withAdaptivity<PanelProps & AdaptivityContextInterface>(\n  ({ centered = false, children, getRootRef, sizeX, nav, ...restProps }) => {\n    const platform = usePlatform();\n\n    return (\n      <div\n        {...restProps}\n        ref={getRootRef}\n        vkuiClass={classNames(\n          \"Panel\",\n          platform === IOS && \"Panel--ios\",\n          platform === VKCOM && \"Panel--vkcom\",\n          // TODO v5.0.0 поправить под новую адаптивность\n          `Panel--sizeX-${sizeX}`,\n          centered && \"Panel--centered\"\n        )}\n      >\n        <Touch Component={TooltipContainer} vkuiClass=\"Panel__in\">\n          {platform === IOS && <div vkuiClass=\"Panel__fade\" />}\n          <div vkuiClass=\"Panel__in-before\" />\n          {centered ? (\n            <div vkuiClass=\"Panel__centered\">{children}</div>\n          ) : (\n            children\n          )}\n          <div vkuiClass=\"Panel__in-after\" />\n        </Touch>\n      </div>\n    );\n  },\n  {\n    sizeX: true,\n  }\n);\n\nPanel.displayName = \"Panel\";\n","import { PlatformType, platform } from \"../lib/platform\";\n\nexport function getClassName(\n  base: string,\n  osname: PlatformType = platform()\n): string {\n  return `${base} ${base}--${osname}`;\n}\n","import { useIsomorphicLayoutEffect } from \"../lib/useIsomorphicLayoutEffect\";\nimport { useEventListener } from \"./useEventListener\";\n\nexport function useGlobalEventListener<\n  K extends keyof GlobalEventHandlersEventMap\n>(\n  element: Document | HTMLElement | Window | null | undefined,\n  event: K,\n  cb: ((ev: GlobalEventHandlersEventMap[K]) => void) | null | false | undefined,\n  options?: AddEventListenerOptions\n): void;\nexport function useGlobalEventListener<E extends Event>(\n  element: Document | HTMLElement | Window | null | undefined,\n  event: string,\n  cb: ((ev: E) => void) | null | false | undefined,\n  options?: AddEventListenerOptions\n): void;\nexport function useGlobalEventListener<\n  K extends keyof GlobalEventHandlersEventMap,\n  E extends Event\n>(\n  element: Document | HTMLElement | Window | null | undefined,\n  event: K | string,\n  cb: ((ev: E) => void) | null | false | undefined,\n  options?: AddEventListenerOptions\n) {\n  const listener = useEventListener(event, cb, options);\n  useIsomorphicLayoutEffect(() => {\n    if (cb && element) {\n      listener.add(element);\n    } else {\n      listener.remove();\n    }\n  }, [Boolean(cb), Boolean(element)]);\n}\n","import * as React from \"react\";\nimport { IOS } from \"../../lib/platform\";\nimport { classNames } from \"../../lib/classNames\";\nimport { HasRef, HasRootRef } from \"../../types\";\nimport { SplitColContext } from \"../SplitCol/SplitCol\";\nimport { TooltipContainer } from \"../Tooltip/TooltipContainer\";\nimport { useDOM } from \"../../lib/dom\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport \"./FixedLayout.css\";\n\nexport interface FixedLayoutProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    HasRootRef<HTMLDivElement>,\n    HasRef<HTMLDivElement> {\n  vertical?: \"top\" | \"bottom\";\n  /**\n   * Это свойство определяет, будет ли фон компонента окрашен в цвет фона контента.\n   * Это часто необходимо для фиксированных кнопок в нижней части экрана.\n   */\n  filled?: boolean;\n}\n\nexport interface FixedLayoutState {\n  position: \"absolute\" | null;\n  top: number;\n  bottom: number;\n  width: string;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/FixedLayout\n */\nexport const FixedLayout = ({\n  children,\n  style,\n  vertical,\n  getRootRef,\n  getRef,\n  filled,\n  ...restProps\n}: FixedLayoutProps) => {\n  const platform = usePlatform();\n  const [width, setWidth] = React.useState<string | undefined>(undefined);\n  const { window } = useDOM();\n  const { colRef } = React.useContext(SplitColContext);\n  const doResize = () =>\n    setWidth(colRef?.current ? `${colRef.current.offsetWidth}px` : undefined);\n  React.useEffect(doResize, [colRef]);\n  useGlobalEventListener(window, \"resize\", doResize);\n\n  return (\n    <TooltipContainer\n      {...restProps}\n      fixed\n      ref={getRootRef}\n      vkuiClass={classNames(\n        \"FixedLayout\",\n        platform === IOS && \"FixedLayout--ios\",\n        filled && \"FixedLayout--filled\",\n        `FixedLayout--${vertical}`\n      )}\n      style={{ ...style, width }}\n    >\n      <div vkuiClass=\"FixedLayout__in\" ref={getRef}>\n        {children}\n      </div>\n    </TooltipContainer>\n  );\n};\n","import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport \"./Separator.css\";\n\nexport interface SeparatorProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * С этим свойством компонент не будет иметь отступы слева и справа\n   */\n  wide?: boolean;\n\n  /**\n   * @deprecated Это свойство устарело и будет удалено в 5.0.0. Используйте [`Spacing`](https://vkcom.github.io/VKUI/#/Spacing).\n   */\n  expanded?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Separator\n */\nexport const Separator = ({ wide, expanded, ...restProps }: SeparatorProps) => (\n  <div\n    {...restProps}\n    aria-hidden=\"true\"\n    vkuiClass={classNames(\n      \"Separator\",\n      wide && \"Separator--wide\", // TODO: v5 remove\n      !wide && \"Separator--padded\"\n    )}\n    role=\"separator\"\n  >\n    <div\n      vkuiClass={classNames(\n        \"Separator__in\",\n        expanded && \"Separator__in--expanded\"\n      )}\n    />\n  </div>\n);\n","import * as React from \"react\";\nimport {\n  AdaptivityContext,\n  AdaptivityProps,\n  AdaptivityContextInterface,\n  ViewWidth,\n  ViewHeight,\n} from \"../components/AdaptivityProvider/AdaptivityContext\";\nimport { usePlatform } from \"./usePlatform\";\nimport { VKCOM } from \"../lib/platform\";\n\nexport type { AdaptivityProps };\n\nexport const useAdaptivity = (): AdaptivityContextInterface => {\n  return React.useContext(AdaptivityContext);\n};\n\nexport const useAdaptivityIsDesktop = (): boolean => {\n  const platform = usePlatform();\n  const { viewWidth, viewHeight, hasMouse } = useAdaptivity();\n\n  return (\n    (viewWidth >= ViewWidth.SMALL_TABLET &&\n      (hasMouse || viewHeight >= ViewHeight.MEDIUM)) ||\n    platform === VKCOM\n  );\n};\n","import * as React from \"react\";\nimport { useAdaptivity } from \"../../../hooks/useAdaptivity\";\nimport { classNames } from \"../../../lib/classNames\";\nimport { HasComponent, HasRootRef } from \"../../../types\";\nimport { warnOnce } from \"../../../lib/warnOnce\";\nimport \"./Text.css\";\n\nexport interface TextProps\n  extends React.AllHTMLAttributes<HTMLElement>,\n    HasRootRef<HTMLElement>,\n    HasComponent {\n  /**\n   * Задаёт начертание шрифта, отличное от стандартного.\n   *\n   * > ⚠️ Начертания `\"semibold\"`, `medium` и `\"regular\"` устарели и будут удалены в 5.0.0. Используйте значения `\"1\"`, `\"2\"` и `\"3\"`.\n   */\n  weight?: \"regular\" | \"medium\" | \"semibold\" | \"1\" | \"2\" | \"3\";\n}\n\nconst warn = warnOnce(\"Text\");\n/**\n * @see https://vkcom.github.io/VKUI/#/Text\n */\nexport const Text = ({\n  children,\n  weight,\n  Component = \"span\",\n  getRootRef,\n  ...restProps\n}: TextProps) => {\n  if (\n    process.env.NODE_ENV === \"development\" &&\n    typeof Component !== \"string\" &&\n    getRootRef\n  ) {\n    warn(\n      `Свойство \"getRootRef\" может использоваться только с компонентами DOM`,\n      \"error\"\n    );\n  }\n\n  if (\n    process.env.NODE_ENV === \"development\" &&\n    weight &&\n    [\"semibold\", \"medium\", \"regular\"].includes(weight)\n  ) {\n    warn(\n      `Начертание weight=\"${weight}\" устарело и будет удалено в 5.0.0. Используйте значения \"1\", \"2\" и \"3\"`\n    );\n  }\n\n  const { sizeY } = useAdaptivity();\n\n  return (\n    <Component\n      {...restProps}\n      ref={getRootRef}\n      vkuiClass={classNames(\n        \"Text\",\n        // TODO v5.0.0 перевести на новую адаптивность\n        `Text--sizeY-${sizeY}`,\n        weight && `Text--w-${weight}`\n      )}\n    >\n      {children}\n    </Component>\n  );\n};\n","import * as React from \"react\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { ModalElements, ModalsStateEntry, ModalType } from \"./types\";\n\nexport type ModalRegistryEntry = ModalElements &\n  Required<Pick<ModalsStateEntry, \"type\" | \"id\">>;\ntype ModalRefs = { [k in keyof ModalElements]: (e: ModalElements[k]) => void };\n\nexport interface ModalRootContextInterface {\n  updateModalHeight: VoidFunction;\n  registerModal(data: ModalRegistryEntry): void;\n  onClose?: VoidFunction;\n  isInsideModal: boolean;\n}\n\nexport const ModalRootContext = React.createContext<ModalRootContextInterface>({\n  updateModalHeight: () => undefined,\n  registerModal: () => undefined,\n  isInsideModal: false,\n});\n\n/**\n * All referenced elements must be static\n */\nexport function useModalRegistry(id: string | undefined, type: ModalType) {\n  const modalContext = React.useContext(ModalRootContext);\n  const elements = React.useRef<ModalElements>({}).current;\n  useIsomorphicLayoutEffect(() => {\n    if (id !== undefined) {\n      modalContext.registerModal({ ...elements, type, id });\n      // unset refs on  unmount to prevent leak\n      const reset = Object.keys(elements).reduce<ModalRegistryEntry>(\n        (acc, k) => ({ ...acc, [k]: null }),\n        { type, id }\n      );\n      return () => modalContext.registerModal(reset);\n    }\n    return undefined;\n  }, []);\n\n  const refs = React.useRef<Required<ModalRefs>>({\n    modalElement: (e) => (elements.modalElement = e),\n    innerElement: (e) => (elements.innerElement = e),\n    headerElement: (e) => (elements.headerElement = e),\n    contentElement: (e) => (elements.contentElement = e),\n  }).current;\n  return { refs };\n}\n","import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport \"./Spacing.css\";\n\nexport interface SpacingProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Высота спэйсинга\n   */\n  size?: number;\n  /**\n   * @deprecated Это свойство устарело и будет удалено в 5.0.0. Используйте [`Separator`](https://vkcom.github.io/VKUI/#/Separator) вместе с Spacing.\n   * Настройка положения сепаратора:\n   *\n   * - separator=false (default) - без сепаратора\n   * - separator=true | separator='center' - сепаратор располагается по середине\n   * - separator='top'\n   * - separator='bottom'\n   */\n  separator?: boolean | \"top\" | \"bottom\" | \"center\";\n  children?: React.ReactNode;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Spacing\n */\nexport const Spacing = ({\n  size = 8,\n  separator,\n  style,\n  ...restProps\n}: SpacingProps) => {\n  const styles = {\n    height: size,\n    ...style,\n  };\n\n  return (\n    <div\n      {...restProps}\n      aria-hidden=\"true\"\n      vkuiClass={classNames(\n        \"Spacing\",\n        !!separator && \"Spacing--separator\",\n        (separator === true || separator === \"center\") &&\n          \"Spacing--separator-center\",\n        separator === \"top\" && \"Spacing--separator-top\",\n        separator === \"bottom\" && \"Spacing--separator-bottom\"\n      )}\n      style={styles}\n    />\n  );\n};\n","import * as React from \"react\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { FixedLayout } from \"../FixedLayout/FixedLayout\";\nimport { Separator } from \"../Separator/Separator\";\nimport { Platform, VKCOM } from \"../../lib/platform\";\nimport { HasRef, HasRootRef } from \"../../types\";\nimport {\n  ConfigProviderContext,\n  WebviewType,\n} from \"../ConfigProvider/ConfigProviderContext\";\nimport {\n  AdaptivityProps,\n  SizeType,\n  withAdaptivity,\n} from \"../../hoc/withAdaptivity\";\nimport { Text } from \"../Typography/Text/Text\";\nimport { TooltipContainer } from \"../Tooltip/TooltipContainer\";\nimport { ModalRootContext } from \"../ModalRoot/ModalRootContext\";\nimport { Spacing } from \"../Spacing/Spacing\";\nimport \"./PanelHeader.css\";\n\nexport interface PanelHeaderProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    HasRef<HTMLDivElement>,\n    HasRootRef<HTMLDivElement>,\n    AdaptivityProps {\n  before?: React.ReactNode;\n  /**\n   * @deprecated Будет удалено в 5.0.0. Используйте `before`\n   */\n  left?: React.ReactNode;\n  after?: React.ReactNode;\n  /**\n   * @deprecated Будет удалено в 5.0.0. Используйте `after`\n   */\n  right?: React.ReactNode;\n  separator?: boolean;\n  transparent?: boolean;\n  shadow?: boolean;\n  /**\n   * Если `false`, то шапка будет нулевой высоты и контент панели \"залезет\" под неё\n   */\n  visor?: boolean;\n  /**\n   * Если `false`, то шапка будет в потоке. По умолчанию `true`, но если платформа vkcom, то по умолчанию `false`.\n   */\n  fixed?: boolean;\n}\n\nconst PanelHeaderIn = ({\n  before,\n  after,\n  separator,\n  children,\n}: PanelHeaderProps) => {\n  const { webviewType } = React.useContext(ConfigProviderContext);\n  const { isInsideModal } = React.useContext(ModalRootContext);\n  const platform = usePlatform();\n\n  return (\n    <React.Fragment>\n      <TooltipContainer fixed vkuiClass=\"PanelHeader__in\">\n        <div vkuiClass=\"PanelHeader__before\">{before}</div>\n        <div vkuiClass=\"PanelHeader__content\">\n          {platform === VKCOM ? (\n            <Text weight=\"2\">{children}</Text>\n          ) : (\n            <span vkuiClass=\"PanelHeader__content-in\">{children}</span>\n          )}\n        </div>\n        <div vkuiClass=\"PanelHeader__after\">\n          {(webviewType === WebviewType.INTERNAL || isInsideModal) && after}\n        </div>\n      </TooltipContainer>\n      {separator && platform === VKCOM && <Separator wide />}\n    </React.Fragment>\n  );\n};\n\nconst warn = warnOnce(\"PanelHeader\");\nconst PanelHeaderComponent = ({\n  // TODO: поправить перед 5.0.0\n  before: propsBefore,\n  left,\n  after: propsAfter,\n  right,\n  // /end TODO\n  children,\n  separator = true,\n  visor = true,\n  transparent = false,\n  shadow,\n  getRef,\n  getRootRef,\n  sizeX,\n  sizeY,\n  fixed,\n  ...restProps\n}: PanelHeaderProps) => {\n  const platform = usePlatform();\n  const { webviewType } = React.useContext(ConfigProviderContext);\n  const { isInsideModal } = React.useContext(ModalRootContext);\n  const needShadow = shadow && sizeX === SizeType.REGULAR;\n  let isFixed = fixed !== undefined ? fixed : platform !== Platform.VKCOM;\n\n  // TODO: удалить перед 5.0.0\n  const before = propsBefore ?? left;\n  const after = propsAfter ?? right;\n\n  if (process.env.NODE_ENV === \"development\") {\n    right &&\n      warn(\n        \"Свойство right устарелo и будет удалено в 5.0.0. Используйте after.\"\n      );\n    left &&\n      warn(\n        \"Свойство left устарелo и будет удалено в 5.0.0. Используйте before.\"\n      );\n  }\n  // /end TODO\n\n  const innerProps = { before, after, separator, children };\n\n  return (\n    <div\n      {...restProps}\n      vkuiClass={classNames(\n        getClassName(\"PanelHeader\", platform),\n        transparent && \"PanelHeader--trnsp\",\n        needShadow && \"PanelHeader--shadow\",\n        visor && \"PanelHeader--vis\",\n        separator && visor && \"PanelHeader--sep\",\n        webviewType === WebviewType.VKAPPS &&\n          !isInsideModal &&\n          \"PanelHeader--vkapps\",\n        !before && \"PanelHeader--no-before\",\n        !after && \"PanelHeader--no-after\",\n        isFixed && \"PanelHeader--fixed\",\n        // TODO v5.0.0 поправить под новую адаптивность\n        `PanelHeader--sizeX-${sizeX}`\n      )}\n      ref={isFixed ? getRootRef : getRef}\n    >\n      {isFixed ? (\n        <FixedLayout\n          vkuiClass=\"PanelHeader__fixed\"\n          vertical=\"top\"\n          getRootRef={getRef}\n        >\n          <PanelHeaderIn {...innerProps} />\n        </FixedLayout>\n      ) : (\n        <PanelHeaderIn {...innerProps} />\n      )}\n      {separator &&\n        visor &&\n        platform !== VKCOM &&\n        (sizeX === SizeType.REGULAR ? <Spacing size={16} /> : <Separator />)}\n    </div>\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/PanelHeader\n */\nexport const PanelHeader = withAdaptivity(PanelHeaderComponent, {\n  sizeX: true,\n  sizeY: true,\n});\n\nPanelHeader.displayName = \"PanelHeader\";\n","import * as React from \"react\";\nimport { HasRootRef } from \"../../types\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { AppRootPortal } from \"../AppRoot/AppRootPortal\";\nimport { blurActiveElement, useDOM } from \"../../lib/dom\";\nimport {\n  AdaptivityContextInterface,\n  AdaptivityProps,\n} from \"../AdaptivityProvider/AdaptivityContext\";\nimport { useAdaptivityIsDesktop } from \"../../hooks/useAdaptivity\";\nimport \"./PopoutRoot.css\";\n\nexport interface PopoutRootProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    AdaptivityProps,\n    HasRootRef<HTMLDivElement> {\n  popout?: React.ReactNode;\n  modal?: React.ReactNode;\n}\n\nexport const PopoutRootComponent = ({\n  popout,\n  modal,\n  viewWidth,\n  viewHeight,\n  hasMouse,\n  children,\n  getRootRef,\n  ...restProps\n}: PopoutRootProps & AdaptivityContextInterface) => {\n  const { document } = useDOM();\n\n  const isDesktop = useAdaptivityIsDesktop();\n\n  React.useEffect(() => {\n    popout && blurActiveElement(document);\n  }, [document, popout]);\n\n  return (\n    <div {...restProps} vkuiClass=\"PopoutRoot\" ref={getRootRef}>\n      {children}\n      <AppRootPortal>\n        {!!popout && (\n          <div\n            vkuiClass={\n              isDesktop ? \"PopoutRoot--absolute\" : \"PopoutRoot__popout\"\n            }\n          >\n            {popout}\n          </div>\n        )}\n        {!!modal && <div vkuiClass=\"PopoutRoot__modal\">{modal}</div>}\n      </AppRootPortal>\n    </div>\n  );\n};\n\nPopoutRootComponent.displayName = \"PopoutRoot\";\n\nexport const PopoutRoot = withAdaptivity(PopoutRootComponent, {\n  viewWidth: true,\n  viewHeight: true,\n  hasMouse: true,\n});\n","import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { IOS } from \"../../lib/platform\";\nimport { HasRef, HasRootRef } from \"../../types\";\nimport { PopoutRoot } from \"../PopoutRoot/PopoutRoot\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport \"./SplitLayout.css\";\n\nexport interface SplitLayoutProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    HasRootRef<HTMLDivElement>,\n    HasRef<HTMLDivElement> {\n  /**\n   * Свойство для отрисовки `Alert`, `ActionSheet` и `ScreenSpinner`.\n   */\n  popout?: React.ReactNode;\n  /**\n   * Свойство для отрисовки `ModalRoot`.\n   */\n  modal?: React.ReactNode;\n  header?: React.ReactNode;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SplitLayout\n */\nexport const SplitLayout = ({\n  popout,\n  modal,\n  header,\n  children,\n  getRootRef,\n  getRef,\n  ...restProps\n}: SplitLayoutProps) => {\n  const platform = usePlatform();\n\n  return (\n    <PopoutRoot\n      vkuiClass={classNames(\n        \"SplitLayout\",\n        platform === IOS && \"SplitLayout--ios\"\n      )}\n      popout={popout}\n      modal={modal}\n      getRootRef={getRootRef}\n    >\n      {header}\n      <div\n        {...restProps}\n        ref={getRef}\n        vkuiClass={classNames(\n          \"SplitLayout__inner\",\n          !!header && \"SplitLayout__inner--header\"\n        )}\n      >\n        {children}\n      </div>\n    </PopoutRoot>\n  );\n};\n","import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { Platform } from \"../../lib/platform\";\nimport \"./Tabbar.css\";\n\nexport interface TabbarProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Флаг для показа/скрытия верхней тени (Android) или границы (iOS)\n   */\n  shadow?: boolean;\n  /**\n   * @deprecated будет удалено в 5.0.0. Используйте `mode`\n   */\n  itemsLayout?: \"vertical\" | \"horizontal\" | \"auto\"; // TODO v5.0.0 удалить, будет использоваться mode\n  /**\n   * Задает расположение элементов (вертикальное/горизонтальное)\n   */\n  mode?: \"vertical\" | \"horizontal\" | \"auto\";\n}\n\nconst getItemsLayout = (\n  itemsLayout: TabbarProps[\"mode\"],\n  children: TabbarProps[\"children\"]\n) => {\n  switch (itemsLayout) {\n    case \"horizontal\":\n    case \"vertical\":\n      return itemsLayout;\n    default:\n      return React.Children.count(children) > 2 ? \"vertical\" : \"horizontal\";\n  }\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Tabbar\n */\nexport const Tabbar = ({\n  children,\n  shadow = true,\n  itemsLayout,\n  mode,\n  ...restProps\n}: TabbarProps) => {\n  const platform = usePlatform();\n\n  return (\n    <div\n      vkuiClass={classNames(\n        \"Tabbar\",\n        platform === Platform.IOS && \"Tabbar--ios\",\n        `Tabbar--l-${getItemsLayout(itemsLayout ?? mode, children)}`,\n        shadow && \"Tabbar--shadow\"\n      )}\n      {...restProps}\n    >\n      <div vkuiClass=\"Tabbar__in\">{children}</div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { HasComponent } from \"../../../types\";\nimport { classNames } from \"../../../lib/classNames\";\nimport { warnOnce } from \"../../../lib/warnOnce\";\nimport \"./Caption.css\";\n\nexport interface CaptionProps\n  extends React.AllHTMLAttributes<HTMLElement>,\n    HasComponent {\n  /**\n   * Задаёт начертание шрифта отличное от стандартного.\n   *\n   * > ⚠️ Начертания `\"bold\"`, `\"semibold\"`, `medium` и `\"regular\"` устарели и будут удалены в 5.0.0. Используйте значения `\"1\"`, `\"2\"` и `\"3\"`.\n   */\n  weight?: \"regular\" | \"medium\" | \"semibold\" | \"bold\" | \"1\" | \"2\" | \"3\";\n  level?: \"1\" | \"2\" | \"3\" | \"4\";\n  caps?: boolean;\n}\n\nconst warn = warnOnce(\"Caption\");\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Caption\n */\nexport const Caption = ({\n  children,\n  weight,\n  level = \"1\",\n  caps,\n  Component = \"span\",\n  ...restProps\n}: CaptionProps) => {\n  if (process.env.NODE_ENV === \"development\") {\n    if (\n      weight &&\n      [\"heavy\", \"bold\", \"semibold\", \"medium\", \"regular\"].includes(weight)\n    )\n      warn(\n        `Начертание weight=\"${weight}\" устарело и будет удалено в 5.0.0. Используйте значения \"1\", \"2\" и \"3\"`\n      );\n  }\n\n  return (\n    <Component\n      {...restProps}\n      vkuiClass={classNames(\n        \"Caption\",\n        `Caption--l-${level}`,\n        caps && \"Caption--caps\",\n        weight && `Caption--w-${weight}`\n      )}\n    >\n      {children}\n    </Component>\n  );\n};\n","import * as React from \"react\";\nimport { HasComponent, HasRootRef } from \"../../../types\";\nimport { usePlatform } from \"../../../hooks/usePlatform\";\nimport { useAdaptivity } from \"../../../hooks/useAdaptivity\";\nimport { classNames } from \"../../../lib/classNames\";\nimport { warnOnce } from \"../../../lib/warnOnce\";\nimport { getClassName } from \"../../../helpers/getClassName\";\nimport \"./Headline.css\";\n\nexport interface HeadlineProps\n  extends React.AllHTMLAttributes<HTMLElement>,\n    HasRootRef<HTMLElement>,\n    HasComponent {\n  /**\n   * Задаёт начертание шрифта отличное от стандартного.\n   *\n   * > ⚠️ Начертания `\"semibold\"`, `medium` и `\"regular\"` устарели и будут удалены в 5.0.0. Используйте значения `\"1\"`, `\"2\"` и `\"3\"`.\n   */\n  weight?: \"regular\" | \"medium\" | \"semibold\" | \"1\" | \"2\" | \"3\";\n  level?: \"1\" | \"2\";\n}\n\nconst warn = warnOnce(\"Headline\");\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Headline\n */\nexport const Headline = ({\n  children,\n  weight = \"3\",\n  level = \"1\",\n  Component = \"h3\", // TODO: v5 h4\n  getRootRef,\n  ...restProps\n}: HeadlineProps) => {\n  const platform = usePlatform();\n  const { sizeY } = useAdaptivity();\n\n  if (\n    process.env.NODE_ENV === \"development\" &&\n    typeof Component !== \"string\" &&\n    getRootRef\n  ) {\n    warn(\"getRootRef может использоваться только с элементами DOM\", \"error\");\n  }\n\n  return (\n    <Component\n      {...restProps}\n      ref={getRootRef}\n      vkuiClass={classNames(\n        getClassName(\"Headline\", platform), // TODO: v5 remove\n        `Headline--sizeY-${sizeY}`, // TODO: новая адаптивность\n        `Headline--l-${level}`,\n        `Headline--w-${weight}`\n      )}\n    >\n      {children}\n    </Component>\n  );\n};\n","import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport { Headline } from \"../Typography/Headline/Headline\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport \"./Counter.css\";\n\nexport interface CounterProps extends React.HTMLAttributes<HTMLSpanElement> {\n  /**\n   * Тип счетчика. При использовании компонента в качестве значения свойства `after` у `Button` эти значения игнорируются\n   */\n  mode?: \"secondary\" | \"primary\" | \"prominent\" | \"contrast\";\n  size?: \"s\" | \"m\";\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Counter\n */\nexport const Counter = ({\n  mode = \"secondary\",\n  size = \"m\",\n  children,\n  ...restProps\n}: CounterProps) => {\n  if (React.Children.count(children) === 0) {\n    return null;\n  }\n\n  const CounterTypography = size === \"s\" ? Caption : Headline;\n\n  return (\n    <span\n      {...restProps}\n      vkuiClass={classNames(\n        \"Counter\",\n        `Counter--${mode}`,\n        `Counter--s-${size}`\n      )}\n    >\n      {hasReactNode(children) && (\n        <CounterTypography Component=\"span\" vkuiClass=\"Counter__in\" level=\"2\">\n          {children}\n        </CounterTypography>\n      )}\n    </span>\n  );\n};\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import * as React from \"react\";\n\n/**\n * Контекст для компонентов, использующих Touch в качестве корневой обёртки,\n * и для которых важно не предотвращать всплытие тач-событий от дочерних компонентов\n */\nconst TouchRootContext: React.Context<boolean> =\n  React.createContext<boolean>(false);\n\n// eslint-disable-next-line import/no-default-export\nexport default TouchRootContext;\n","import * as React from \"react\";\n\nexport const FOCUSABLE_ELEMENTS_LIST = [\n  \"a[href]\",\n  \"area[href]\",\n  'input:not([disabled]):not([hidden]):not([type=\"hidden\"]):not([aria-hidden])',\n  \"select:not([disabled]):not([hidden]):not([aria-hidden])\",\n  \"textarea:not([disabled])\",\n  \"button:not([disabled])\",\n  \"iframe\",\n  \"audio\",\n  \"video\",\n  \"[contenteditable]\",\n  '[tabindex]:not([tabindex=\"-1\"])',\n];\n\nexport enum Keys {\n  ENTER = \"Enter\",\n  SPACE = \"Space\",\n  TAB = \"Tab\",\n  ESCAPE = \"Escape\",\n}\n\ninterface AccessibleKey {\n  code: Keys;\n  key: string[];\n  keyCode: number;\n}\n\nconst ACCESSIBLE_KEYS: AccessibleKey[] = [\n  {\n    code: Keys.ENTER,\n    key: [\"Enter\"],\n    keyCode: 13,\n  },\n  {\n    code: Keys.SPACE,\n    key: [\"Space\", \"Spacebar\", \" \"],\n    keyCode: 32,\n  },\n  {\n    code: Keys.TAB,\n    key: [\"Tab\"],\n    keyCode: 9,\n  },\n  {\n    code: Keys.ESCAPE,\n    key: [\"Escape\"],\n    keyCode: 27,\n  },\n];\n\nexport function pressedKey(\n  e: KeyboardEvent | React.KeyboardEvent<HTMLElement>\n) {\n  return (\n    ACCESSIBLE_KEYS.find(\n      ({ key, keyCode }) => key.includes(e.key) || keyCode === e.keyCode\n    )?.code || null\n  );\n}\n\nexport function shouldTriggerClickOnEnterOrSpace(\n  e: KeyboardEvent | React.KeyboardEvent<HTMLElement>\n) {\n  const el = e.target as HTMLElement;\n  const { tagName } = el;\n\n  const role = el.getAttribute(\"role\");\n\n  const isValidKeyboardEventTarget: boolean =\n    el.isContentEditable !== true &&\n    tagName !== \"INPUT\" &&\n    tagName !== \"TEXTAREA\" &&\n    (role === \"button\" || role === \"link\");\n\n  const isNativeAnchorEl = tagName === \"A\" && el.hasAttribute(\"href\");\n  const keyPressed = pressedKey(e);\n\n  return (\n    isValidKeyboardEventTarget &&\n    // trigger buttons on Space\n    ((keyPressed === Keys.SPACE && role === \"button\") ||\n      // trigger non-native links and buttons on Enter\n      (keyPressed === Keys.ENTER && !isNativeAnchorEl))\n  );\n}\n","import { classNames } from \"../../lib/classNames\";\nimport \"./FocusVisible.css\";\n\nexport type FocusVisibleMode = \"inside\" | \"outside\";\n\nexport interface FocusVisibleProps {\n  mode: FocusVisibleMode;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/FocusVisible\n */\nexport const FocusVisible = ({ mode }: FocusVisibleProps) => (\n  <span\n    aria-hidden=\"true\"\n    vkuiClass={classNames(\"FocusVisible\", `FocusVisible--${mode}`)}\n  />\n);\n","import { useContext, useState, useCallback, FocusEvent } from \"react\";\nimport { AppRootContext } from \"../components/AppRoot/AppRootContext\";\n\nexport function useFocusVisible() {\n  const [isFocused, setIsFocused] = useState(false);\n  const { keyboardInput } = useContext(AppRootContext);\n\n  const onFocus = useCallback(\n    (event: FocusEvent<HTMLElement>) => {\n      event.stopPropagation();\n      setIsFocused(true);\n    },\n    [setIsFocused]\n  );\n\n  const onBlur = useCallback(\n    (event: FocusEvent<HTMLElement>) => {\n      event.stopPropagation();\n      setIsFocused(false);\n    },\n    [setIsFocused]\n  );\n\n  const focusVisible = keyboardInput && isFocused;\n\n  return {\n    focusVisible,\n    onFocus,\n    onBlur,\n  };\n}\n","export const callMultiple =\n  (...fns: any[]) =>\n  (...args: any[]) =>\n    fns.filter((f) => typeof f === \"function\").forEach((f) => f(...args));\n","export type EventType = string | symbol;\n\n// An event handler can take an optional event argument\n// and should not return a value\nexport type Handler<T = unknown> = (event: T) => void;\nexport type WildcardHandler<T = Record<string, unknown>> = (\n\ttype: keyof T,\n\tevent: T[keyof T]\n) => void;\n\n// An array of all currently registered event handlers for a type\nexport type EventHandlerList<T = unknown> = Array<Handler<T>>;\nexport type WildCardEventHandlerList<T = Record<string, unknown>> = Array<WildcardHandler<T>>;\n\n// A map of event types and their corresponding event handlers.\nexport type EventHandlerMap<Events extends Record<EventType, unknown>> = Map<\n\tkeyof Events | '*',\n\tEventHandlerList<Events[keyof Events]> | WildCardEventHandlerList<Events>\n>;\n\nexport interface Emitter<Events extends Record<EventType, unknown>> {\n\tall: EventHandlerMap<Events>;\n\n\ton<Key extends keyof Events>(type: Key, handler: Handler<Events[Key]>): void;\n\ton(type: '*', handler: WildcardHandler<Events>): void;\n\n\toff<Key extends keyof Events>(type: Key, handler?: Handler<Events[Key]>): void;\n\toff(type: '*', handler: WildcardHandler<Events>): void;\n\n\temit<Key extends keyof Events>(type: Key, event: Events[Key]): void;\n\temit<Key extends keyof Events>(type: undefined extends Events[Key] ? Key : never): void;\n}\n\n/**\n * Mitt: Tiny (~200b) functional event emitter / pubsub.\n * @name mitt\n * @returns {Mitt}\n */\nexport default function mitt<Events extends Record<EventType, unknown>>(\n\tall?: EventHandlerMap<Events>\n): Emitter<Events> {\n\ttype GenericEventHandler =\n\t\t| Handler<Events[keyof Events]>\n\t\t| WildcardHandler<Events>;\n\tall = all || new Map();\n\n\treturn {\n\n\t\t/**\n\t\t * A Map of event names to registered handler functions.\n\t\t */\n\t\tall,\n\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t * @param {string|symbol} type Type of event to listen for, or `'*'` for all events\n\t\t * @param {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton<Key extends keyof Events>(type: Key, handler: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\thandlers.push(handler);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tall!.set(type, [handler] as EventHandlerList<Events[keyof Events]>);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t * If `handler` is omitted, all handlers of the given type are removed.\n\t\t * @param {string|symbol} type Type of event to unregister `handler` from, or `'*'`\n\t\t * @param {Function} [handler] Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff<Key extends keyof Events>(type: Key, handler?: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\tif (handler) {\n\t\t\t\t\thandlers.splice(handlers.indexOf(handler) >>> 0, 1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tall!.set(type, []);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `'*'` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * Note: Manually firing '*' handlers is not supported.\n\t\t *\n\t\t * @param {string|symbol} type The event type to invoke\n\t\t * @param {Any} [evt] Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberOf mitt\n\t\t */\n\t\temit<Key extends keyof Events>(type: Key, evt?: Events[Key]) {\n\t\t\tlet handlers = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as EventHandlerList<Events[keyof Events]>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(evt!);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\thandlers = all!.get('*');\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as WildCardEventHandlerList<Events>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(type, evt!);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n","import * as React from \"react\";\nimport mitt from \"mitt\";\nimport { noop } from \"../../lib/utils\";\nimport { Touch, TouchEvent, TouchProps } from \"../Touch/Touch\";\nimport TouchRootContext from \"../Touch/TouchContext\";\nimport { classNames } from \"../../lib/classNames\";\nimport { IOS, ANDROID } from \"../../lib/platform\";\nimport { getOffsetRect } from \"../../lib/offset\";\nimport { coordX, coordY } from \"../../lib/touch\";\nimport { HasComponent, HasRootRef } from \"../../types\";\nimport { withAdaptivity, AdaptivityProps } from \"../../hoc/withAdaptivity\";\nimport { shouldTriggerClickOnEnterOrSpace } from \"../../lib/accessibility\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { FocusVisible, FocusVisibleMode } from \"../FocusVisible/FocusVisible\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useFocusVisible } from \"../../hooks/useFocusVisible\";\nimport { callMultiple } from \"../../lib/callMultiple\";\nimport { useBooleanState } from \"../../hooks/useBooleanState\";\nimport \"./Tappable.css\";\n\nconst WAVE_LIVE = 225;\n\nexport interface TappableProps\n  extends Omit<\n      React.AllHTMLAttributes<HTMLElement>,\n      | \"onTouchStart\"\n      | \"onTouchMove\"\n      | \"onTouchEnd\"\n      | \"onTouchCancel\"\n      | \"onMouseDown\"\n      | \"onMouseMove\"\n      | \"onMouseUp\"\n      | \"onMouseLeave\"\n    >,\n    HasRootRef<HTMLElement>,\n    AdaptivityProps,\n    HasComponent,\n    Pick<TouchProps, \"onStart\" | \"onEnd\" | \"onMove\"> {\n  /**\n   * Длительность показа active-состояния\n   */\n  activeEffectDelay?: number;\n  stopPropagation?: boolean;\n  /**\n   * Указывает, должен ли компонент реагировать на hover-состояние\n   */\n  hasHover?: boolean;\n  /**\n   * Указывает, должен ли компонент реагировать на active-состояние\n   */\n  hasActive?: boolean;\n  /**\n   * Стиль подсветки active-состояния. Если передать произвольную строку, она добавится как css-класс во время active\n   */\n  activeMode?: \"opacity\" | \"background\" | string;\n  /**\n   * Стиль подсветки hover-состояния. Если передать произвольную строку, она добавится как css-класс во время hover\n   */\n  hoverMode?: \"opacity\" | \"background\" | string;\n  /**\n   * Стиль аутлайна focus visible. Если передать произвольную строку, она добавится как css-класс во время focus-visible\n   */\n  focusVisibleMode?: FocusVisibleMode | string;\n  children?: React.ReactNode;\n  onEnter?(outputEvent: MouseEvent): void;\n  onLeave?(outputEvent: MouseEvent): void;\n}\n\ninterface Wave {\n  x: number;\n  y: number;\n  id: number;\n}\n\nexport interface RootComponentProps extends TouchProps {\n  ref?: React.Ref<HTMLElement>;\n}\n\nexport const ACTIVE_DELAY = 70;\nexport const ACTIVE_EFFECT_DELAY = 600;\n\nconst activeBus = mitt<{ active: string }>();\nconst TapState = { none: 0, pending: 1, active: 2, exiting: 3 } as const;\n\ntype TappableContextInterface = { onHoverChange: (s: boolean) => void };\nconst TappableContext = React.createContext<TappableContextInterface>({\n  onHoverChange: noop,\n});\n\nfunction useActivity(hasActive: boolean, stopDelay: number) {\n  const id = React.useMemo(\n    () => Math.round(Math.random() * 1e8).toString(16),\n    []\n  );\n\n  const [activity, setActivity] = React.useState<\n    typeof TapState[keyof typeof TapState]\n  >(TapState.none);\n  const _stop = () => setActivity(TapState.none);\n  const start = () => hasActive && setActivity(TapState.active);\n  const delayStart = () => {\n    hasActive && setActivity(TapState.pending);\n  };\n\n  const activeTimeout = useTimeout(start, ACTIVE_DELAY);\n  const stopTimeout = useTimeout(_stop, stopDelay);\n\n  useIsomorphicLayoutEffect(() => {\n    if (activity === TapState.pending) {\n      activeTimeout.set();\n      return activeTimeout.clear;\n    }\n    if (activity === TapState.exiting) {\n      return stopTimeout.clear;\n    }\n    if (activity === TapState.active) {\n      activeBus.emit(\"active\", id);\n    }\n    return noop;\n  }, [activity]);\n\n  useIsomorphicLayoutEffect(() => {\n    if (activity === TapState.none) {\n      return noop;\n    }\n    const onActiveChange = (activeId: string) => {\n      activeId !== id && _stop();\n    };\n    activeBus.on(\"active\", onActiveChange);\n    return () => activeBus.off(\"active\", onActiveChange);\n  }, [activity === TapState.none]);\n\n  useIsomorphicLayoutEffect(() => {\n    !hasActive && _stop();\n  }, [hasActive]);\n\n  const stop = (delay?: number) => {\n    if (delay) {\n      setActivity(TapState.exiting);\n      return stopTimeout.set(delay);\n    }\n    _stop();\n  };\n\n  return [activity, { delayStart, start, stop }] as const;\n}\n\nconst TappableComponent = ({\n  children,\n  Component,\n  onClick,\n  onKeyDown: _onKeyDown,\n  activeEffectDelay = ACTIVE_EFFECT_DELAY,\n  stopPropagation = false,\n  getRootRef,\n  sizeX,\n  hasMouse,\n  deviceHasHover,\n  hasHover: _hasHover = true,\n  hoverMode = \"background\",\n  hasActive: _hasActive = true,\n  activeMode = \"background\",\n  focusVisibleMode = \"inside\",\n  onEnter,\n  onLeave,\n  ...props\n}: TappableProps) => {\n  Component = Component || ((props.href ? \"a\" : \"div\") as React.ElementType);\n\n  const { onHoverChange } = React.useContext(TappableContext);\n  const insideTouchRoot = React.useContext(TouchRootContext);\n  const platform = usePlatform();\n  const { focusVisible, onBlur, onFocus } = useFocusVisible();\n\n  const [clicks, setClicks] = React.useState<Wave[]>([]);\n  const [childHover, setChildHover] = React.useState(false);\n  const {\n    value: _hovered,\n    setTrue: setHoveredTrue,\n    setFalse: setHoveredFalse,\n  } = useBooleanState(false);\n\n  const hovered = _hovered && !props.disabled;\n  const hasActive = _hasActive && !childHover && !props.disabled;\n  const hasHover = deviceHasHover && _hasHover && !childHover;\n  const isCustomElement =\n    Component !== \"a\" &&\n    Component !== \"button\" &&\n    Component !== \"label\" &&\n    !props.contentEditable;\n  const isPresetHoverMode = [\"opacity\", \"background\"].includes(hoverMode);\n  const isPresetActiveMode = [\"opacity\", \"background\"].includes(activeMode);\n  const isPresetFocusVisibleMode = [\"inside\", \"outside\"].includes(\n    focusVisibleMode\n  );\n\n  const [activity, { start, stop, delayStart }] = useActivity(\n    hasActive,\n    activeEffectDelay\n  );\n  const active = activity === TapState.active || activity === TapState.exiting;\n\n  const containerRef = useExternRef(getRootRef);\n\n  // hover propagation\n  const childContext = React.useRef({ onHoverChange: setChildHover }).current;\n  useIsomorphicLayoutEffect(() => {\n    if (!hovered) {\n      return noop;\n    }\n    onHoverChange(true);\n    return () => onHoverChange(false);\n  }, [hovered]);\n\n  /*\n   * [a11y]\n   * Обрабатывает событие onkeydown\n   * для кастомных доступных элементов:\n   * - role=\"link\" (активация по Enter)\n   * - role=\"button\" (активация по Space и Enter)\n   */\n  function onKeyDown(e: React.KeyboardEvent<HTMLElement>) {\n    if (isCustomElement && shouldTriggerClickOnEnterOrSpace(e)) {\n      e.preventDefault();\n      containerRef.current?.click();\n    }\n  }\n\n  const needWaves =\n    platform === ANDROID &&\n    !hasMouse &&\n    hasActive &&\n    activeMode === \"background\";\n\n  const clearClicks = useTimeout(() => setClicks([]), WAVE_LIVE);\n\n  function addClick(x: number, y: number) {\n    const dateNow = Date.now();\n    const filteredClicks = clicks.filter(\n      (click) => click.id + WAVE_LIVE > dateNow\n    );\n\n    setClicks([...filteredClicks, { x, y, id: dateNow }]);\n    clearClicks.set();\n  }\n\n  function onStart({ originalEvent }: TouchEvent) {\n    if (hasActive) {\n      if (originalEvent.touches && originalEvent.touches.length > 1) {\n        // r сожалению я так и не понял, что это делает и можно ли упихнуть его в Touch\n        return stop();\n      }\n\n      if (needWaves) {\n        const { top, left } = getOffsetRect(containerRef.current);\n        const x = coordX(originalEvent) - (left ?? 0);\n        const y = coordY(originalEvent) - (top ?? 0);\n        addClick(x, y);\n      }\n\n      delayStart();\n    }\n  }\n\n  function onMove({ isSlide }: TouchEvent) {\n    if (isSlide) {\n      stop();\n    }\n  }\n\n  function onEnd({ duration }: TouchEvent) {\n    if (activity === TapState.none) {\n      return;\n    }\n    if (activity === TapState.pending) {\n      // активировать при коротком тапе\n      start();\n    }\n\n    // отключить без задержки при длинном тапе\n    const activeDuration = duration - ACTIVE_DELAY;\n    stop(activeDuration >= 100 ? 0 : activeEffectDelay - activeDuration);\n  }\n\n  const classes = classNames(\n    \"Tappable\",\n    platform === IOS && \"Tappable--ios\",\n    `Tappable--sizeX-${sizeX}`,\n    hasHover && `Tappable--hasHover`,\n    hasActive && `Tappable--hasActive`,\n    hasHover && hovered && !isPresetHoverMode && hoverMode,\n    hasActive && active && !isPresetActiveMode && activeMode,\n    focusVisible && !isPresetFocusVisibleMode && focusVisibleMode,\n    hasActive && active && \"Tappable--active\",\n    hasMouse && \"Tappable--mouse\",\n    hasHover && hovered && isPresetHoverMode && `Tappable--hover-${hoverMode}`,\n    hasActive &&\n      active &&\n      isPresetActiveMode &&\n      `Tappable--active-${activeMode}`,\n    focusVisible && \"Tappable--focus-visible\"\n  );\n\n  const handlers: RootComponentProps = {\n    onStart: callMultiple(onStart, props.onStart),\n    onMove: callMultiple(onMove, props.onMove),\n    onEnd: callMultiple(onEnd, props.onEnd),\n    onClick,\n    onKeyDown: callMultiple(onKeyDown, _onKeyDown),\n  };\n  const role = props.href ? \"link\" : \"button\";\n\n  return (\n    <Touch\n      onEnter={callMultiple(setHoveredTrue, onEnter)}\n      onLeave={callMultiple(setHoveredFalse, onLeave)}\n      type={Component === \"button\" ? \"button\" : undefined}\n      tabIndex={isCustomElement && !props.disabled ? 0 : undefined}\n      role={isCustomElement ? role : undefined}\n      aria-disabled={isCustomElement ? props.disabled : undefined}\n      stopPropagation={stopPropagation && !insideTouchRoot && !props.disabled}\n      {...props}\n      slideThreshold={20}\n      usePointerHover\n      vkuiClass={classes}\n      Component={Component}\n      getRootRef={containerRef}\n      onBlur={callMultiple(onBlur, props.onBlur)}\n      onFocus={callMultiple(onFocus, props.onFocus)}\n      {...(props.disabled ? {} : handlers)}\n    >\n      <TappableContext.Provider value={childContext}>\n        {children}\n      </TappableContext.Provider>\n      {needWaves && (\n        <span aria-hidden=\"true\" vkuiClass=\"Tappable__waves\">\n          {clicks.map((wave) => (\n            <span\n              key={wave.id}\n              vkuiClass=\"Tappable__wave\"\n              style={{ top: wave.y, left: wave.x }}\n            />\n          ))}\n        </span>\n      )}\n      {hasHover && hoverMode === \"background\" && (\n        <span aria-hidden=\"true\" vkuiClass=\"Tappable__hoverShadow\" />\n      )}\n      {!props.disabled && isPresetFocusVisibleMode && (\n        <FocusVisible mode={focusVisibleMode as FocusVisibleMode} />\n      )}\n    </Touch>\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Tappable\n */\nexport const Tappable = withAdaptivity(TappableComponent, {\n  sizeX: true,\n  hasMouse: true,\n  deviceHasHover: true,\n});\n\nTappable.displayName = \"Tappable\";\n","import * as React from \"react\";\n\nexport const useBooleanState = (defaultValue = false) => {\n  const [value, setValue] = React.useState(defaultValue);\n\n  const setTrue = React.useCallback(() => {\n    setValue(true);\n  }, []);\n\n  const setFalse = React.useCallback(() => {\n    setValue(false);\n  }, []);\n\n  const toggle = React.useCallback(() => {\n    setValue(!value);\n  }, [value]);\n\n  return { value, setTrue, setFalse, toggle };\n};\n","export interface OffsetRectInterface {\n  top: number | undefined;\n  left: number | undefined;\n  width: number | undefined;\n  height: number | undefined;\n}\n\nexport function getOffsetRect(elem: HTMLElement | null): OffsetRectInterface {\n  const box = elem?.getBoundingClientRect();\n\n  return {\n    top: box?.top,\n    left: box?.left,\n    width: elem?.offsetWidth,\n    height: elem?.offsetHeight,\n  };\n}\n","import * as React from \"react\";\nimport { HasComponent } from \"../../../types\";\nimport { classNames } from \"../../../lib/classNames\";\nimport \"./Footnote.css\";\n\nexport interface FootnoteProps\n  extends React.AllHTMLAttributes<HTMLElement>,\n    HasComponent {\n  /**\n   * Задаёт начертание шрифта отличное от стандартного.\n   */\n  weight?: \"1\" | \"2\" | \"3\";\n  caps?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Footnote\n */\nexport const Footnote = ({\n  children,\n  weight,\n  caps,\n  Component = \"span\",\n  ...restProps\n}: FootnoteProps) => {\n  return (\n    <Component\n      {...restProps}\n      vkuiClass={classNames(\n        \"Footnote\",\n        caps && \"Footnote--caps\",\n        weight && `Footnote--w-${weight}`\n      )}\n    >\n      {children}\n    </Component>\n  );\n};\n","import * as React from \"react\";\nimport { Counter } from \"../Counter/Counter\";\nimport { classNames } from \"../../lib/classNames\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport { Tappable } from \"../Tappable/Tappable\";\nimport { Footnote } from \"../Typography/Footnote/Footnote\";\nimport { Platform } from \"../../lib/platform\";\nimport { HasComponent, HasRootRef } from \"../../types\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport \"./TabbarItem.css\";\n\nexport interface TabbarItemProps\n  extends Omit<React.AllHTMLAttributes<HTMLElement>, \"label\">, // TODO убрать Omit после удаления свойства label\n    HasRootRef<HTMLElement>,\n    HasComponent {\n  selected?: boolean;\n  /**\n   * Текст рядом с иконкой\n   */\n  text?: React.ReactNode;\n  /**\n   * Индикатор над иконкой. Принимает `<Badge mode=\"prominent\" />` или `<Counter size=\"s\" mode=\"prominent\" />`\n   */\n  indicator?: React.ReactNode;\n  /**\n   * @deprecated будет удалено в 5.0.0. Используйте `indicator`\n   */\n  label?: React.ReactNode;\n}\n\nconst warn = warnOnce(\"TabbarItem\");\n\n/**\n * @see https://vkcom.github.io/VKUI/#/TabbarItem\n */\nexport const TabbarItem = ({\n  children,\n  selected,\n  label,\n  indicator,\n  text,\n  href,\n  Component = href ? \"a\" : \"button\",\n  disabled,\n  ...restProps\n}: TabbarItemProps) => {\n  const platform = usePlatform();\n\n  if (label && process.env.NODE_ENV === \"development\") {\n    warn(\n      \"Свойство label устарело и будет удалено в 5.0.0. Используйте indicator.\"\n    );\n  }\n\n  return (\n    <Component\n      {...restProps}\n      disabled={disabled}\n      href={href}\n      vkuiClass={classNames(\n        \"TabbarItem\",\n        platform === Platform.IOS && \"TabbarItem--ios\",\n        platform === Platform.ANDROID && \"TabbarItem--android\",\n        selected && \"TabbarItem--selected\",\n        !!text && \"TabbarItem--text\"\n      )}\n    >\n      <Tappable\n        role=\"presentation\"\n        Component=\"div\"\n        disabled={disabled}\n        activeMode={\n          platform === Platform.IOS\n            ? \"TabbarItem__tappable--active\"\n            : \"background\"\n        }\n        activeEffectDelay={platform === Platform.IOS ? 0 : 300}\n        hasHover={false}\n        vkuiClass=\"TabbarItem__tappable\"\n      />\n      <div vkuiClass=\"TabbarItem__in\">\n        <div vkuiClass=\"TabbarItem__icon\">\n          {children}\n          <div vkuiClass=\"TabbarItem__label\">\n            {hasReactNode(indicator) && indicator}\n            {!indicator && label && (\n              <Counter size=\"s\" mode=\"prominent\">\n                {label}\n              </Counter>\n            )}\n          </div>\n        </div>\n        {text && (\n          <Footnote Component=\"div\" vkuiClass=\"TabbarItem__text\" weight=\"2\">\n            {text}\n          </Footnote>\n        )}\n      </div>\n    </Component>\n  );\n};\n","function _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nimport React from \"react\";\nexport var IconSettingsContext = /*#__PURE__*/ React.createContext({});\nvar IconSettingsProvider = function(_param) {\n    var children = _param.children, settings = _objectWithoutProperties(_param, [\n        \"children\"\n    ]);\n    var contextValue = React.useMemo(function() {\n        return settings;\n    }, [\n        settings.classPrefix,\n        settings.globalClasses\n    ]);\n    return /*#__PURE__*/ React.createElement(IconSettingsContext.Provider, {\n        value: contextValue\n    }, children);\n};\nexport { IconSettingsProvider };\n","// @ts-ignore\nimport BrowserSprite from \"svg-baker-runtime/browser-sprite\";\nimport { useLayoutEffect, useEffect } from \"react\";\nvar canUseDOM = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\nvar browserSprite;\nif (canUseDOM) {\n    var spriteId = \"__SVG_SPRITE_NODE__\";\n    browserSprite = new BrowserSprite({\n        attrs: {\n            id: spriteId\n        }\n    });\n    var mount = function() {\n        var spriteNode = document.getElementById(spriteId);\n        if (spriteNode) {\n            browserSprite.attach(spriteNode);\n        } else {\n            browserSprite.mount();\n        }\n        document.removeEventListener(\"DOMContentLoaded\", mount);\n    };\n    if (document.querySelector(\"body\")) {\n        mount();\n    } else {\n        document.addEventListener(\"DOMContentLoaded\", mount);\n    }\n} else {\n    browserSprite = null;\n}\nexport function addSpriteSymbol(symbol) {\n    if (browserSprite) {\n        browserSprite.add(symbol);\n    }\n}\nexport var useIsomorphicLayoutEffect = canUseDOM ? useLayoutEffect : useEffect;\n","function _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _extends() {\n    _extends = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction _objectSpread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _defineProperty(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        if (enumerableOnly) {\n            symbols = symbols.filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n            });\n        }\n        keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpreadProps(target, source) {\n    source = source != null ? source : {};\n    if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n        ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n    if (source == null) return {};\n    var target = _objectWithoutPropertiesLoose(source, excluded);\n    var key, i;\n    if (Object.getOwnPropertySymbols) {\n        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n        for(i = 0; i < sourceSymbolKeys.length; i++){\n            key = sourceSymbolKeys[i];\n            if (excluded.indexOf(key) >= 0) continue;\n            if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n            target[key] = source[key];\n        }\n    }\n    return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for(i = 0; i < sourceKeys.length; i++){\n        key = sourceKeys[i];\n        if (excluded.indexOf(key) >= 0) continue;\n        target[key] = source[key];\n    }\n    return target;\n}\nimport React from \"react\";\n// @ts-ignore\nimport BrowserSymbol from \"svg-baker-runtime/browser-symbol\";\nimport { IconSettingsContext } from \"./IconSettings\";\nimport { addSpriteSymbol, useIsomorphicLayoutEffect } from \"./sprite\";\nvar svgStyle = {\n    display: \"block\"\n};\nfunction iconClass(fragments, param) {\n    var classPrefix = param.classPrefix, globalClasses = param.globalClasses;\n    var res = \"\";\n    for(var i = 0; i < fragments.length; i++){\n        if (classPrefix) {\n            res += \" \" + (classPrefix + fragments[i]);\n        }\n        if (!classPrefix || globalClasses) {\n            res += \" \" + fragments[i];\n        }\n    }\n    return res;\n}\nvar SvgIcon = function(_param) {\n    var width = _param.width, height = _param.height, viewBox = _param.viewBox, id = _param.id, _className = _param.className, className = _className === void 0 ? \"\" : _className, _style = _param.style, style = _style === void 0 ? {} : _style, fill = _param.fill, getRootRef = _param.getRootRef, _Component = _param.Component, Component = _Component === void 0 ? \"div\" : _Component, role = _param.role, ariaLabel = _param[\"aria-label\"], ariaHidden = _param[\"aria-hidden\"], restProps = _objectWithoutProperties(_param, [\n        \"width\",\n        \"height\",\n        \"viewBox\",\n        \"id\",\n        \"className\",\n        \"style\",\n        \"fill\",\n        \"getRootRef\",\n        \"Component\",\n        \"role\",\n        \"aria-label\",\n        \"aria-hidden\"\n    ]);\n    var size = Math.max(width, height);\n    var iconSettings = React.useContext(IconSettingsContext);\n    var ownClass = iconClass([\n        \"Icon\",\n        \"Icon--\".concat(size),\n        \"Icon--w-\".concat(width),\n        \"Icon--h-\".concat(height),\n        \"Icon--\".concat(id)\n    ], iconSettings);\n    return /*#__PURE__*/ React.createElement(Component, _extends({\n        role: \"presentation\"\n    }, restProps, {\n        ref: getRootRef,\n        className: \"\".concat(ownClass, \" \").concat(className),\n        style: _objectSpreadProps(_objectSpread({}, style), {\n            width: width,\n            height: height\n        })\n    }), /*#__PURE__*/ React.createElement(\"svg\", {\n        viewBox: viewBox,\n        width: width,\n        height: height,\n        style: svgStyle,\n        role: role,\n        \"aria-label\": ariaLabel,\n        \"aria-hidden\": ariaHidden\n    }, /*#__PURE__*/ React.createElement(\"use\", {\n        xlinkHref: \"#\".concat(id),\n        style: {\n            fill: \"currentColor\",\n            color: fill\n        }\n    })));\n};\nexport function makeIcon(componentName, id, viewBox, content, width, height) {\n    var isMounted = false;\n    function mountIcon() {\n        if (!isMounted) {\n            addSpriteSymbol(new BrowserSymbol({\n                id: id,\n                viewBox: viewBox,\n                content: content\n            }));\n            isMounted = true;\n        }\n    }\n    var Icon = function(props) {\n        useIsomorphicLayoutEffect(mountIcon, []);\n        return /*#__PURE__*/ React.createElement(SvgIcon, _extends({}, props, {\n            viewBox: viewBox,\n            id: id,\n            width: !isNaN(props.width) ? +props.width : width,\n            height: !isNaN(props.height) ? +props.height : height\n        }));\n    };\n    Icon.mountIcon = mountIcon;\n    Icon.displayName = componentName;\n    return Icon;\n}\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon16ChevronLeft\", \"chevron_left_16\", \"0 0 12 16\", '<symbol fill=\"none\" viewBox=\"0 0 12 16\" xmlns=\"http://www.w3.org/2000/svg\" id=\"chevron_left_16\"><path d=\"m4.773 8 3.363 3.364a.9.9 0 1 1-1.272 1.272l-4-4a.9.9 0 0 1 0-1.272l4-4a.9.9 0 1 1 1.272 1.272z\" fill=\"currentColor\" /></symbol>', 12, 16);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon16Chevron\", \"chevron_16\", \"0 0 12 16\", '<symbol xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 12 16\" id=\"chevron_16\"><path fill=\"currentColor\" d=\"M7.227 8 3.864 4.636a.9.9 0 0 1 1.272-1.272l4 4a.9.9 0 0 1 0 1.272l-4 4a.9.9 0 0 1-1.272-1.272L7.227 8Z\" /></symbol>', 12, 16);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon24ChevronCompactLeft\", \"chevron_compact_left_24\", \"0 0 16 24\", '<symbol fill=\"none\" viewBox=\"0 0 16 24\" xmlns=\"http://www.w3.org/2000/svg\" id=\"chevron_compact_left_24\"><path d=\"M11.293 7.706a1 1 0 0 0 0-1.412l-.088-.088a.997.997 0 0 0-1.414.002l-5.084 5.084a.998.998 0 0 0 0 1.416l5.084 5.084c.39.391 1.026.39 1.414.002l.088-.088a.995.995 0 0 0 0-1.412L7 12z\" fill=\"currentColor\" /></symbol>', 16, 24);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon24Chevron\", \"chevron_24\", \"0 0 16 24\", '<symbol viewBox=\"0 0 16 24\" xmlns=\"http://www.w3.org/2000/svg\" id=\"chevron_24\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h16v24H0z\" /><path d=\"M4.706 7.706a1 1 0 0 1 0-1.412l.088-.088a.997.997 0 0 1 1.414.002l5.084 5.084a.998.998 0 0 1 0 1.416l-5.084 5.084a1.002 1.002 0 0 1-1.414.002l-.088-.088a.995.995 0 0 1 0-1.412L9 12 4.706 7.706Z\" fill=\"currentColor\" /></g></symbol>', 16, 24);\n","import * as React from \"react\";\nimport {\n  Icon24Chevron,\n  Icon24ChevronCompactLeft,\n  Icon16Chevron,\n  Icon16ChevronLeft,\n} from \"@vkontakte/icons\";\nimport { classNames } from \"../../lib/classNames\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { IOS } from \"../../lib/platform\";\nimport { Tappable } from \"../Tappable/Tappable\";\nimport \"./HorizontalScrollArrow.css\";\n\nexport interface HorizontalScrollArrowProps {\n  direction: \"left\" | \"right\";\n  size?: \"m\" | \"l\";\n  onClick(): void;\n}\n\nexport const HorizontalScrollArrow = ({\n  size = \"l\",\n  direction,\n  onClick,\n  ...restProps\n}: HorizontalScrollArrowProps) => {\n  const platform = usePlatform();\n  let ArrowIcon: React.ComponentType<unknown>;\n\n  if (size === \"m\") {\n    ArrowIcon = direction === \"left\" ? Icon16ChevronLeft : Icon16Chevron;\n  } else {\n    ArrowIcon = direction === \"left\" ? Icon24ChevronCompactLeft : Icon24Chevron;\n  }\n\n  return (\n    <Tappable\n      {...restProps}\n      Component=\"button\"\n      hasHover={false}\n      hasActive={false}\n      vkuiClass={classNames(\n        \"HorizontalScrollArrow\",\n        `HorizontalScrollArrow--${size}`,\n        `HorizontalScrollArrow--${direction}`,\n        platform === IOS && \"HorizontalScrollArrow--ios\"\n      )}\n      onClick={onClick}\n    >\n      <span vkuiClass=\"HorizontalScrollArrow__icon\">\n        <ArrowIcon />\n      </span>\n    </Tappable>\n  );\n};\n","import * as React from \"react\";\nimport { withAdaptivity, AdaptivityProps } from \"../../hoc/withAdaptivity\";\nimport { HorizontalScrollArrow } from \"./HorizontalScrollArrow\";\nimport { easeInOutSine } from \"../../lib/fx\";\nimport { useEventListener } from \"../../hooks/useEventListener\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { HasRef } from \"../../types\";\nimport { classNames } from \"../../lib/classNames\";\nimport \"./HorizontalScroll.css\";\n\ninterface ScrollContext {\n  scrollElement: HTMLElement | null;\n  scrollAnimationDuration: number;\n  animationQueue: VoidFunction[];\n  getScrollPosition: (currentPosition: number) => number;\n  onScrollToRightBorder: VoidFunction;\n  onScrollEnd: VoidFunction;\n  onScrollStart: VoidFunction;\n  /**\n   * Начальная ширина прокрутки.\n   * В некоторых случаях может отличаться от текущей ширины прокрутки из-за transforms: translate\n   */\n  initialScrollWidth: number;\n}\n\nexport type ScrollPositionHandler = (currentPosition: number) => number;\n\nexport interface HorizontalScrollProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    AdaptivityProps,\n    HasRef<HTMLDivElement> {\n  /**\n   * Функция для расчета величины прокрутки при клике на левую стрелку.\n   */\n  getScrollToLeft?: ScrollPositionHandler;\n  /**\n   * Функция для расчета величины прокрутки при клике на правую стрелку.\n   */\n  getScrollToRight?: ScrollPositionHandler;\n  arrowSize?: \"m\" | \"l\";\n  showArrows?: boolean | \"always\";\n  scrollAnimationDuration?: number;\n}\n\n/**\n * timing method\n */\nfunction now() {\n  return performance && performance.now ? performance.now() : Date.now();\n}\n\n/**\n * Округляем el.scrollLeft\n * https://github.com/VKCOM/VKUI/pull/2445\n */\nconst roundUpElementScrollLeft = (el: HTMLElement) => Math.ceil(el.scrollLeft);\n\n/**\n * Код анимации скрола, на основе полифила: https://github.com/iamdustan/smoothscroll\n * Константа взята из полифила (468), на дизайн-ревью уточнили до 250\n * @var {number} SCROLL_ONE_FRAME_TIME время анимации скролла\n */\nconst SCROLL_ONE_FRAME_TIME = 250;\n\nfunction doScroll({\n  scrollElement,\n  getScrollPosition,\n  animationQueue,\n  onScrollToRightBorder,\n  onScrollEnd,\n  onScrollStart,\n  initialScrollWidth,\n  scrollAnimationDuration = SCROLL_ONE_FRAME_TIME,\n}: ScrollContext) {\n  if (!scrollElement || !getScrollPosition) {\n    return;\n  }\n\n  /**\n   * максимальное значение сдвига влево\n   */\n  const maxLeft = initialScrollWidth - scrollElement.offsetWidth;\n\n  let startLeft = roundUpElementScrollLeft(scrollElement);\n  let endLeft = getScrollPosition(startLeft);\n\n  onScrollStart();\n\n  if (endLeft >= maxLeft) {\n    onScrollToRightBorder();\n    endLeft = maxLeft;\n  }\n\n  const startTime = now();\n\n  (function scroll() {\n    if (!scrollElement) {\n      onScrollEnd();\n      return;\n    }\n\n    const time = now();\n    const elapsed = Math.min((time - startTime) / scrollAnimationDuration, 1);\n\n    const value = easeInOutSine(elapsed);\n\n    const currentLeft = startLeft + (endLeft - startLeft) * value;\n    scrollElement.scrollLeft = Math.ceil(currentLeft);\n\n    if (\n      roundUpElementScrollLeft(scrollElement) !== Math.max(0, endLeft) &&\n      elapsed !== 1\n    ) {\n      requestAnimationFrame(scroll);\n      return;\n    }\n\n    onScrollEnd();\n    animationQueue.shift();\n    if (animationQueue.length > 0) {\n      animationQueue[0]();\n    }\n  })();\n}\n\nconst HorizontalScrollComponent = ({\n  children,\n  getScrollToLeft,\n  getScrollToRight,\n  showArrows = true,\n  arrowSize = \"l\",\n  scrollAnimationDuration = SCROLL_ONE_FRAME_TIME,\n  hasMouse,\n  getRef,\n  ...restProps\n}: HorizontalScrollProps) => {\n  const [canScrollLeft, setCanScrollLeft] = React.useState(false);\n  const [canScrollRight, setCanScrollRight] = React.useState(false);\n\n  const isCustomScrollingRef = React.useRef(false);\n\n  const scrollerRef = useExternRef(getRef);\n\n  const animationQueue = React.useRef<VoidFunction[]>([]);\n\n  const scrollTo = React.useCallback(\n    (getScrollPosition: ScrollPositionHandler) => {\n      const scrollElement = scrollerRef.current;\n\n      animationQueue.current.push(() =>\n        doScroll({\n          scrollElement,\n          getScrollPosition,\n          animationQueue: animationQueue.current,\n          onScrollToRightBorder: () => setCanScrollRight(false),\n          onScrollEnd: () => (isCustomScrollingRef.current = false),\n          onScrollStart: () => (isCustomScrollingRef.current = true),\n          initialScrollWidth:\n            scrollElement?.firstElementChild?.scrollWidth || 0,\n          scrollAnimationDuration,\n        })\n      );\n      if (animationQueue.current.length === 1) {\n        animationQueue.current[0]();\n      }\n    },\n    [scrollAnimationDuration, scrollerRef]\n  );\n\n  const scrollToLeft = React.useCallback(() => {\n    const getScrollPosition =\n      getScrollToLeft ?? ((i: number) => i - scrollerRef.current!.offsetWidth);\n    scrollTo(getScrollPosition);\n  }, [getScrollToLeft, scrollTo, scrollerRef]);\n\n  const scrollToRight = React.useCallback(() => {\n    const getScrollPosition =\n      getScrollToRight ?? ((i: number) => i + scrollerRef.current!.offsetWidth);\n    scrollTo(getScrollPosition);\n  }, [getScrollToRight, scrollTo, scrollerRef]);\n\n  const onscroll = React.useCallback(() => {\n    if (\n      showArrows &&\n      hasMouse &&\n      scrollerRef.current &&\n      !isCustomScrollingRef.current\n    ) {\n      const scrollElement = scrollerRef.current;\n\n      setCanScrollLeft(scrollElement.scrollLeft > 0);\n      setCanScrollRight(\n        roundUpElementScrollLeft(scrollElement) + scrollElement.offsetWidth <\n          scrollElement.scrollWidth\n      );\n    }\n  }, [hasMouse, scrollerRef, showArrows]);\n\n  const scrollEvent = useEventListener(\"scroll\", onscroll);\n  React.useEffect(() => {\n    if (scrollerRef.current) {\n      scrollEvent.add(scrollerRef.current);\n    }\n  }, [scrollEvent, scrollerRef]);\n  React.useEffect(onscroll, [scrollerRef, children, onscroll]);\n\n  return (\n    <div\n      {...restProps}\n      vkuiClass={classNames(\n        \"HorizontalScroll\",\n        showArrows === \"always\" && \"HorizontalScroll--withConstArrows\"\n      )}\n    >\n      {showArrows && hasMouse && canScrollLeft && (\n        <HorizontalScrollArrow\n          size={arrowSize}\n          direction=\"left\"\n          vkuiClass=\"HorizontalScroll__arrowLeft\"\n          onClick={scrollToLeft}\n        />\n      )}\n      {showArrows && hasMouse && canScrollRight && (\n        <HorizontalScrollArrow\n          size={arrowSize}\n          direction=\"right\"\n          vkuiClass=\"HorizontalScroll__arrowRight\"\n          onClick={scrollToRight}\n        />\n      )}\n      <div vkuiClass=\"HorizontalScroll__in\" ref={scrollerRef}>\n        <div vkuiClass=\"HorizontalScroll__in-wrapper\">{children}</div>\n      </div>\n    </div>\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/HorizontalScroll\n */\nexport const HorizontalScroll = withAdaptivity(HorizontalScrollComponent, {\n  hasMouse: true,\n});\n\nHorizontalScroll.displayName = \"HorizontalScroll\";\n","/**\n * ease function\n * @param x absolute progress of the animation in bounds 0 (beginning) and 1 (end)\n */\nexport function easeInOutSine(x: number) {\n  return 0.5 * (1 - Math.cos(Math.PI * x));\n}\n","import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { IOS } from \"../../lib/platform\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nimport { useDOM } from \"../../lib/dom\";\nimport \"./PopoutWrapper.css\";\n\nexport interface PopoutWrapperProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  hasMask?: boolean;\n  fixed?: boolean;\n  alignY?: \"top\" | \"center\" | \"bottom\";\n  alignX?: \"left\" | \"center\" | \"right\";\n  closing?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/PopoutWrapper\n */\nexport const PopoutWrapper = ({\n  alignY = \"center\",\n  alignX = \"center\",\n  closing = false,\n  hasMask = true,\n  fixed = true,\n  children,\n  onClick,\n  ...restProps\n}: PopoutWrapperProps) => {\n  const platform = usePlatform();\n  const [opened, setOpened] = React.useState(!hasMask);\n  const elRef = React.useRef<HTMLDivElement>(null);\n\n  const onFadeInEnd = (e?: React.AnimationEvent) => {\n    if (!e || e.animationName === \"vkui-animation-full-fade-in\") {\n      setOpened(true);\n    }\n  };\n  const animationFinishFallback = useTimeout(\n    onFadeInEnd,\n    platform === IOS ? 300 : 200\n  );\n  React.useEffect(() => {\n    !opened && animationFinishFallback.set();\n  }, [animationFinishFallback, opened]);\n\n  const { window } = useDOM();\n  useGlobalEventListener(window, \"touchmove\", (e) => e.preventDefault(), {\n    passive: false,\n  });\n\n  return (\n    <div\n      {...restProps}\n      vkuiClass={classNames(\n        \"PopoutWrapper\",\n        `PopoutWrapper--v-${alignY}`,\n        `PopoutWrapper--h-${alignX}`,\n        closing && \"PopoutWrapper--closing\",\n        opened && \"PopoutWrapper--opened\",\n        fixed && \"PopoutWrapper--fixed\",\n        hasMask && \"PopoutWrapper--masked\"\n      )}\n      onAnimationEnd={opened ? undefined : onFadeInEnd}\n      ref={elRef}\n    >\n      <div vkuiClass=\"PopoutWrapper__container\">\n        <div vkuiClass=\"PopoutWrapper__overlay\" onClick={onClick} />\n        <div vkuiClass=\"PopoutWrapper__content\">{children}</div>\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { HasComponent } from \"../../../types\";\nimport { classNames } from \"../../../lib/classNames\";\nimport { warnOnce } from \"../../../lib/warnOnce\";\nimport \"./Title.css\";\n\nexport interface TitleProps\n  extends React.AllHTMLAttributes<HTMLElement>,\n    HasComponent {\n  /**\n   * Задаёт начертание шрифта отличное от стандартного.\n   *\n   * > ⚠️ Начертания `\"heavy\"`, `\"bold\"`, `\"semibold\"`, `medium` и `\"regular\"` устарели и будут удалены в 5.0.0. Используйте значения `\"1\"`, `\"2\"` и `\"3\"`.\n   */\n  weight?:\n    | \"heavy\"\n    | \"bold\"\n    | \"semibold\"\n    | \"medium\"\n    | \"regular\"\n    | \"1\"\n    | \"2\"\n    | \"3\";\n  level?: \"1\" | \"2\" | \"3\";\n}\n\nconst warn = warnOnce(\"Title\");\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Title\n */\nexport const Title = ({\n  children,\n  weight,\n  level = \"1\",\n  Component,\n  ...restProps\n}: TitleProps) => {\n  if (!Component) {\n    Component = (\"h\" + level) as React.ElementType;\n  }\n\n  if (process.env.NODE_ENV === \"development\") {\n    if (\n      weight &&\n      [\"heavy\", \"bold\", \"semibold\", \"medium\", \"regular\"].includes(weight)\n    )\n      warn(\n        `Начертание weight=\"${weight}\" устарело и будет удалено в 5.0.0. Используйте значения \"1\", \"2\" и \"3\"`\n      );\n  }\n\n  return (\n    <Component\n      {...restProps}\n      vkuiClass={classNames(\n        \"Title\",\n        `Title--l-${level}`,\n        weight && `Title--w-${weight}`\n      )}\n    >\n      {children}\n    </Component>\n  );\n};\n","import * as React from \"react\";\nimport { HasComponent } from \"../../../types\";\nimport { classNames } from \"../../../lib/classNames\";\nimport { warnOnce } from \"../../../lib/warnOnce\";\nimport { useAdaptivity } from \"../../../hooks/useAdaptivity\";\nimport \"./Subhead.css\";\n\nexport interface SubheadProps\n  extends React.AllHTMLAttributes<HTMLElement>,\n    HasComponent {\n  /**\n   * Задаёт начертание шрифта отличное от стандартного.\n   *\n   * > ⚠️ Начертания `\"semibold\"`, `medium` и `\"regular\"` устарели и будут удалены в 5.0.0. Используйте значения `\"1\"`, `\"2\"` и `\"3\"`.\n   */\n  weight?: \"regular\" | \"medium\" | \"semibold\" | \"bold\" | \"1\" | \"2\" | \"3\";\n}\n\nconst warn = warnOnce(\"Subhead\");\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Subhead\n */\nexport const Subhead = ({\n  children,\n  weight,\n  Component = \"h5\",\n  ...restProps\n}: SubheadProps) => {\n  const { sizeY } = useAdaptivity();\n\n  if (process.env.NODE_ENV === \"development\") {\n    if (\n      weight &&\n      [\"heavy\", \"bold\", \"semibold\", \"medium\", \"regular\"].includes(weight)\n    )\n      warn(\n        `Начертание weight=\"${weight}\" устарело и будет удалено в 5.0.0. Используйте значения \"1\", \"2\" и \"3\"`\n      );\n  }\n\n  return (\n    <Component\n      {...restProps}\n      vkuiClass={classNames(\n        \"Subhead\",\n        `Subhead--sizeY-${sizeY}`,\n        weight && `Subhead--w-${weight}`\n      )}\n    >\n      {children}\n    </Component>\n  );\n};\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon16Spinner\", \"spinner_16\", \"0 0 16 16\", '<symbol fill=\"none\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" id=\"spinner_16\"><path clip-rule=\"evenodd\" d=\"M11.21 2.93a6 6 0 0 0-8.64 7.62 1 1 0 1 1-1.8.86A8 8 0 1 1 8 16a1 1 0 1 1 0-2 6 6 0 0 0 3.21-11.07z\" fill=\"currentColor\" fill-rule=\"evenodd\" /></symbol>', 16, 16);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon24Spinner\", \"spinner_24\", \"0 0 24 24\", '<symbol fill=\"none\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" id=\"spinner_24\"><path clip-rule=\"evenodd\" d=\"M16.394 5.077A8.2 8.2 0 0 0 4.58 15.49a.9.9 0 0 1-1.628.767A10 10 0 1 1 12 22a.9.9 0 0 1 0-1.8 8.2 8.2 0 0 0 4.394-15.123z\" fill=\"currentColor\" fill-rule=\"evenodd\" /></symbol>', 24, 24);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon32Spinner\", \"spinner_32\", \"0 0 32 32\", '<symbol viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\" id=\"spinner_32\"><path d=\"M16 32a1.5 1.5 0 0 1 0-3c7.18 0 13-5.82 13-13S23.18 3 16 3 3 8.82 3 16c0 1.557.273 3.074.8 4.502A1.5 1.5 0 1 1 .986 21.54 15.97 15.97 0 0 1 0 16C0 7.163 7.163 0 16 0s16 7.163 16 16-7.163 16-16 16Z\" fill=\"currentColor\" /></symbol>', 32, 32);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon44Spinner\", \"spinner_44\", \"0 0 44 44\", '<symbol viewBox=\"0 0 44 44\" xmlns=\"http://www.w3.org/2000/svg\" id=\"spinner_44\"><path d=\"M22 44a1.5 1.5 0 0 1 0-3c10.493 0 19-8.507 19-19S32.493 3 22 3 3 11.507 3 22c0 2.208.376 4.363 1.103 6.397a1.5 1.5 0 1 1-2.825 1.01A21.964 21.964 0 0 1 0 22C0 9.85 9.85 0 22 0s22 9.85 22 22-9.85 22-22 22Z\" fill=\"currentColor\" /></symbol>', 44, 44);\n","import * as React from \"react\";\nimport {\n  Icon24Spinner,\n  Icon32Spinner,\n  Icon44Spinner,\n  Icon16Spinner,\n} from \"@vkontakte/icons\";\nimport \"./Spinner.css\";\n\nexport interface SpinnerProps extends React.HTMLAttributes<HTMLSpanElement> {\n  size?: \"small\" | \"regular\" | \"medium\" | \"large\";\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Spinner\n */\nexport const Spinner = React.memo(\n  ({\n    size = \"regular\",\n    \"aria-label\": ariaLabel = \"Загружается...\",\n    ...restProps\n  }: SpinnerProps) => {\n    const SpinnerIcon = {\n      small: Icon16Spinner,\n      regular: Icon24Spinner,\n      medium: Icon32Spinner,\n      large: Icon44Spinner,\n    }[size];\n\n    return (\n      <span\n        role=\"status\"\n        aria-label={ariaLabel}\n        {...restProps}\n        vkuiClass=\"Spinner\"\n      >\n        <SpinnerIcon aria-hidden=\"true\" vkuiClass=\"Spinner__self\" />\n      </span>\n    );\n  }\n);\n\nSpinner.displayName = \"Spinner\";\n","import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { ConfigProviderContext } from \"../ConfigProvider/ConfigProviderContext\";\nimport { TappableProps, Tappable } from \"../Tappable/Tappable\";\nimport { Title } from \"../Typography/Title/Title\";\nimport { Text } from \"../Typography/Text/Text\";\nimport { Subhead } from \"../Typography/Subhead/Subhead\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport { HasAlign, HasComponent } from \"../../types\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport {\n  AdaptivityProps,\n  SizeType,\n  withAdaptivity,\n} from \"../../hoc/withAdaptivity\";\nimport { PlatformType, IOS, VKCOM, ANDROID } from \"../../lib/platform\";\nimport { Spinner } from \"../Spinner/Spinner\";\nimport { Headline } from \"../Typography/Headline/Headline\";\nimport \"./Button.css\";\n\nexport interface VKUIButtonProps extends HasAlign {\n  /**\n   Значения `commerce`, `destructive`, `overlay_...` будут упразднены в 5.0.0\n   */\n  mode?:\n    | \"primary\"\n    | \"secondary\"\n    | \"tertiary\"\n    | \"outline\"\n    | \"commerce\"\n    | \"destructive\"\n    | \"overlay_primary\"\n    | \"overlay_secondary\"\n    | \"overlay_outline\";\n  appearance?: \"accent\" | \"positive\" | \"negative\" | \"neutral\" | \"overlay\";\n  size?: \"s\" | \"m\" | \"l\";\n  stretched?: boolean;\n  before?: React.ReactNode;\n  after?: React.ReactNode;\n  loading?: boolean;\n}\n\nexport interface ButtonProps\n  extends Omit<TappableProps, \"size\">,\n    VKUIButtonProps {}\n\ninterface ButtonTypographyProps extends HasComponent {\n  size: ButtonProps[\"size\"];\n  platform: PlatformType | undefined;\n  sizeY: AdaptivityProps[\"sizeY\"];\n  children?: ButtonProps[\"children\"];\n}\n\nconst ButtonTypography = ({\n  size,\n  sizeY,\n  platform,\n  ...restProps\n}: ButtonTypographyProps) => {\n  const isCompact = sizeY === SizeType.COMPACT;\n\n  switch (size) {\n    case \"l\":\n      if (isCompact) {\n        return <Text weight=\"2\" {...restProps} />;\n      }\n      if (platform === ANDROID) {\n        return <Headline weight=\"2\" {...restProps} />;\n      }\n      return <Title level=\"3\" weight=\"2\" {...restProps} />;\n    case \"m\":\n      if (isCompact) {\n        return (\n          <Subhead weight={platform === VKCOM ? \"3\" : \"2\"} {...restProps} />\n        );\n      }\n\n      return <Text weight=\"2\" {...restProps} />;\n    case \"s\":\n    default:\n      if (platform === IOS) {\n        return <Subhead weight=\"2\" {...restProps} />;\n      }\n\n      if (platform === VKCOM) {\n        return <Caption {...restProps} />;\n      }\n\n      if (isCompact) {\n        return <Caption weight=\"2\" {...restProps} />;\n      }\n\n      return <Subhead weight=\"2\" {...restProps} />;\n  }\n};\n\ninterface ResolvedButtonAppearance {\n  resolvedAppearance: ButtonProps[\"appearance\"];\n  resolvedMode: ButtonProps[\"mode\"];\n}\n\nfunction resolveButtonAppearance(\n  appearance: ButtonProps[\"appearance\"],\n  mode: ButtonProps[\"mode\"]\n): ResolvedButtonAppearance {\n  let resolvedAppearance: ButtonProps[\"appearance\"] = appearance;\n  let resolvedMode: ButtonProps[\"mode\"] = mode;\n\n  if (appearance === undefined) {\n    switch (mode) {\n      case \"tertiary\":\n      case \"secondary\":\n      case \"primary\":\n      case \"outline\":\n        resolvedAppearance = \"accent\";\n        break;\n      case \"commerce\":\n        resolvedMode = \"primary\";\n        resolvedAppearance = \"positive\";\n        break;\n      case \"destructive\":\n        resolvedMode = \"primary\";\n        resolvedAppearance = \"negative\";\n        break;\n      case \"overlay_primary\":\n        resolvedMode = \"primary\";\n        resolvedAppearance = \"overlay\";\n        break;\n      case \"overlay_secondary\":\n        resolvedMode = \"secondary\";\n        resolvedAppearance = \"overlay\";\n        break;\n      case \"overlay_outline\":\n        resolvedMode = \"outline\";\n        resolvedAppearance = \"overlay\";\n        break;\n    }\n  }\n\n  return {\n    resolvedAppearance,\n    resolvedMode,\n  };\n}\n\nconst ButtonComponent = ({\n  size = \"s\",\n  mode = \"primary\",\n  appearance,\n  stretched = false,\n  align = \"center\",\n  children,\n  before,\n  after,\n  getRootRef,\n  sizeY,\n  Component = \"button\",\n  loading,\n  onClick,\n  stopPropagation = true,\n  ...restProps\n}: ButtonProps) => {\n  const platform = usePlatform();\n  const hasIcons = Boolean(before || after);\n  const hasIconOnly = !children && Boolean(after) !== Boolean(before);\n  const { resolvedMode, resolvedAppearance } = resolveButtonAppearance(\n    appearance,\n    mode\n  );\n  const hasNewTokens = React.useContext(ConfigProviderContext).hasNewTokens;\n\n  return (\n    <Tappable\n      hoverMode={hasNewTokens ? \"Button--hover\" : \"background\"}\n      activeMode={hasNewTokens ? \"Button--active\" : \"opacity\"}\n      {...restProps}\n      Component={restProps.href ? \"a\" : Component}\n      onClick={loading ? undefined : onClick}\n      focusVisibleMode=\"outside\"\n      stopPropagation={stopPropagation}\n      vkuiClass={classNames(\n        \"Button\",\n        `Button--sz-${size}`,\n        `Button--lvl-${resolvedMode}`,\n        `Button--clr-${resolvedAppearance}`,\n        `Button--aln-${align}`,\n        `Button--sizeY-${sizeY}`,\n        stretched && \"Button--stretched\",\n        hasIcons && \"Button--with-icon\",\n        hasIconOnly && \"Button--singleIcon\",\n        loading && \"Button--loading\"\n      )}\n      getRootRef={getRootRef}\n    >\n      {loading && <Spinner size=\"small\" vkuiClass=\"Button__spinner\" />}\n      <span vkuiClass=\"Button__in\">\n        {before && (\n          <span vkuiClass=\"Button__before\" role=\"presentation\">\n            {before}\n          </span>\n        )}\n        {children && (\n          <ButtonTypography\n            size={size}\n            sizeY={sizeY}\n            platform={platform}\n            vkuiClass=\"Button__content\"\n            Component=\"span\"\n          >\n            {children}\n          </ButtonTypography>\n        )}\n        {after && (\n          <span vkuiClass=\"Button__after\" role=\"presentation\">\n            {after}\n          </span>\n        )}\n      </span>\n    </Tappable>\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Button\n */\nexport const Button = withAdaptivity(ButtonComponent, {\n  sizeY: true,\n});\n\nButton.displayName = \"Button\";\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon20Cancel\", \"cancel_20\", \"0 0 20 20\", '<symbol fill=\"none\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\" id=\"cancel_20\"><path clip-rule=\"evenodd\" d=\"M4.72 4.72a.75.75 0 0 1 1.06 0L10 8.94l4.22-4.22a.75.75 0 1 1 1.06 1.06L11.06 10l4.22 4.22a.75.75 0 1 1-1.06 1.06L10 11.06l-4.22 4.22a.75.75 0 0 1-1.06-1.06L8.94 10 4.72 5.78a.75.75 0 0 1 0-1.06z\" fill=\"currentColor\" fill-rule=\"evenodd\" /></symbol>', 20, 20);\n","import * as React from \"react\";\nimport { Icon20Cancel } from \"@vkontakte/icons\";\nimport { Tappable } from \"../Tappable/Tappable\";\nimport \"./ModalDismissButton.css\";\n\nexport type ModalDismissButtonProps = React.HTMLAttributes<HTMLButtonElement>;\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ModalDismissButton\n */\nexport const ModalDismissButton = ({\n  \"aria-label\": ariaLabel = \"Закрыть\",\n  ...restProps\n}: ModalDismissButtonProps) => {\n  return (\n    <Tappable\n      vkuiClass=\"ModalDismissButton\"\n      {...restProps}\n      aria-label={ariaLabel}\n      activeMode=\"ModalDismissButton--active\"\n      hoverMode=\"ModalDismissButton--hover\"\n    >\n      <Icon20Cancel />\n    </Tappable>\n  );\n};\n","import * as React from \"react\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport {\n  FOCUSABLE_ELEMENTS_LIST,\n  Keys,\n  pressedKey,\n} from \"../../lib/accessibility\";\nimport { useDOM } from \"../../lib/dom\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { HasComponent, HasRootRef } from \"../../types\";\nimport { AppRootContext } from \"../AppRoot/AppRootContext\";\n\nconst FOCUSABLE_ELEMENTS: string = FOCUSABLE_ELEMENTS_LIST.join();\n\nexport interface FocusTrapProps\n  extends React.AllHTMLAttributes<HTMLElement>,\n    HasRootRef<HTMLElement>,\n    HasComponent {\n  restoreFocus?: boolean;\n  timeout?: number;\n  onClose?(): void;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/FocusTrap\n */\nexport const FocusTrap = ({\n  Component = \"div\",\n  onClose,\n  restoreFocus = true,\n  timeout = 0,\n  getRootRef,\n  children,\n  ...restProps\n}: FocusTrapProps) => {\n  const ref = useExternRef<HTMLElement>(getRootRef);\n\n  const { document, window } = useDOM();\n\n  const [focusableNodes, setFocusableNodes] = React.useState<\n    HTMLElement[] | null\n  >(null);\n  const [restoreFocusTo, setRestoreFocusTo] =\n    React.useState<HTMLElement | null>(null);\n\n  // HANDLE TRAP MOUNT\n\n  const { keyboardInput } = React.useContext(AppRootContext);\n  const focusOnTrapMount = useTimeout(() => {\n    if (\n      keyboardInput &&\n      !ref.current?.contains(document!.activeElement) &&\n      focusableNodes?.length\n    ) {\n      focusableNodes[0].focus();\n    }\n  }, timeout);\n  useIsomorphicLayoutEffect(() => {\n    focusOnTrapMount.set();\n  }, []);\n\n  // HANDLE FOCUSABLE NODES\n\n  useIsomorphicLayoutEffect(() => {\n    if (!ref.current) {\n      return;\n    }\n\n    const nodes: HTMLElement[] = [];\n    Array.prototype.forEach.call(\n      // eslint-disable-next-line no-restricted-properties\n      ref.current.querySelectorAll(FOCUSABLE_ELEMENTS),\n      (focusableEl: Element) => {\n        const { display, visibility } = window!.getComputedStyle(focusableEl);\n\n        if (display !== \"none\" && visibility !== \"hidden\") {\n          nodes.push(focusableEl as HTMLElement);\n        }\n      }\n    );\n\n    if (nodes.length === 0) {\n      // Чтобы фокус был хотя бы на родителе\n      nodes.push(ref.current);\n    }\n\n    setFocusableNodes(nodes);\n  }, [children]);\n\n  // HANDLE TRAP UNMOUNT\n\n  const focusOnTrapUnmount = useTimeout(() => {\n    if (restoreFocusTo) {\n      restoreFocusTo.focus();\n    }\n  }, timeout);\n  useIsomorphicLayoutEffect(() => {\n    if (restoreFocus && document!.activeElement) {\n      setRestoreFocusTo(document!.activeElement as HTMLElement);\n\n      return () => {\n        focusOnTrapUnmount.set();\n      };\n    }\n\n    return;\n  }, [restoreFocus]);\n\n  const onDocumentKeydown = (e: KeyboardEvent) => {\n    if (pressedKey(e) === Keys.TAB && focusableNodes?.length) {\n      const lastIdx = focusableNodes.length - 1;\n      const targetIdx = focusableNodes.findIndex((node) => node === e.target);\n\n      const shouldFocusFirstNode =\n        targetIdx === -1 || (targetIdx === lastIdx && !e.shiftKey);\n\n      if (shouldFocusFirstNode || (targetIdx === 0 && e.shiftKey)) {\n        e.preventDefault();\n\n        const node = focusableNodes[shouldFocusFirstNode ? 0 : lastIdx];\n\n        if (node !== document!.activeElement) {\n          node.focus();\n        }\n\n        return false;\n      }\n    }\n\n    if (onClose && pressedKey(e) === Keys.ESCAPE) {\n      onClose();\n    }\n\n    return true;\n  };\n  useGlobalEventListener(document, \"keydown\", onDocumentKeydown, {\n    capture: true,\n  });\n\n  return (\n    <Component tabIndex={-1} ref={ref} {...restProps}>\n      {children}\n    </Component>\n  );\n};\n","import * as React from \"react\";\nimport { Tappable } from \"../Tappable/Tappable\";\nimport { PopoutWrapper } from \"../PopoutWrapper/PopoutWrapper\";\nimport { classNames } from \"../../lib/classNames\";\nimport { VKCOM, IOS } from \"../../lib/platform\";\nimport { ViewWidth } from \"../../hoc/withAdaptivity\";\nimport { Button, ButtonProps } from \"../Button/Button\";\nimport { hasReactNode, stopPropagation } from \"../../lib/utils\";\nimport { Title } from \"../Typography/Title/Title\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport { Text } from \"../Typography/Text/Text\";\nimport { ModalDismissButton } from \"../ModalDismissButton/ModalDismissButton\";\nimport { FocusTrap } from \"../FocusTrap/FocusTrap\";\nimport { useScrollLock } from \"../AppRoot/ScrollContext\";\nimport { useWaitTransitionFinish } from \"../../hooks/useWaitTransitionFinish\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport \"./Alert.css\";\n\nexport type AlertActionInterface = AlertAction &\n  React.AnchorHTMLAttributes<HTMLElement>;\n\nexport interface AlertAction extends Pick<ButtonProps, \"Component\" | \"href\"> {\n  title: string;\n  action?: VoidFunction;\n  autoclose?: boolean;\n  mode: \"cancel\" | \"destructive\" | \"default\";\n}\n\nexport interface AlertProps extends React.HTMLAttributes<HTMLElement> {\n  actionsLayout?: \"vertical\" | \"horizontal\";\n  actions?: AlertAction[];\n  header?: React.ReactNode;\n  text?: React.ReactNode;\n  onClose?: VoidFunction;\n\n  /**\n   * `aria-label` для кнопки закрытия. Необходим, чтобы кнопка была доступной.\n   */\n  dismissLabel?: string;\n}\n\ntype ItemClickHandler = (item: AlertActionInterface) => void;\n\ninterface AlertTypography {\n  id: string;\n  children?: React.ReactNode;\n}\n\nconst AlertHeader = (props: AlertTypography) => {\n  const platform = usePlatform();\n\n  switch (platform) {\n    case IOS:\n      return (\n        <Title vkuiClass=\"Alert__header\" weight=\"1\" level=\"3\" {...props} />\n      );\n    default:\n      return (\n        <Title vkuiClass=\"Alert__header\" weight=\"2\" level=\"2\" {...props} />\n      );\n  }\n};\n\nconst AlertText = (props: AlertTypography) => {\n  const platform = usePlatform();\n\n  switch (platform) {\n    case VKCOM:\n      return <Caption vkuiClass=\"Alert__text\" {...props} />;\n    case IOS:\n      return <Caption vkuiClass=\"Alert__text\" level=\"2\" {...props} />;\n    default:\n      return (\n        <Text Component=\"span\" vkuiClass=\"Alert__text\" weight=\"3\" {...props} />\n      );\n  }\n};\n\ninterface AlertActionProps {\n  action: AlertActionInterface;\n  onItemClick: ItemClickHandler;\n}\n\nconst AlertAction = ({\n  action,\n  onItemClick,\n  ...restProps\n}: AlertActionProps) => {\n  const platform = usePlatform();\n  const { viewWidth } = useAdaptivity();\n  const handleItemClick = React.useCallback(\n    () => onItemClick(action),\n    [onItemClick, action]\n  );\n\n  if (platform === IOS) {\n    const { Component = \"button\" } = action;\n    return (\n      <Tappable\n        Component={action.href ? \"a\" : Component}\n        vkuiClass={classNames(\"Alert__action\", `Alert__action--${action.mode}`)}\n        onClick={handleItemClick}\n        href={action.href}\n        target={action.target}\n        {...restProps}\n      >\n        {action.title}\n      </Tappable>\n    );\n  }\n\n  let mode: ButtonProps[\"mode\"] = \"tertiary\";\n\n  // TODO v5.0.0 поправить под новую адаптивность\n  if (viewWidth === ViewWidth.DESKTOP && action.mode === \"destructive\") {\n    mode = \"destructive\";\n  }\n\n  if (platform === VKCOM) {\n    mode = action.mode === \"cancel\" ? \"secondary\" : \"primary\";\n  }\n\n  return (\n    <Button\n      vkuiClass={classNames(\"Alert__button\", `Alert__button--${action.mode}`)}\n      mode={mode}\n      size=\"m\"\n      onClick={handleItemClick}\n      Component={action.Component}\n      href={action.href}\n      target={action.target}\n    >\n      {action.title}\n    </Button>\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Alert\n */\nexport const Alert = ({\n  actions = [],\n  actionsLayout = \"horizontal\",\n  children,\n  className,\n  style,\n  text,\n  header,\n  onClose,\n  dismissLabel = \"Закрыть предупреждение\",\n  ...restProps\n}: AlertProps) => {\n  const platform = usePlatform();\n  const { viewWidth } = useAdaptivity();\n  const { waitTransitionFinish } = useWaitTransitionFinish();\n\n  const [closing, setClosing] = React.useState(false);\n\n  const elementRef = React.useRef<HTMLDivElement>(null);\n\n  const resolvedActionsLayout: AlertProps[\"actionsLayout\"] =\n    platform === VKCOM ? \"horizontal\" : actionsLayout;\n  const canShowCloseButton =\n    platform !== IOS && viewWidth >= ViewWidth.SMALL_TABLET;\n  const isDesktop = viewWidth >= ViewWidth.SMALL_TABLET; // TODO v5.0.0 поправить под новую адаптивность\n\n  const timeout = platform === IOS ? 300 : 200;\n\n  const close = React.useCallback(() => {\n    setClosing(true);\n    waitTransitionFinish(\n      elementRef.current,\n      (e?: TransitionEvent) => {\n        if (!e || e.propertyName === \"opacity\") {\n          onClose && onClose();\n        }\n      },\n      timeout\n    );\n  }, [elementRef, waitTransitionFinish, onClose, timeout]);\n\n  const onItemClick: ItemClickHandler = React.useCallback(\n    (item: AlertActionInterface) => {\n      const { action, autoclose } = item;\n\n      if (autoclose) {\n        setClosing(true);\n        waitTransitionFinish(\n          elementRef.current,\n          (e?: TransitionEvent) => {\n            if (!e || e.propertyName === \"opacity\") {\n              onClose && onClose();\n              action && action();\n            }\n          },\n          timeout\n        );\n      } else {\n        action && action();\n      }\n    },\n    [elementRef, waitTransitionFinish, onClose, timeout]\n  );\n\n  useScrollLock();\n\n  return (\n    <PopoutWrapper\n      className={className}\n      closing={closing}\n      style={style}\n      onClick={close}\n    >\n      <FocusTrap\n        {...restProps}\n        getRootRef={elementRef}\n        onClick={stopPropagation}\n        onClose={close}\n        timeout={timeout}\n        vkuiClass={classNames(\n          \"Alert\",\n          platform === IOS && \"Alert--ios\",\n          platform === VKCOM && \"Alert--vkcom\",\n          resolvedActionsLayout === \"vertical\" ? \"Alert--v\" : \"Alert--h\",\n          closing && \"Alert--closing\",\n          isDesktop && \"Alert--desktop\"\n        )}\n        role=\"alertdialog\"\n        aria-modal\n        aria-labelledby=\"vkui--alert--title\"\n        aria-describedby=\"vkui--alert--desc\"\n      >\n        <div vkuiClass=\"Alert__content\">\n          {hasReactNode(header) && (\n            <AlertHeader id=\"vkui--alert--title\">{header}</AlertHeader>\n          )}\n          {hasReactNode(text) && (\n            <AlertText id=\"vkui--alert--desc\">{text}</AlertText>\n          )}\n          {children}\n        </div>\n        <div vkuiClass=\"Alert__actions\">\n          {actions.map((action, i) => (\n            <AlertAction key={i} action={action} onItemClick={onItemClick} />\n          ))}\n        </div>\n        {canShowCloseButton && (\n          <ModalDismissButton onClick={close} aria-label={dismissLabel} />\n        )}\n      </FocusTrap>\n    </PopoutWrapper>\n  );\n};\n","import { useEffect } from \"react\";\nimport { noop } from \"../lib/utils\";\n\nexport const useEffectDev =\n  process.env.NODE_ENV === \"development\" ? useEffect : noop;\n","import * as React from \"react\";\n\nexport const isRefObject = <T, E = Element>(\n  refObject: React.RefObject<E> | T\n): refObject is React.RefObject<E> => {\n  return (\n    typeof refObject === \"object\" &&\n    refObject !== null &&\n    (refObject as React.RefObject<E>).hasOwnProperty(\"current\")\n  );\n};\n","export default function getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (node.toString() !== '[object Window]') {\n    var ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}","import getWindow from \"./getWindow.js\";\n\nfunction isElement(node) {\n  var OwnElement = getWindow(node).Element;\n  return node instanceof OwnElement || node instanceof Element;\n}\n\nfunction isHTMLElement(node) {\n  var OwnElement = getWindow(node).HTMLElement;\n  return node instanceof OwnElement || node instanceof HTMLElement;\n}\n\nfunction isShadowRoot(node) {\n  // IE 11 has no ShadowRoot\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  var OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\nexport { isElement, isHTMLElement, isShadowRoot };","export var max = Math.max;\nexport var min = Math.min;\nexport var round = Math.round;","export default function getUAString() {\n  var uaData = navigator.userAgentData;\n\n  if (uaData != null && uaData.brands) {\n    return uaData.brands.map(function (item) {\n      return item.brand + \"/\" + item.version;\n    }).join(' ');\n  }\n\n  return navigator.userAgent;\n}","import getUAString from \"../utils/userAgent.js\";\nexport default function isLayoutViewport() {\n  return !/^((?!chrome|android).)*safari/i.test(getUAString());\n}","import { isElement, isHTMLElement } from \"./instanceOf.js\";\nimport { round } from \"../utils/math.js\";\nimport getWindow from \"./getWindow.js\";\nimport isLayoutViewport from \"./isLayoutViewport.js\";\nexport default function getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  var clientRect = element.getBoundingClientRect();\n  var scaleX = 1;\n  var scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n  }\n\n  var _ref = isElement(element) ? getWindow(element) : window,\n      visualViewport = _ref.visualViewport;\n\n  var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;\n  var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;\n  var width = clientRect.width / scaleX;\n  var height = clientRect.height / scaleY;\n  return {\n    width: width,\n    height: height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x: x,\n    y: y\n  };\n}","import getWindow from \"./getWindow.js\";\nexport default function getWindowScroll(node) {\n  var win = getWindow(node);\n  var scrollLeft = win.pageXOffset;\n  var scrollTop = win.pageYOffset;\n  return {\n    scrollLeft: scrollLeft,\n    scrollTop: scrollTop\n  };\n}","export default function getNodeName(element) {\n  return element ? (element.nodeName || '').toLowerCase() : null;\n}","import { isElement } from \"./instanceOf.js\";\nexport default function getDocumentElement(element) {\n  // $FlowFixMe[incompatible-return]: assume body is always available\n  return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]\n  element.document) || window.document).documentElement;\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nexport default function getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  // Popper 1 is broken in this case and never had a bug report so let's assume\n  // it's not an issue. I don't think anyone ever specifies width on <html>\n  // anyway.\n  // Browsers where the left scrollbar doesn't cause an issue report `0` for\n  // this (e.g. Edge 2019, IE11, Safari)\n  return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;\n}","import getWindow from \"./getWindow.js\";\nexport default function getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}","import getComputedStyle from \"./getComputedStyle.js\";\nexport default function isScrollParent(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  var _getComputedStyle = getComputedStyle(element),\n      overflow = _getComputedStyle.overflow,\n      overflowX = _getComputedStyle.overflowX,\n      overflowY = _getComputedStyle.overflowY;\n\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getNodeScroll from \"./getNodeScroll.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport { round } from \"../utils/math.js\";\n\nfunction isElementScaled(element) {\n  var rect = element.getBoundingClientRect();\n  var scaleX = round(rect.width) / element.offsetWidth || 1;\n  var scaleY = round(rect.height) / element.offsetHeight || 1;\n  return scaleX !== 1 || scaleY !== 1;\n} // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\n\nexport default function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var isOffsetParentAnElement = isHTMLElement(offsetParent);\n  var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent, true);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}","import getWindowScroll from \"./getWindowScroll.js\";\nimport getWindow from \"./getWindow.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getHTMLElementScroll from \"./getHTMLElementScroll.js\";\nexport default function getNodeScroll(node) {\n  if (node === getWindow(node) || !isHTMLElement(node)) {\n    return getWindowScroll(node);\n  } else {\n    return getHTMLElementScroll(node);\n  }\n}","export default function getHTMLElementScroll(element) {\n  return {\n    scrollLeft: element.scrollLeft,\n    scrollTop: element.scrollTop\n  };\n}","import getBoundingClientRect from \"./getBoundingClientRect.js\"; // Returns the layout rect of an element relative to its offsetParent. Layout\n// means it doesn't take into account transforms.\n\nexport default function getLayoutRect(element) {\n  var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.\n  // Fixes https://github.com/popperjs/popper-core/issues/1223\n\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n\n  if (Math.abs(clientRect.width - width) <= 1) {\n    width = clientRect.width;\n  }\n\n  if (Math.abs(clientRect.height - height) <= 1) {\n    height = clientRect.height;\n  }\n\n  return {\n    x: element.offsetLeft,\n    y: element.offsetTop,\n    width: width,\n    height: height\n  };\n}","import getNodeName from \"./getNodeName.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport { isShadowRoot } from \"./instanceOf.js\";\nexport default function getParentNode(element) {\n  if (getNodeName(element) === 'html') {\n    return element;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // $FlowFixMe[incompatible-return]\n    // $FlowFixMe[prop-missing]\n    element.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    element.parentNode || ( // DOM Element detected\n    isShadowRoot(element) ? element.host : null) || // ShadowRoot detected\n    // $FlowFixMe[incompatible-call]: HTMLElement is a Node\n    getDocumentElement(element) // fallback\n\n  );\n}","import getParentNode from \"./getParentNode.js\";\nimport isScrollParent from \"./isScrollParent.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nexport default function getScrollParent(node) {\n  if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {\n    // $FlowFixMe[incompatible-return]: assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(node) && isScrollParent(node)) {\n    return node;\n  }\n\n  return getScrollParent(getParentNode(node));\n}","import getScrollParent from \"./getScrollParent.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport getWindow from \"./getWindow.js\";\nimport isScrollParent from \"./isScrollParent.js\";\n/*\ngiven a DOM element, return the list of all scroll parents, up the list of ancesors\nuntil we get to the top window object. This list is what we attach scroll listeners\nto, because if any of these parent elements scroll, we'll need to re-calculate the\nreference element's position.\n*/\n\nexport default function listScrollParents(element, list) {\n  var _element$ownerDocumen;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  var scrollParent = getScrollParent(element);\n  var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);\n  var win = getWindow(scrollParent);\n  var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;\n  var updatedList = list.concat(target);\n  return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here\n  updatedList.concat(listScrollParents(getParentNode(target)));\n}","import getNodeName from \"./getNodeName.js\";\nexport default function isTableElement(element) {\n  return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;\n}","import getWindow from \"./getWindow.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isHTMLElement, isShadowRoot } from \"./instanceOf.js\";\nimport isTableElement from \"./isTableElement.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport getUAString from \"../utils/userAgent.js\";\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837\n  getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n} // `.offsetParent` reports `null` for fixed elements, while absolute elements\n// return the containing block\n\n\nfunction getContainingBlock(element) {\n  var isFirefox = /firefox/i.test(getUAString());\n  var isIE = /Trident/i.test(getUAString());\n\n  if (isIE && isHTMLElement(element)) {\n    // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport\n    var elementCss = getComputedStyle(element);\n\n    if (elementCss.position === 'fixed') {\n      return null;\n    }\n  }\n\n  var currentNode = getParentNode(element);\n\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n\n  while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {\n    var css = getComputedStyle(currentNode); // This is non-exhaustive but covers the most common CSS properties that\n    // create a containing block.\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n    if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nexport default function getOffsetParent(element) {\n  var window = getWindow(element);\n  var offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static')) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}","export var top = 'top';\nexport var bottom = 'bottom';\nexport var right = 'right';\nexport var left = 'left';\nexport var auto = 'auto';\nexport var basePlacements = [top, bottom, right, left];\nexport var start = 'start';\nexport var end = 'end';\nexport var clippingParents = 'clippingParents';\nexport var viewport = 'viewport';\nexport var popper = 'popper';\nexport var reference = 'reference';\nexport var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {\n  return acc.concat([placement + \"-\" + start, placement + \"-\" + end]);\n}, []);\nexport var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {\n  return acc.concat([placement, placement + \"-\" + start, placement + \"-\" + end]);\n}, []); // modifiers that need to read the DOM\n\nexport var beforeRead = 'beforeRead';\nexport var read = 'read';\nexport var afterRead = 'afterRead'; // pure-logic modifiers\n\nexport var beforeMain = 'beforeMain';\nexport var main = 'main';\nexport var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)\n\nexport var beforeWrite = 'beforeWrite';\nexport var write = 'write';\nexport var afterWrite = 'afterWrite';\nexport var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];","import { modifierPhases } from \"../enums.js\"; // source: https://stackoverflow.com/questions/49875255\n\nfunction order(modifiers) {\n  var map = new Map();\n  var visited = new Set();\n  var result = [];\n  modifiers.forEach(function (modifier) {\n    map.set(modifier.name, modifier);\n  }); // On visiting object, check for its dependencies and visit them recursively\n\n  function sort(modifier) {\n    visited.add(modifier.name);\n    var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);\n    requires.forEach(function (dep) {\n      if (!visited.has(dep)) {\n        var depModifier = map.get(dep);\n\n        if (depModifier) {\n          sort(depModifier);\n        }\n      }\n    });\n    result.push(modifier);\n  }\n\n  modifiers.forEach(function (modifier) {\n    if (!visited.has(modifier.name)) {\n      // check for visited object\n      sort(modifier);\n    }\n  });\n  return result;\n}\n\nexport default function orderModifiers(modifiers) {\n  // order based on dependencies\n  var orderedModifiers = order(modifiers); // order based on phase\n\n  return modifierPhases.reduce(function (acc, phase) {\n    return acc.concat(orderedModifiers.filter(function (modifier) {\n      return modifier.phase === phase;\n    }));\n  }, []);\n}","export default function debounce(fn) {\n  var pending;\n  return function () {\n    if (!pending) {\n      pending = new Promise(function (resolve) {\n        Promise.resolve().then(function () {\n          pending = undefined;\n          resolve(fn());\n        });\n      });\n    }\n\n    return pending;\n  };\n}","import getCompositeRect from \"./dom-utils/getCompositeRect.js\";\nimport getLayoutRect from \"./dom-utils/getLayoutRect.js\";\nimport listScrollParents from \"./dom-utils/listScrollParents.js\";\nimport getOffsetParent from \"./dom-utils/getOffsetParent.js\";\nimport getComputedStyle from \"./dom-utils/getComputedStyle.js\";\nimport orderModifiers from \"./utils/orderModifiers.js\";\nimport debounce from \"./utils/debounce.js\";\nimport validateModifiers from \"./utils/validateModifiers.js\";\nimport uniqueBy from \"./utils/uniqueBy.js\";\nimport getBasePlacement from \"./utils/getBasePlacement.js\";\nimport mergeByName from \"./utils/mergeByName.js\";\nimport detectOverflow from \"./utils/detectOverflow.js\";\nimport { isElement } from \"./dom-utils/instanceOf.js\";\nimport { auto } from \"./enums.js\";\nvar INVALID_ELEMENT_ERROR = 'Popper: Invalid reference or popper argument provided. They must be either a DOM element or virtual element.';\nvar INFINITE_LOOP_ERROR = 'Popper: An infinite loop in the modifiers cycle has been detected! The cycle has been interrupted to prevent a browser crash.';\nvar DEFAULT_OPTIONS = {\n  placement: 'bottom',\n  modifiers: [],\n  strategy: 'absolute'\n};\n\nfunction areValidElements() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return !args.some(function (element) {\n    return !(element && typeof element.getBoundingClientRect === 'function');\n  });\n}\n\nexport function popperGenerator(generatorOptions) {\n  if (generatorOptions === void 0) {\n    generatorOptions = {};\n  }\n\n  var _generatorOptions = generatorOptions,\n      _generatorOptions$def = _generatorOptions.defaultModifiers,\n      defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,\n      _generatorOptions$def2 = _generatorOptions.defaultOptions,\n      defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;\n  return function createPopper(reference, popper, options) {\n    if (options === void 0) {\n      options = defaultOptions;\n    }\n\n    var state = {\n      placement: 'bottom',\n      orderedModifiers: [],\n      options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),\n      modifiersData: {},\n      elements: {\n        reference: reference,\n        popper: popper\n      },\n      attributes: {},\n      styles: {}\n    };\n    var effectCleanupFns = [];\n    var isDestroyed = false;\n    var instance = {\n      state: state,\n      setOptions: function setOptions(setOptionsAction) {\n        var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;\n        cleanupModifierEffects();\n        state.options = Object.assign({}, defaultOptions, state.options, options);\n        state.scrollParents = {\n          reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],\n          popper: listScrollParents(popper)\n        }; // Orders the modifiers based on their dependencies and `phase`\n        // properties\n\n        var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers\n\n        state.orderedModifiers = orderedModifiers.filter(function (m) {\n          return m.enabled;\n        }); // Validate the provided modifiers so that the consumer will get warned\n        // if one of the modifiers is invalid for any reason\n\n        if (process.env.NODE_ENV !== \"production\") {\n          var modifiers = uniqueBy([].concat(orderedModifiers, state.options.modifiers), function (_ref) {\n            var name = _ref.name;\n            return name;\n          });\n          validateModifiers(modifiers);\n\n          if (getBasePlacement(state.options.placement) === auto) {\n            var flipModifier = state.orderedModifiers.find(function (_ref2) {\n              var name = _ref2.name;\n              return name === 'flip';\n            });\n\n            if (!flipModifier) {\n              console.error(['Popper: \"auto\" placements require the \"flip\" modifier be', 'present and enabled to work.'].join(' '));\n            }\n          }\n\n          var _getComputedStyle = getComputedStyle(popper),\n              marginTop = _getComputedStyle.marginTop,\n              marginRight = _getComputedStyle.marginRight,\n              marginBottom = _getComputedStyle.marginBottom,\n              marginLeft = _getComputedStyle.marginLeft; // We no longer take into account `margins` on the popper, and it can\n          // cause bugs with positioning, so we'll warn the consumer\n\n\n          if ([marginTop, marginRight, marginBottom, marginLeft].some(function (margin) {\n            return parseFloat(margin);\n          })) {\n            console.warn(['Popper: CSS \"margin\" styles cannot be used to apply padding', 'between the popper and its reference element or boundary.', 'To replicate margin, use the `offset` modifier, as well as', 'the `padding` option in the `preventOverflow` and `flip`', 'modifiers.'].join(' '));\n          }\n        }\n\n        runModifierEffects();\n        return instance.update();\n      },\n      // Sync update – it will always be executed, even if not necessary. This\n      // is useful for low frequency updates where sync behavior simplifies the\n      // logic.\n      // For high frequency updates (e.g. `resize` and `scroll` events), always\n      // prefer the async Popper#update method\n      forceUpdate: function forceUpdate() {\n        if (isDestroyed) {\n          return;\n        }\n\n        var _state$elements = state.elements,\n            reference = _state$elements.reference,\n            popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements\n        // anymore\n\n        if (!areValidElements(reference, popper)) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(INVALID_ELEMENT_ERROR);\n          }\n\n          return;\n        } // Store the reference and popper rects to be read by modifiers\n\n\n        state.rects = {\n          reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),\n          popper: getLayoutRect(popper)\n        }; // Modifiers have the ability to reset the current update cycle. The\n        // most common use case for this is the `flip` modifier changing the\n        // placement, which then needs to re-run all the modifiers, because the\n        // logic was previously ran for the previous placement and is therefore\n        // stale/incorrect\n\n        state.reset = false;\n        state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier\n        // is filled with the initial data specified by the modifier. This means\n        // it doesn't persist and is fresh on each update.\n        // To ensure persistent data, use `${name}#persistent`\n\n        state.orderedModifiers.forEach(function (modifier) {\n          return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);\n        });\n        var __debug_loops__ = 0;\n\n        for (var index = 0; index < state.orderedModifiers.length; index++) {\n          if (process.env.NODE_ENV !== \"production\") {\n            __debug_loops__ += 1;\n\n            if (__debug_loops__ > 100) {\n              console.error(INFINITE_LOOP_ERROR);\n              break;\n            }\n          }\n\n          if (state.reset === true) {\n            state.reset = false;\n            index = -1;\n            continue;\n          }\n\n          var _state$orderedModifie = state.orderedModifiers[index],\n              fn = _state$orderedModifie.fn,\n              _state$orderedModifie2 = _state$orderedModifie.options,\n              _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,\n              name = _state$orderedModifie.name;\n\n          if (typeof fn === 'function') {\n            state = fn({\n              state: state,\n              options: _options,\n              name: name,\n              instance: instance\n            }) || state;\n          }\n        }\n      },\n      // Async and optimistically optimized update – it will not be executed if\n      // not necessary (debounced to run at most once-per-tick)\n      update: debounce(function () {\n        return new Promise(function (resolve) {\n          instance.forceUpdate();\n          resolve(state);\n        });\n      }),\n      destroy: function destroy() {\n        cleanupModifierEffects();\n        isDestroyed = true;\n      }\n    };\n\n    if (!areValidElements(reference, popper)) {\n      if (process.env.NODE_ENV !== \"production\") {\n        console.error(INVALID_ELEMENT_ERROR);\n      }\n\n      return instance;\n    }\n\n    instance.setOptions(options).then(function (state) {\n      if (!isDestroyed && options.onFirstUpdate) {\n        options.onFirstUpdate(state);\n      }\n    }); // Modifiers have the ability to execute arbitrary code before the first\n    // update cycle runs. They will be executed in the same order as the update\n    // cycle. This is useful when a modifier adds some persistent data that\n    // other modifiers need to use, but the modifier is run after the dependent\n    // one.\n\n    function runModifierEffects() {\n      state.orderedModifiers.forEach(function (_ref3) {\n        var name = _ref3.name,\n            _ref3$options = _ref3.options,\n            options = _ref3$options === void 0 ? {} : _ref3$options,\n            effect = _ref3.effect;\n\n        if (typeof effect === 'function') {\n          var cleanupFn = effect({\n            state: state,\n            name: name,\n            instance: instance,\n            options: options\n          });\n\n          var noopFn = function noopFn() {};\n\n          effectCleanupFns.push(cleanupFn || noopFn);\n        }\n      });\n    }\n\n    function cleanupModifierEffects() {\n      effectCleanupFns.forEach(function (fn) {\n        return fn();\n      });\n      effectCleanupFns = [];\n    }\n\n    return instance;\n  };\n}\nexport var createPopper = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules\n\nexport { detectOverflow };","export default function mergeByName(modifiers) {\n  var merged = modifiers.reduce(function (merged, current) {\n    var existing = merged[current.name];\n    merged[current.name] = existing ? Object.assign({}, existing, current, {\n      options: Object.assign({}, existing.options, current.options),\n      data: Object.assign({}, existing.data, current.data)\n    }) : current;\n    return merged;\n  }, {}); // IE11 does not support Object.values\n\n  return Object.keys(merged).map(function (key) {\n    return merged[key];\n  });\n}","import getWindow from \"../dom-utils/getWindow.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar passive = {\n  passive: true\n};\n\nfunction effect(_ref) {\n  var state = _ref.state,\n      instance = _ref.instance,\n      options = _ref.options;\n  var _options$scroll = options.scroll,\n      scroll = _options$scroll === void 0 ? true : _options$scroll,\n      _options$resize = options.resize,\n      resize = _options$resize === void 0 ? true : _options$resize;\n  var window = getWindow(state.elements.popper);\n  var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);\n\n  if (scroll) {\n    scrollParents.forEach(function (scrollParent) {\n      scrollParent.addEventListener('scroll', instance.update, passive);\n    });\n  }\n\n  if (resize) {\n    window.addEventListener('resize', instance.update, passive);\n  }\n\n  return function () {\n    if (scroll) {\n      scrollParents.forEach(function (scrollParent) {\n        scrollParent.removeEventListener('scroll', instance.update, passive);\n      });\n    }\n\n    if (resize) {\n      window.removeEventListener('resize', instance.update, passive);\n    }\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'eventListeners',\n  enabled: true,\n  phase: 'write',\n  fn: function fn() {},\n  effect: effect,\n  data: {}\n};","import { auto } from \"../enums.js\";\nexport default function getBasePlacement(placement) {\n  return placement.split('-')[0];\n}","export default function getVariation(placement) {\n  return placement.split('-')[1];\n}","export default function getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';\n}","import getBasePlacement from \"./getBasePlacement.js\";\nimport getVariation from \"./getVariation.js\";\nimport getMainAxisFromPlacement from \"./getMainAxisFromPlacement.js\";\nimport { top, right, bottom, left, start, end } from \"../enums.js\";\nexport default function computeOffsets(_ref) {\n  var reference = _ref.reference,\n      element = _ref.element,\n      placement = _ref.placement;\n  var basePlacement = placement ? getBasePlacement(placement) : null;\n  var variation = placement ? getVariation(placement) : null;\n  var commonX = reference.x + reference.width / 2 - element.width / 2;\n  var commonY = reference.y + reference.height / 2 - element.height / 2;\n  var offsets;\n\n  switch (basePlacement) {\n    case top:\n      offsets = {\n        x: commonX,\n        y: reference.y - element.height\n      };\n      break;\n\n    case bottom:\n      offsets = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case right:\n      offsets = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case left:\n      offsets = {\n        x: reference.x - element.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      offsets = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;\n\n  if (mainAxis != null) {\n    var len = mainAxis === 'y' ? 'height' : 'width';\n\n    switch (variation) {\n      case start:\n        offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);\n        break;\n\n      case end:\n        offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);\n        break;\n\n      default:\n    }\n  }\n\n  return offsets;\n}","import computeOffsets from \"../utils/computeOffsets.js\";\n\nfunction popperOffsets(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  // Offsets are the actual position the popper needs to have to be\n  // properly positioned near its reference element\n  // This is the most basic placement, and will be adjusted by\n  // the modifiers in the next step\n  state.modifiersData[name] = computeOffsets({\n    reference: state.rects.reference,\n    element: state.rects.popper,\n    strategy: 'absolute',\n    placement: state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'popperOffsets',\n  enabled: true,\n  phase: 'read',\n  fn: popperOffsets,\n  data: {}\n};","import { top, left, right, bottom, end } from \"../enums.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getWindow from \"../dom-utils/getWindow.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getComputedStyle from \"../dom-utils/getComputedStyle.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport { round } from \"../utils/math.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar unsetSides = {\n  top: 'auto',\n  right: 'auto',\n  bottom: 'auto',\n  left: 'auto'\n}; // Round the offsets to the nearest suitable subpixel based on the DPR.\n// Zooming can change the DPR, but it seems to report a value that will\n// cleanly divide the values into the appropriate subpixels.\n\nfunction roundOffsetsByDPR(_ref) {\n  var x = _ref.x,\n      y = _ref.y;\n  var win = window;\n  var dpr = win.devicePixelRatio || 1;\n  return {\n    x: round(x * dpr) / dpr || 0,\n    y: round(y * dpr) / dpr || 0\n  };\n}\n\nexport function mapToStyles(_ref2) {\n  var _Object$assign2;\n\n  var popper = _ref2.popper,\n      popperRect = _ref2.popperRect,\n      placement = _ref2.placement,\n      variation = _ref2.variation,\n      offsets = _ref2.offsets,\n      position = _ref2.position,\n      gpuAcceleration = _ref2.gpuAcceleration,\n      adaptive = _ref2.adaptive,\n      roundOffsets = _ref2.roundOffsets,\n      isFixed = _ref2.isFixed;\n  var _offsets$x = offsets.x,\n      x = _offsets$x === void 0 ? 0 : _offsets$x,\n      _offsets$y = offsets.y,\n      y = _offsets$y === void 0 ? 0 : _offsets$y;\n\n  var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref3.x;\n  y = _ref3.y;\n  var hasX = offsets.hasOwnProperty('x');\n  var hasY = offsets.hasOwnProperty('y');\n  var sideX = left;\n  var sideY = top;\n  var win = window;\n\n  if (adaptive) {\n    var offsetParent = getOffsetParent(popper);\n    var heightProp = 'clientHeight';\n    var widthProp = 'clientWidth';\n\n    if (offsetParent === getWindow(popper)) {\n      offsetParent = getDocumentElement(popper);\n\n      if (getComputedStyle(offsetParent).position !== 'static' && position === 'absolute') {\n        heightProp = 'scrollHeight';\n        widthProp = 'scrollWidth';\n      }\n    } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it\n\n\n    offsetParent = offsetParent;\n\n    if (placement === top || (placement === left || placement === right) && variation === end) {\n      sideY = bottom;\n      var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]\n      offsetParent[heightProp];\n      y -= offsetY - popperRect.height;\n      y *= gpuAcceleration ? 1 : -1;\n    }\n\n    if (placement === left || (placement === top || placement === bottom) && variation === end) {\n      sideX = right;\n      var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]\n      offsetParent[widthProp];\n      x -= offsetX - popperRect.width;\n      x *= gpuAcceleration ? 1 : -1;\n    }\n  }\n\n  var commonStyles = Object.assign({\n    position: position\n  }, adaptive && unsetSides);\n\n  var _ref4 = roundOffsets === true ? roundOffsetsByDPR({\n    x: x,\n    y: y\n  }) : {\n    x: x,\n    y: y\n  };\n\n  x = _ref4.x;\n  y = _ref4.y;\n\n  if (gpuAcceleration) {\n    var _Object$assign;\n\n    return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? \"translate(\" + x + \"px, \" + y + \"px)\" : \"translate3d(\" + x + \"px, \" + y + \"px, 0)\", _Object$assign));\n  }\n\n  return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + \"px\" : '', _Object$assign2[sideX] = hasX ? x + \"px\" : '', _Object$assign2.transform = '', _Object$assign2));\n}\n\nfunction computeStyles(_ref5) {\n  var state = _ref5.state,\n      options = _ref5.options;\n  var _options$gpuAccelerat = options.gpuAcceleration,\n      gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,\n      _options$adaptive = options.adaptive,\n      adaptive = _options$adaptive === void 0 ? true : _options$adaptive,\n      _options$roundOffsets = options.roundOffsets,\n      roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    var transitionProperty = getComputedStyle(state.elements.popper).transitionProperty || '';\n\n    if (adaptive && ['transform', 'top', 'right', 'bottom', 'left'].some(function (property) {\n      return transitionProperty.indexOf(property) >= 0;\n    })) {\n      console.warn(['Popper: Detected CSS transitions on at least one of the following', 'CSS properties: \"transform\", \"top\", \"right\", \"bottom\", \"left\".', '\\n\\n', 'Disable the \"computeStyles\" modifier\\'s `adaptive` option to allow', 'for smooth transitions, or remove these properties from the CSS', 'transition declaration on the popper element if only transitioning', 'opacity or background-color for example.', '\\n\\n', 'We recommend using the popper element as a wrapper around an inner', 'element that can have any CSS property transitioned for animations.'].join(' '));\n    }\n  }\n\n  var commonStyles = {\n    placement: getBasePlacement(state.placement),\n    variation: getVariation(state.placement),\n    popper: state.elements.popper,\n    popperRect: state.rects.popper,\n    gpuAcceleration: gpuAcceleration,\n    isFixed: state.options.strategy === 'fixed'\n  };\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.popperOffsets,\n      position: state.options.strategy,\n      adaptive: adaptive,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  if (state.modifiersData.arrow != null) {\n    state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {\n      offsets: state.modifiersData.arrow,\n      position: 'absolute',\n      adaptive: false,\n      roundOffsets: roundOffsets\n    })));\n  }\n\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-placement': state.placement\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'computeStyles',\n  enabled: true,\n  phase: 'beforeWrite',\n  fn: computeStyles,\n  data: {}\n};","import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport { top, left, right, placements } from \"../enums.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport function distanceAndSkiddingToXY(placement, rects, offset) {\n  var basePlacement = getBasePlacement(placement);\n  var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;\n\n  var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {\n    placement: placement\n  })) : offset,\n      skidding = _ref[0],\n      distance = _ref[1];\n\n  skidding = skidding || 0;\n  distance = (distance || 0) * invertDistance;\n  return [left, right].indexOf(basePlacement) >= 0 ? {\n    x: distance,\n    y: skidding\n  } : {\n    x: skidding,\n    y: distance\n  };\n}\n\nfunction offset(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options,\n      name = _ref2.name;\n  var _options$offset = options.offset,\n      offset = _options$offset === void 0 ? [0, 0] : _options$offset;\n  var data = placements.reduce(function (acc, placement) {\n    acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);\n    return acc;\n  }, {});\n  var _data$state$placement = data[state.placement],\n      x = _data$state$placement.x,\n      y = _data$state$placement.y;\n\n  if (state.modifiersData.popperOffsets != null) {\n    state.modifiersData.popperOffsets.x += x;\n    state.modifiersData.popperOffsets.y += y;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'offset',\n  enabled: true,\n  phase: 'main',\n  requires: ['popperOffsets'],\n  fn: offset\n};","var hash = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nexport default function getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}","var hash = {\n  start: 'end',\n  end: 'start'\n};\nexport default function getOppositeVariationPlacement(placement) {\n  return placement.replace(/start|end/g, function (matched) {\n    return hash[matched];\n  });\n}","import { isShadowRoot } from \"./instanceOf.js\";\nexport default function contains(parent, child) {\n  var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n      var next = child;\n\n      do {\n        if (next && parent.isSameNode(next)) {\n          return true;\n        } // $FlowFixMe[prop-missing]: need a better way to handle this...\n\n\n        next = next.parentNode || next.host;\n      } while (next);\n    } // Give up, the result is false\n\n\n  return false;\n}","export default function rectToClientRect(rect) {\n  return Object.assign({}, rect, {\n    left: rect.x,\n    top: rect.y,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  });\n}","import { viewport } from \"../enums.js\";\nimport getViewportRect from \"./getViewportRect.js\";\nimport getDocumentRect from \"./getDocumentRect.js\";\nimport listScrollParents from \"./listScrollParents.js\";\nimport getOffsetParent from \"./getOffsetParent.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport { isElement, isHTMLElement } from \"./instanceOf.js\";\nimport getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getParentNode from \"./getParentNode.js\";\nimport contains from \"./contains.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport rectToClientRect from \"../utils/rectToClientRect.js\";\nimport { max, min } from \"../utils/math.js\";\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  var rect = getBoundingClientRect(element, false, strategy === 'fixed');\n  rect.top = rect.top + element.clientTop;\n  rect.left = rect.left + element.clientLeft;\n  rect.bottom = rect.top + element.clientHeight;\n  rect.right = rect.left + element.clientWidth;\n  rect.width = element.clientWidth;\n  rect.height = element.clientHeight;\n  rect.x = rect.left;\n  rect.y = rect.top;\n  return rect;\n}\n\nfunction getClientRectFromMixedType(element, clippingParent, strategy) {\n  return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping parent\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingParents(element) {\n  var clippingParents = listScrollParents(getParentNode(element));\n  var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle(element).position) >= 0;\n  var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414\n\n\n  return clippingParents.filter(function (clippingParent) {\n    return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';\n  });\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping parents\n\n\nexport default function getClippingRect(element, boundary, rootBoundary, strategy) {\n  var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);\n  var clippingParents = [].concat(mainClippingParents, [rootBoundary]);\n  var firstClippingParent = clippingParents[0];\n  var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {\n    var rect = getClientRectFromMixedType(element, clippingParent, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromMixedType(element, firstClippingParent, strategy));\n  clippingRect.width = clippingRect.right - clippingRect.left;\n  clippingRect.height = clippingRect.bottom - clippingRect.top;\n  clippingRect.x = clippingRect.left;\n  clippingRect.y = clippingRect.top;\n  return clippingRect;\n}","import getWindow from \"./getWindow.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport isLayoutViewport from \"./isLayoutViewport.js\";\nexport default function getViewportRect(element, strategy) {\n  var win = getWindow(element);\n  var html = getDocumentElement(element);\n  var visualViewport = win.visualViewport;\n  var width = html.clientWidth;\n  var height = html.clientHeight;\n  var x = 0;\n  var y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    var layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x + getWindowScrollBarX(element),\n    y: y\n  };\n}","import getDocumentElement from \"./getDocumentElement.js\";\nimport getComputedStyle from \"./getComputedStyle.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getWindowScroll from \"./getWindowScroll.js\";\nimport { max } from \"../utils/math.js\"; // Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nexport default function getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  var html = getDocumentElement(element);\n  var winScroll = getWindowScroll(element);\n  var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  var x = -winScroll.scrollLeft + getWindowScrollBarX(element);\n  var y = -winScroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width: width,\n    height: height,\n    x: x,\n    y: y\n  };\n}","import getFreshSideObject from \"./getFreshSideObject.js\";\nexport default function mergePaddingObject(paddingObject) {\n  return Object.assign({}, getFreshSideObject(), paddingObject);\n}","export default function getFreshSideObject() {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  };\n}","export default function expandToHashMap(value, keys) {\n  return keys.reduce(function (hashMap, key) {\n    hashMap[key] = value;\n    return hashMap;\n  }, {});\n}","import getClippingRect from \"../dom-utils/getClippingRect.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport getBoundingClientRect from \"../dom-utils/getBoundingClientRect.js\";\nimport computeOffsets from \"./computeOffsets.js\";\nimport rectToClientRect from \"./rectToClientRect.js\";\nimport { clippingParents, reference, popper, bottom, top, right, basePlacements, viewport } from \"../enums.js\";\nimport { isElement } from \"../dom-utils/instanceOf.js\";\nimport mergePaddingObject from \"./mergePaddingObject.js\";\nimport expandToHashMap from \"./expandToHashMap.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport default function detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$placement = _options.placement,\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\n      _options$strategy = _options.strategy,\n      strategy = _options$strategy === void 0 ? state.strategy : _options$strategy,\n      _options$boundary = _options.boundary,\n      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,\n      _options$rootBoundary = _options.rootBoundary,\n      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,\n      _options$elementConte = _options.elementContext,\n      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,\n      _options$altBoundary = _options.altBoundary,\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n      _options$padding = _options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n  var altContext = elementContext === popper ? reference : popper;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);\n  var referenceClientRect = getBoundingClientRect(state.elements.reference);\n  var popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement: placement\n  });\n  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));\n  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}","import getOppositePlacement from \"../utils/getOppositePlacement.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getOppositeVariationPlacement from \"../utils/getOppositeVariationPlacement.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport computeAutoPlacement from \"../utils/computeAutoPlacement.js\";\nimport { bottom, top, start, right, left, auto } from \"../enums.js\";\nimport getVariation from \"../utils/getVariation.js\"; // eslint-disable-next-line import/no-unused-modules\n\nfunction getExpandedFallbackPlacements(placement) {\n  if (getBasePlacement(placement) === auto) {\n    return [];\n  }\n\n  var oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];\n}\n\nfunction flip(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n\n  if (state.modifiersData[name]._skip) {\n    return;\n  }\n\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,\n      specifiedFallbackPlacements = options.fallbackPlacements,\n      padding = options.padding,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      _options$flipVariatio = options.flipVariations,\n      flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,\n      allowedAutoPlacements = options.allowedAutoPlacements;\n  var preferredPlacement = state.options.placement;\n  var basePlacement = getBasePlacement(preferredPlacement);\n  var isBasePlacement = basePlacement === preferredPlacement;\n  var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));\n  var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {\n    return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding,\n      flipVariations: flipVariations,\n      allowedAutoPlacements: allowedAutoPlacements\n    }) : placement);\n  }, []);\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var checksMap = new Map();\n  var makeFallbackChecks = true;\n  var firstFittingPlacement = placements[0];\n\n  for (var i = 0; i < placements.length; i++) {\n    var placement = placements[i];\n\n    var _basePlacement = getBasePlacement(placement);\n\n    var isStartVariation = getVariation(placement) === start;\n    var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;\n    var len = isVertical ? 'width' : 'height';\n    var overflow = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      altBoundary: altBoundary,\n      padding: padding\n    });\n    var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;\n\n    if (referenceRect[len] > popperRect[len]) {\n      mainVariationSide = getOppositePlacement(mainVariationSide);\n    }\n\n    var altVariationSide = getOppositePlacement(mainVariationSide);\n    var checks = [];\n\n    if (checkMainAxis) {\n      checks.push(overflow[_basePlacement] <= 0);\n    }\n\n    if (checkAltAxis) {\n      checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);\n    }\n\n    if (checks.every(function (check) {\n      return check;\n    })) {\n      firstFittingPlacement = placement;\n      makeFallbackChecks = false;\n      break;\n    }\n\n    checksMap.set(placement, checks);\n  }\n\n  if (makeFallbackChecks) {\n    // `2` may be desired in some cases – research later\n    var numberOfChecks = flipVariations ? 3 : 1;\n\n    var _loop = function _loop(_i) {\n      var fittingPlacement = placements.find(function (placement) {\n        var checks = checksMap.get(placement);\n\n        if (checks) {\n          return checks.slice(0, _i).every(function (check) {\n            return check;\n          });\n        }\n      });\n\n      if (fittingPlacement) {\n        firstFittingPlacement = fittingPlacement;\n        return \"break\";\n      }\n    };\n\n    for (var _i = numberOfChecks; _i > 0; _i--) {\n      var _ret = _loop(_i);\n\n      if (_ret === \"break\") break;\n    }\n  }\n\n  if (state.placement !== firstFittingPlacement) {\n    state.modifiersData[name]._skip = true;\n    state.placement = firstFittingPlacement;\n    state.reset = true;\n  }\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'flip',\n  enabled: true,\n  phase: 'main',\n  fn: flip,\n  requiresIfExists: ['offset'],\n  data: {\n    _skip: false\n  }\n};","import getVariation from \"./getVariation.js\";\nimport { variationPlacements, basePlacements, placements as allPlacements } from \"../enums.js\";\nimport detectOverflow from \"./detectOverflow.js\";\nimport getBasePlacement from \"./getBasePlacement.js\";\nexport default function computeAutoPlacement(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      placement = _options.placement,\n      boundary = _options.boundary,\n      rootBoundary = _options.rootBoundary,\n      padding = _options.padding,\n      flipVariations = _options.flipVariations,\n      _options$allowedAutoP = _options.allowedAutoPlacements,\n      allowedAutoPlacements = _options$allowedAutoP === void 0 ? allPlacements : _options$allowedAutoP;\n  var variation = getVariation(placement);\n  var placements = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {\n    return getVariation(placement) === variation;\n  }) : basePlacements;\n  var allowedPlacements = placements.filter(function (placement) {\n    return allowedAutoPlacements.indexOf(placement) >= 0;\n  });\n\n  if (allowedPlacements.length === 0) {\n    allowedPlacements = placements;\n\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(['Popper: The `allowedAutoPlacements` option did not allow any', 'placements. Ensure the `placement` option matches the variation', 'of the allowed placements.', 'For example, \"auto\" cannot be used to allow \"bottom-start\".', 'Use \"auto-start\" instead.'].join(' '));\n    }\n  } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...\n\n\n  var overflows = allowedPlacements.reduce(function (acc, placement) {\n    acc[placement] = detectOverflow(state, {\n      placement: placement,\n      boundary: boundary,\n      rootBoundary: rootBoundary,\n      padding: padding\n    })[getBasePlacement(placement)];\n    return acc;\n  }, {});\n  return Object.keys(overflows).sort(function (a, b) {\n    return overflows[a] - overflows[b];\n  });\n}","import { max as mathMax, min as mathMin } from \"./math.js\";\nexport function within(min, value, max) {\n  return mathMax(min, mathMin(value, max));\n}\nexport function withinMaxClamp(min, value, max) {\n  var v = within(min, value, max);\n  return v > max ? max : v;\n}","import { top, left, right, bottom, start } from \"../enums.js\";\nimport getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport getAltAxis from \"../utils/getAltAxis.js\";\nimport { within, withinMaxClamp } from \"../utils/within.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\nimport getVariation from \"../utils/getVariation.js\";\nimport getFreshSideObject from \"../utils/getFreshSideObject.js\";\nimport { min as mathMin, max as mathMax } from \"../utils/math.js\";\n\nfunction preventOverflow(_ref) {\n  var state = _ref.state,\n      options = _ref.options,\n      name = _ref.name;\n  var _options$mainAxis = options.mainAxis,\n      checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,\n      _options$altAxis = options.altAxis,\n      checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,\n      boundary = options.boundary,\n      rootBoundary = options.rootBoundary,\n      altBoundary = options.altBoundary,\n      padding = options.padding,\n      _options$tether = options.tether,\n      tether = _options$tether === void 0 ? true : _options$tether,\n      _options$tetherOffset = options.tetherOffset,\n      tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;\n  var overflow = detectOverflow(state, {\n    boundary: boundary,\n    rootBoundary: rootBoundary,\n    padding: padding,\n    altBoundary: altBoundary\n  });\n  var basePlacement = getBasePlacement(state.placement);\n  var variation = getVariation(state.placement);\n  var isBasePlacement = !variation;\n  var mainAxis = getMainAxisFromPlacement(basePlacement);\n  var altAxis = getAltAxis(mainAxis);\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : tetherOffset;\n  var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {\n    mainAxis: tetherOffsetValue,\n    altAxis: tetherOffsetValue\n  } : Object.assign({\n    mainAxis: 0,\n    altAxis: 0\n  }, tetherOffsetValue);\n  var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;\n  var data = {\n    x: 0,\n    y: 0\n  };\n\n  if (!popperOffsets) {\n    return;\n  }\n\n  if (checkMainAxis) {\n    var _offsetModifierState$;\n\n    var mainSide = mainAxis === 'y' ? top : left;\n    var altSide = mainAxis === 'y' ? bottom : right;\n    var len = mainAxis === 'y' ? 'height' : 'width';\n    var offset = popperOffsets[mainAxis];\n    var min = offset + overflow[mainSide];\n    var max = offset - overflow[altSide];\n    var additive = tether ? -popperRect[len] / 2 : 0;\n    var minLen = variation === start ? referenceRect[len] : popperRect[len];\n    var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go\n    // outside the reference bounds\n\n    var arrowElement = state.elements.arrow;\n    var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {\n      width: 0,\n      height: 0\n    };\n    var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();\n    var arrowPaddingMin = arrowPaddingObject[mainSide];\n    var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want\n    // to include its full size in the calculation. If the reference is small\n    // and near the edge of a boundary, the popper can overflow even if the\n    // reference is not overflowing as well (e.g. virtual elements with no\n    // width or height)\n\n    var arrowLen = within(0, referenceRect[len], arrowRect[len]);\n    var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;\n    var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;\n    var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);\n    var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;\n    var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;\n    var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;\n    var tetherMax = offset + maxOffset - offsetModifierValue;\n    var preventedOffset = within(tether ? mathMin(min, tetherMin) : min, offset, tether ? mathMax(max, tetherMax) : max);\n    popperOffsets[mainAxis] = preventedOffset;\n    data[mainAxis] = preventedOffset - offset;\n  }\n\n  if (checkAltAxis) {\n    var _offsetModifierState$2;\n\n    var _mainSide = mainAxis === 'x' ? top : left;\n\n    var _altSide = mainAxis === 'x' ? bottom : right;\n\n    var _offset = popperOffsets[altAxis];\n\n    var _len = altAxis === 'y' ? 'height' : 'width';\n\n    var _min = _offset + overflow[_mainSide];\n\n    var _max = _offset - overflow[_altSide];\n\n    var isOriginSide = [top, left].indexOf(basePlacement) !== -1;\n\n    var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;\n\n    var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;\n\n    var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;\n\n    var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);\n\n    popperOffsets[altAxis] = _preventedOffset;\n    data[altAxis] = _preventedOffset - _offset;\n  }\n\n  state.modifiersData[name] = data;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'preventOverflow',\n  enabled: true,\n  phase: 'main',\n  fn: preventOverflow,\n  requiresIfExists: ['offset']\n};","export default function getAltAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}","import getBasePlacement from \"../utils/getBasePlacement.js\";\nimport getLayoutRect from \"../dom-utils/getLayoutRect.js\";\nimport contains from \"../dom-utils/contains.js\";\nimport getOffsetParent from \"../dom-utils/getOffsetParent.js\";\nimport getMainAxisFromPlacement from \"../utils/getMainAxisFromPlacement.js\";\nimport { within } from \"../utils/within.js\";\nimport mergePaddingObject from \"../utils/mergePaddingObject.js\";\nimport expandToHashMap from \"../utils/expandToHashMap.js\";\nimport { left, right, basePlacements, top, bottom } from \"../enums.js\";\nimport { isHTMLElement } from \"../dom-utils/instanceOf.js\"; // eslint-disable-next-line import/no-unused-modules\n\nvar toPaddingObject = function toPaddingObject(padding, state) {\n  padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {\n    placement: state.placement\n  })) : padding;\n  return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n};\n\nfunction arrow(_ref) {\n  var _state$modifiersData$;\n\n  var state = _ref.state,\n      name = _ref.name,\n      options = _ref.options;\n  var arrowElement = state.elements.arrow;\n  var popperOffsets = state.modifiersData.popperOffsets;\n  var basePlacement = getBasePlacement(state.placement);\n  var axis = getMainAxisFromPlacement(basePlacement);\n  var isVertical = [left, right].indexOf(basePlacement) >= 0;\n  var len = isVertical ? 'height' : 'width';\n\n  if (!arrowElement || !popperOffsets) {\n    return;\n  }\n\n  var paddingObject = toPaddingObject(options.padding, state);\n  var arrowRect = getLayoutRect(arrowElement);\n  var minProp = axis === 'y' ? top : left;\n  var maxProp = axis === 'y' ? bottom : right;\n  var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];\n  var startDiff = popperOffsets[axis] - state.rects.reference[axis];\n  var arrowOffsetParent = getOffsetParent(arrowElement);\n  var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n  var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is\n  // outside of the popper bounds\n\n  var min = paddingObject[minProp];\n  var max = clientSize - arrowRect[len] - paddingObject[maxProp];\n  var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;\n  var offset = within(min, center, max); // Prevents breaking syntax highlighting...\n\n  var axisProp = axis;\n  state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state,\n      options = _ref2.options;\n  var _options$element = options.element,\n      arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;\n\n  if (arrowElement == null) {\n    return;\n  } // CSS selector\n\n\n  if (typeof arrowElement === 'string') {\n    arrowElement = state.elements.popper.querySelector(arrowElement);\n\n    if (!arrowElement) {\n      return;\n    }\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!isHTMLElement(arrowElement)) {\n      console.error(['Popper: \"arrow\" element must be an HTMLElement (not an SVGElement).', 'To use an SVG arrow, wrap it in an HTMLElement that will be used as', 'the arrow.'].join(' '));\n    }\n  }\n\n  if (!contains(state.elements.popper, arrowElement)) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.error(['Popper: \"arrow\" modifier\\'s `element` must be a child of the popper', 'element.'].join(' '));\n    }\n\n    return;\n  }\n\n  state.elements.arrow = arrowElement;\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'arrow',\n  enabled: true,\n  phase: 'main',\n  fn: arrow,\n  effect: effect,\n  requires: ['popperOffsets'],\n  requiresIfExists: ['preventOverflow']\n};","import { top, bottom, left, right } from \"../enums.js\";\nimport detectOverflow from \"../utils/detectOverflow.js\";\n\nfunction getSideOffsets(overflow, rect, preventedOffsets) {\n  if (preventedOffsets === void 0) {\n    preventedOffsets = {\n      x: 0,\n      y: 0\n    };\n  }\n\n  return {\n    top: overflow.top - rect.height - preventedOffsets.y,\n    right: overflow.right - rect.width + preventedOffsets.x,\n    bottom: overflow.bottom - rect.height + preventedOffsets.y,\n    left: overflow.left - rect.width - preventedOffsets.x\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return [top, right, bottom, left].some(function (side) {\n    return overflow[side] >= 0;\n  });\n}\n\nfunction hide(_ref) {\n  var state = _ref.state,\n      name = _ref.name;\n  var referenceRect = state.rects.reference;\n  var popperRect = state.rects.popper;\n  var preventedOffsets = state.modifiersData.preventOverflow;\n  var referenceOverflow = detectOverflow(state, {\n    elementContext: 'reference'\n  });\n  var popperAltOverflow = detectOverflow(state, {\n    altBoundary: true\n  });\n  var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);\n  var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);\n  var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);\n  var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);\n  state.modifiersData[name] = {\n    referenceClippingOffsets: referenceClippingOffsets,\n    popperEscapeOffsets: popperEscapeOffsets,\n    isReferenceHidden: isReferenceHidden,\n    hasPopperEscaped: hasPopperEscaped\n  };\n  state.attributes.popper = Object.assign({}, state.attributes.popper, {\n    'data-popper-reference-hidden': isReferenceHidden,\n    'data-popper-escaped': hasPopperEscaped\n  });\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'hide',\n  enabled: true,\n  phase: 'main',\n  requiresIfExists: ['preventOverflow'],\n  fn: hide\n};","import { popperGenerator, detectOverflow } from \"./createPopper.js\";\nimport eventListeners from \"./modifiers/eventListeners.js\";\nimport popperOffsets from \"./modifiers/popperOffsets.js\";\nimport computeStyles from \"./modifiers/computeStyles.js\";\nimport applyStyles from \"./modifiers/applyStyles.js\";\nimport offset from \"./modifiers/offset.js\";\nimport flip from \"./modifiers/flip.js\";\nimport preventOverflow from \"./modifiers/preventOverflow.js\";\nimport arrow from \"./modifiers/arrow.js\";\nimport hide from \"./modifiers/hide.js\";\nvar defaultModifiers = [eventListeners, popperOffsets, computeStyles, applyStyles, offset, flip, preventOverflow, arrow, hide];\nvar createPopper = /*#__PURE__*/popperGenerator({\n  defaultModifiers: defaultModifiers\n}); // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper, popperGenerator, defaultModifiers, detectOverflow }; // eslint-disable-next-line import/no-unused-modules\n\nexport { createPopper as createPopperLite } from \"./popper-lite.js\"; // eslint-disable-next-line import/no-unused-modules\n\nexport * from \"./modifiers/index.js\";","import getNodeName from \"../dom-utils/getNodeName.js\";\nimport { isHTMLElement } from \"../dom-utils/instanceOf.js\"; // This modifier takes the styles prepared by the `computeStyles` modifier\n// and applies them to the HTMLElements such as popper and arrow\n\nfunction applyStyles(_ref) {\n  var state = _ref.state;\n  Object.keys(state.elements).forEach(function (name) {\n    var style = state.styles[name] || {};\n    var attributes = state.attributes[name] || {};\n    var element = state.elements[name]; // arrow is optional + virtual elements\n\n    if (!isHTMLElement(element) || !getNodeName(element)) {\n      return;\n    } // Flow doesn't support to extend this property, but it's the most\n    // effective way to apply styles to an HTMLElement\n    // $FlowFixMe[cannot-write]\n\n\n    Object.assign(element.style, style);\n    Object.keys(attributes).forEach(function (name) {\n      var value = attributes[name];\n\n      if (value === false) {\n        element.removeAttribute(name);\n      } else {\n        element.setAttribute(name, value === true ? '' : value);\n      }\n    });\n  });\n}\n\nfunction effect(_ref2) {\n  var state = _ref2.state;\n  var initialStyles = {\n    popper: {\n      position: state.options.strategy,\n      left: '0',\n      top: '0',\n      margin: '0'\n    },\n    arrow: {\n      position: 'absolute'\n    },\n    reference: {}\n  };\n  Object.assign(state.elements.popper.style, initialStyles.popper);\n  state.styles = initialStyles;\n\n  if (state.elements.arrow) {\n    Object.assign(state.elements.arrow.style, initialStyles.arrow);\n  }\n\n  return function () {\n    Object.keys(state.elements).forEach(function (name) {\n      var element = state.elements[name];\n      var attributes = state.attributes[name] || {};\n      var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them\n\n      var style = styleProperties.reduce(function (style, property) {\n        style[property] = '';\n        return style;\n      }, {}); // arrow is optional + virtual elements\n\n      if (!isHTMLElement(element) || !getNodeName(element)) {\n        return;\n      }\n\n      Object.assign(element.style, style);\n      Object.keys(attributes).forEach(function (attribute) {\n        element.removeAttribute(attribute);\n      });\n    });\n  };\n} // eslint-disable-next-line import/no-unused-modules\n\n\nexport default {\n  name: 'applyStyles',\n  enabled: true,\n  phase: 'write',\n  fn: applyStyles,\n  effect: effect,\n  requires: ['computeStyles']\n};","import * as React from 'react';\n\n/**\n * Takes an argument and if it's an array, returns the first item in the array,\n * otherwise returns the argument. Used for Preact compatibility.\n */\nexport var unwrapArray = function unwrapArray(arg) {\n  return Array.isArray(arg) ? arg[0] : arg;\n};\n/**\n * Takes a maybe-undefined function and arbitrary args and invokes the function\n * only if it is defined.\n */\n\nexport var safeInvoke = function safeInvoke(fn) {\n  if (typeof fn === 'function') {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return fn.apply(void 0, args);\n  }\n};\n/**\n * Sets a ref using either a ref callback or a ref object\n */\n\nexport var setRef = function setRef(ref, node) {\n  // if its a function call it\n  if (typeof ref === 'function') {\n    return safeInvoke(ref, node);\n  } // otherwise we should treat it as a ref object\n  else if (ref != null) {\n      ref.current = node;\n    }\n};\n/**\n * Simple ponyfill for Object.fromEntries\n */\n\nexport var fromEntries = function fromEntries(entries) {\n  return entries.reduce(function (acc, _ref) {\n    var key = _ref[0],\n        value = _ref[1];\n    acc[key] = value;\n    return acc;\n  }, {});\n};\n/**\n * Small wrapper around `useLayoutEffect` to get rid of the warning on SSR envs\n */\n\nexport var useIsomorphicLayoutEffect = typeof window !== 'undefined' && window.document && window.document.createElement ? React.useLayoutEffect : React.useEffect;","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { createPopper as defaultCreatePopper } from '@popperjs/core';\nimport isEqual from 'react-fast-compare';\nimport { fromEntries, useIsomorphicLayoutEffect } from './utils';\nvar EMPTY_MODIFIERS = [];\nexport var usePopper = function usePopper(referenceElement, popperElement, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var prevOptions = React.useRef(null);\n  var optionsWithDefaults = {\n    onFirstUpdate: options.onFirstUpdate,\n    placement: options.placement || 'bottom',\n    strategy: options.strategy || 'absolute',\n    modifiers: options.modifiers || EMPTY_MODIFIERS\n  };\n\n  var _React$useState = React.useState({\n    styles: {\n      popper: {\n        position: optionsWithDefaults.strategy,\n        left: '0',\n        top: '0'\n      },\n      arrow: {\n        position: 'absolute'\n      }\n    },\n    attributes: {}\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var updateStateModifier = React.useMemo(function () {\n    return {\n      name: 'updateState',\n      enabled: true,\n      phase: 'write',\n      fn: function fn(_ref) {\n        var state = _ref.state;\n        var elements = Object.keys(state.elements);\n        ReactDOM.flushSync(function () {\n          setState({\n            styles: fromEntries(elements.map(function (element) {\n              return [element, state.styles[element] || {}];\n            })),\n            attributes: fromEntries(elements.map(function (element) {\n              return [element, state.attributes[element]];\n            }))\n          });\n        });\n      },\n      requires: ['computeStyles']\n    };\n  }, []);\n  var popperOptions = React.useMemo(function () {\n    var newOptions = {\n      onFirstUpdate: optionsWithDefaults.onFirstUpdate,\n      placement: optionsWithDefaults.placement,\n      strategy: optionsWithDefaults.strategy,\n      modifiers: [].concat(optionsWithDefaults.modifiers, [updateStateModifier, {\n        name: 'applyStyles',\n        enabled: false\n      }])\n    };\n\n    if (isEqual(prevOptions.current, newOptions)) {\n      return prevOptions.current || newOptions;\n    } else {\n      prevOptions.current = newOptions;\n      return newOptions;\n    }\n  }, [optionsWithDefaults.onFirstUpdate, optionsWithDefaults.placement, optionsWithDefaults.strategy, optionsWithDefaults.modifiers, updateStateModifier]);\n  var popperInstanceRef = React.useRef();\n  useIsomorphicLayoutEffect(function () {\n    if (popperInstanceRef.current) {\n      popperInstanceRef.current.setOptions(popperOptions);\n    }\n  }, [popperOptions]);\n  useIsomorphicLayoutEffect(function () {\n    if (referenceElement == null || popperElement == null) {\n      return;\n    }\n\n    var createPopper = options.createPopper || defaultCreatePopper;\n    var popperInstance = createPopper(referenceElement, popperElement, popperOptions);\n    popperInstanceRef.current = popperInstance;\n    return function () {\n      popperInstance.destroy();\n      popperInstanceRef.current = null;\n    };\n  }, [referenceElement, popperElement, options.createPopper]);\n  return {\n    state: popperInstanceRef.current ? popperInstanceRef.current.state : null,\n    styles: state.styles,\n    attributes: state.attributes,\n    update: popperInstanceRef.current ? popperInstanceRef.current.update : null,\n    forceUpdate: popperInstanceRef.current ? popperInstanceRef.current.forceUpdate : null\n  };\n};","import * as React from \"react\";\nimport \"./PopperArrow.css\";\n\nexport interface PopperArrowProps {\n  style?: React.CSSProperties;\n  attributes?: React.HTMLAttributes<HTMLDivElement> | null;\n  arrowClassName?: string;\n}\n\nexport const PopperArrow = ({\n  style,\n  attributes,\n  arrowClassName,\n}: PopperArrowProps) => {\n  return (\n    <div\n      style={style}\n      {...attributes}\n      vkuiClass=\"PopperArrow\"\n      data-popper-arrow={true}\n    >\n      <svg\n        vkuiClass=\"PopperArrow__in\"\n        className={arrowClassName}\n        width=\"20\"\n        height=\"8\"\n        viewBox=\"0 0 20 8\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M10 0C13 0 15.9999 8 20 8H0C3.9749 8 7 0 10 0Z\"\n          fill=\"currentColor\"\n        />\n      </svg>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { usePopper, Modifier } from \"react-popper\";\nimport { AppRootPortal } from \"../AppRoot/AppRootPortal\";\nimport { PopperArrow } from \"../PopperArrow/PopperArrow\";\nimport { HasRef } from \"../../types\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport \"./Popper.css\";\n\nexport type Placement =\n  | \"auto\"\n  | \"auto-start\"\n  | \"auto-end\"\n  | \"top-start\"\n  | \"top-end\"\n  | \"bottom-start\"\n  | \"bottom-end\"\n  | \"right-start\"\n  | \"right-end\"\n  | \"left-start\"\n  | \"left-end\"\n  | \"top\"\n  | \"bottom\"\n  | \"left\"\n  | \"right\";\n\nexport interface PopperRenderContentProps {\n  className: string;\n}\n\nexport interface PopperCommonProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    HasRef<HTMLDivElement> {\n  /**\n   * По умолчанию компонент выберет наилучшее расположение сам. Но его можно задать извне с помощью этого свойства\n   */\n  placement?: Placement;\n  /**\n   * Отступ по вспомогательной оси\n   */\n  offsetSkidding?: number;\n  /**\n   * Отступ по главной оси\n   */\n  offsetDistance?: number;\n  /**\n   * Отображать ли стрелку, указывающую на якорный элемент\n   */\n  arrow?: boolean;\n  /**\n   * Стиль стрелки\n   */\n  arrowClassName?: string;\n  /**\n   * Выставлять ширину равной target элементу\n   */\n  sameWidth?: boolean;\n  forcePortal?: boolean;\n  onPlacementChange?: (data: { placement?: Placement }) => void;\n  /**\n   * Массив кастомных модификаторов для Popper (необходимо мемоизировать)\n   */\n  customModifiers?: Array<Modifier<string>>;\n  /**\n   * При передаче содержимого в `children`, он будет обёрнут во внутренний контейнер.\n   *\n   * Если хочется управлять этим контейнером, то используйте данную функцию.\n   *\n   * > ⚠️ Параметр `children` будет проигнорирован.\n   */\n  renderContent?(props: PopperRenderContentProps): React.ReactNode;\n}\n\nexport interface PopperProps extends PopperCommonProps {\n  targetRef: React.RefObject<HTMLElement>;\n}\n\nconst ARROW_PADDING = 8;\nconst ARROW_WIDTH = 20;\nconst ARROW_HEIGHT = 8;\n\nconst preventOverflowModifier: Modifier<string> = {\n  name: \"preventOverflow\",\n  options: {\n    mainAxis: false,\n  },\n};\n\nconst flipModifier: Modifier<string> = {\n  name: \"flip\",\n};\n\nconst arrowModifier: Modifier<string> = {\n  name: \"arrow\",\n  options: {\n    padding: ARROW_PADDING,\n  },\n};\n\nconst sameWidthModifier: Modifier<string> = {\n  name: \"sameWidth\",\n  enabled: true,\n  phase: \"beforeWrite\",\n  requires: [\"computeStyles\"],\n  fn: ({ state }) => {\n    state.styles.popper.width = `${state.rects.reference.width}px`;\n  },\n  effect: ({ state }) => {\n    state.elements.popper.style.width = `${\n      (state.elements.reference as HTMLElement).offsetWidth\n    }px`;\n  },\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Popper\n */\nexport const Popper = ({\n  targetRef,\n  children,\n  getRef,\n  placement = \"bottom-start\",\n  onPlacementChange,\n  arrow,\n  arrowClassName,\n  sameWidth,\n  offsetDistance = 8,\n  offsetSkidding = 0,\n  forcePortal = true,\n  style: compStyles,\n  customModifiers,\n  renderContent,\n  ...restProps\n}: PopperProps) => {\n  const [popperNode, setPopperNode] = React.useState<HTMLDivElement | null>(\n    null\n  );\n  const [smallTargetOffsetSkidding, setSmallTargetOffsetSkidding] =\n    React.useState(0);\n  const platform = usePlatform();\n\n  const setExternalRef = useExternRef<HTMLDivElement>(getRef, setPopperNode);\n\n  const modifiers = React.useMemo(() => {\n    const modifiers: Array<Modifier<string>> = [\n      preventOverflowModifier,\n      {\n        name: \"offset\",\n        options: {\n          offset: [\n            arrow ? offsetSkidding - smallTargetOffsetSkidding : offsetSkidding,\n            arrow ? offsetDistance + ARROW_HEIGHT : offsetDistance,\n          ],\n        },\n      },\n      flipModifier,\n    ];\n\n    if (arrow) {\n      modifiers.push(arrowModifier);\n    }\n\n    if (sameWidth) {\n      modifiers.push(sameWidthModifier);\n    }\n\n    if (customModifiers) {\n      modifiers.push(...customModifiers);\n    }\n    return modifiers;\n  }, [\n    arrow,\n    sameWidth,\n    smallTargetOffsetSkidding,\n    offsetSkidding,\n    offsetDistance,\n    customModifiers,\n  ]);\n\n  const { styles, state, attributes } = usePopper(\n    targetRef.current,\n    popperNode,\n    {\n      placement,\n      modifiers,\n    }\n  );\n\n  const resolvedPlacement = state?.placement;\n  const isEdgePlacement =\n    !!resolvedPlacement && resolvedPlacement.includes(\"-\"); // true, если поппер отрисован с краю\n\n  // Если поппер рисуется с краю, то нужно опционально сместить его в тех случаях, когда стрелка не дотягивается до\n  // таргета из-за маленьких размеров последнего\n  useIsomorphicLayoutEffect(() => {\n    if (arrow && isEdgePlacement) {\n      const placementDirection =\n        resolvedPlacement?.startsWith(\"bottom\") ||\n        resolvedPlacement?.startsWith(\"top\")\n          ? \"vertical\"\n          : \"horizontal\";\n\n      const arrowSize =\n        placementDirection === \"vertical\" ? ARROW_WIDTH : ARROW_HEIGHT;\n      const targetSize =\n        (placementDirection === \"vertical\"\n          ? targetRef.current?.offsetWidth\n          : targetRef.current?.offsetHeight) ?? 0;\n\n      if (targetSize < arrowSize + 2 * ARROW_PADDING) {\n        setSmallTargetOffsetSkidding(ARROW_PADDING + arrowSize / 2);\n      }\n    } else {\n      setSmallTargetOffsetSkidding(0);\n    }\n  }, [arrow, isEdgePlacement]);\n\n  React.useEffect(() => {\n    if (resolvedPlacement) {\n      onPlacementChange && onPlacementChange({ placement: resolvedPlacement });\n    }\n  }, [onPlacementChange, resolvedPlacement]);\n\n  const dropdown = (\n    <div\n      {...restProps}\n      {...attributes.popper}\n      vkuiClass={getClassName(\"Popper\", platform)}\n      ref={setExternalRef}\n      style={{\n        ...compStyles,\n        ...styles.popper,\n        minWidth: sameWidth ? targetRef.current?.scrollWidth : undefined,\n      }}\n    >\n      {arrow && (\n        <PopperArrow\n          attributes={attributes.arrow}\n          style={styles.arrow}\n          arrowClassName={arrowClassName}\n        />\n      )}\n      {renderContent ? (\n        renderContent({ className: \"Popper__content\" })\n      ) : (\n        <div vkuiClass=\"Popper__content\">{children}</div>\n      )}\n    </div>\n  );\n\n  return (\n    <AppRootPortal forcePortal={forcePortal} vkuiClass=\"PopperPortal\">\n      {dropdown}\n    </AppRootPortal>\n  );\n};\n","import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { useDOM } from \"../../lib/dom\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useEffectDev } from \"../../hooks/useEffectDev\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { isRefObject } from \"../../lib/isRefObject\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { Platform } from \"../../lib/platform\";\nimport { useEventListener } from \"../../hooks/useEventListener\";\nimport { SharedDropdownProps } from \"./types\";\nimport { FocusTrap } from \"../FocusTrap/FocusTrap\";\nimport { Popper } from \"../Popper/Popper\";\nimport \"./ActionSheet.css\";\n\nconst warn = warnOnce(\"ActionSheet\");\nfunction getEl(\n  ref: SharedDropdownProps[\"toggleRef\"]\n): Element | null | undefined {\n  return ref && \"current\" in ref ? ref.current : ref;\n}\n\nexport const ActionSheetDropdownDesktop = ({\n  children,\n  toggleRef,\n  closing,\n  popupDirection,\n  onClose,\n  className,\n  style,\n  ...restProps\n}: SharedDropdownProps) => {\n  const { document } = useDOM();\n  const platform = usePlatform();\n  const { sizeY } = useAdaptivity();\n  const elementRef = React.useRef<HTMLDivElement | null>(null);\n\n  useEffectDev(() => {\n    const toggleEl = getEl(toggleRef);\n    if (!toggleEl) {\n      warn(`Свойство \"toggleRef\" не передано`, \"error\");\n    }\n  }, [toggleRef]);\n\n  const isPopupDirectionTop = React.useMemo(\n    () =>\n      popupDirection === \"top\" ||\n      (typeof popupDirection === \"function\" &&\n        popupDirection(elementRef) === \"top\"),\n    [popupDirection, elementRef]\n  );\n\n  const bodyClickListener = useEventListener(\"click\", (e: MouseEvent) => {\n    const dropdownElement = elementRef?.current;\n    if (dropdownElement && !dropdownElement.contains(e.target as Node)) {\n      onClose?.();\n    }\n  });\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      bodyClickListener.add(document!.body);\n    });\n  }, [bodyClickListener, document]);\n\n  const onClick = React.useCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => e.stopPropagation(),\n    []\n  );\n\n  const targetRef = React.useMemo(() => {\n    if (isRefObject<SharedDropdownProps[\"toggleRef\"], HTMLElement>(toggleRef)) {\n      return toggleRef;\n    }\n\n    return { current: toggleRef as HTMLElement };\n  }, [toggleRef]);\n\n  return (\n    <Popper\n      targetRef={targetRef}\n      offsetDistance={0}\n      placement={isPopupDirectionTop ? \"top-end\" : \"bottom-end\"}\n      vkuiClass={classNames(\n        \"ActionSheet\",\n        platform === Platform.IOS && \"ActionSheet--ios\",\n        \"ActionSheet--desktop\",\n        `ActionSheet--sizeY-${sizeY}`\n      )}\n      className={className}\n      style={style}\n      getRef={elementRef}\n      forcePortal={false}\n    >\n      <FocusTrap onClose={onClose} {...restProps} onClick={onClick}>\n        {children}\n      </FocusTrap>\n    </Popper>\n  );\n};\n","import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { Platform } from \"../../lib/platform\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { SharedDropdownProps } from \"./types\";\nimport { FocusTrap } from \"../FocusTrap/FocusTrap\";\nimport \"./ActionSheet.css\";\n\nconst stopPropagation: React.MouseEventHandler = (e) => e.stopPropagation();\n\nexport const ActionSheetDropdown = ({\n  children,\n  closing,\n  // these 2 props are only omitted - ActionSheetDesktop compat\n  toggleRef,\n  popupDirection,\n  ...restProps\n}: SharedDropdownProps) => {\n  const { sizeY } = useAdaptivity();\n  const platform = usePlatform();\n\n  return (\n    <FocusTrap\n      {...restProps}\n      onClick={stopPropagation}\n      vkuiClass={classNames(\n        \"ActionSheet\",\n        platform === Platform.IOS && \"ActionSheet--ios\",\n        closing && \"ActionSheet--closing\",\n        `ActionSheet--sizeY-${sizeY}`\n      )}\n    >\n      {children}\n    </FocusTrap>\n  );\n};\n","import * as React from \"react\";\n\nexport type ActionType<T> = (event: React.MouseEvent<T>) => void;\n\nexport type ItemClickHandler<T extends Element = Element> = (\n  action: ActionType<T> | undefined,\n  immediateAction: ActionType<T> | undefined,\n  autoclose: boolean\n) => (event: React.MouseEvent) => void;\n\nexport type ActionSheetContextType<T extends Element = Element> = {\n  onItemClick?: ItemClickHandler<T>;\n  isDesktop?: boolean;\n};\n\nexport const ActionSheetContext = React.createContext<\n  ActionSheetContextType<any>\n>({});\n","import * as React from \"react\";\nimport { PopoutWrapper } from \"../PopoutWrapper/PopoutWrapper\";\nimport { IOS } from \"../../lib/platform\";\nimport { ActionSheetDropdownDesktop } from \"./ActionSheetDropdownDesktop\";\nimport { ActionSheetDropdown } from \"./ActionSheetDropdown\";\nimport { hasReactNode, noop } from \"../../lib/utils\";\nimport { ActionSheetContext, ItemClickHandler } from \"./ActionSheetContext\";\nimport { Footnote } from \"../Typography/Footnote/Footnote\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport { useAdaptivityIsDesktop } from \"../../hooks/useAdaptivity\";\nimport { useObjectMemo } from \"../../hooks/useObjectMemo\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { SharedDropdownProps, PopupDirection, ToggleRef } from \"./types\";\nimport { useScrollLock } from \"../AppRoot/ScrollContext\";\nimport \"./ActionSheet.css\";\n\nexport interface ActionSheetProps extends React.HTMLAttributes<HTMLDivElement> {\n  header?: React.ReactNode;\n  text?: React.ReactNode;\n  /**\n   * Закрыть попап по клику снаружи. В v5 будет обязательным.\n   */\n  onClose?: VoidFunction;\n  /**\n   * Элемент, рядом с которым вылезает попап на десктопе.\n   * Лучше передавать RefObject c current.\n   * В v5 будет обязательным.\n   */\n  toggleRef?: ToggleRef;\n  /**\n   * Направление на десктопе\n   */\n  popupDirection?: PopupDirection;\n  /**\n   * Только iOS. В v5 будет обязательным.\n   */\n  iosCloseItem?: React.ReactNode;\n}\n\nconst warn = warnOnce(\"ActionSheet\");\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ActionSheet\n */\nexport const ActionSheet = ({\n  children,\n  className,\n  header,\n  text,\n  style,\n  iosCloseItem,\n  popupDirection = \"bottom\",\n  ...restProps\n}: ActionSheetProps) => {\n  const platform = usePlatform();\n  const [closing, setClosing] = React.useState(false);\n  const onClose = () => setClosing(true);\n  const _action = React.useRef(noop);\n\n  const afterClose = () => {\n    restProps.onClose?.();\n    _action.current();\n    _action.current = noop;\n  };\n\n  if (process.env.NODE_ENV === \"development\" && !restProps.onClose) {\n    warn(\n      `Без свойства \"onClose\" нельзя закрыть ActionSheet по клику вне компонента`,\n      \"error\"\n    );\n  }\n\n  const isDesktop = useAdaptivityIsDesktop();\n\n  useScrollLock(!isDesktop);\n\n  let timeout = platform === IOS ? 300 : 200;\n\n  if (isDesktop) {\n    timeout = 0;\n  }\n\n  const fallbackTransitionFinish = useTimeout(afterClose, timeout);\n  React.useEffect(() => {\n    if (closing) {\n      fallbackTransitionFinish.set();\n    } else {\n      fallbackTransitionFinish.clear();\n    }\n  }, [closing, fallbackTransitionFinish]);\n\n  const onItemClick = React.useCallback<ItemClickHandler>(\n    (action, immediateAction, autoclose) => (event) => {\n      event.persist();\n      immediateAction && immediateAction(event);\n      if (autoclose) {\n        _action.current = () => action && action(event);\n        setClosing(true);\n      } else {\n        action && action(event);\n      }\n    },\n    []\n  );\n  const contextValue = useObjectMemo({ onItemClick, isDesktop });\n\n  const DropdownComponent = isDesktop\n    ? ActionSheetDropdownDesktop\n    : ActionSheetDropdown;\n\n  const actionSheet = (\n    <ActionSheetContext.Provider value={contextValue}>\n      <DropdownComponent\n        closing={closing}\n        timeout={timeout}\n        {...(restProps as Omit<SharedDropdownProps, \"closing\">)}\n        popupDirection={popupDirection}\n        onClose={onClose}\n        className={isDesktop ? className : undefined}\n        style={isDesktop ? style : undefined}\n      >\n        {(hasReactNode(header) || hasReactNode(text)) && (\n          <header vkuiClass=\"ActionSheet__header\">\n            {hasReactNode(header) && (\n              <Footnote weight=\"2\" vkuiClass=\"ActionSheet__title\">\n                {header}\n              </Footnote>\n            )}\n            {hasReactNode(text) && (\n              <Footnote vkuiClass=\"ActionSheet__text\">{text}</Footnote>\n            )}\n          </header>\n        )}\n        {children}\n        {platform === IOS && !isDesktop && iosCloseItem}\n      </DropdownComponent>\n    </ActionSheetContext.Provider>\n  );\n\n  if (isDesktop) {\n    return actionSheet;\n  }\n\n  return (\n    <PopoutWrapper\n      closing={closing}\n      alignY=\"bottom\"\n      className={className}\n      style={style}\n      onClick={onClose}\n      hasMask\n      fixed\n    >\n      {actionSheet}\n    </PopoutWrapper>\n  );\n};\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon24CheckCircleOn\", \"check_circle_on_24\", \"0 0 24 24\", '<symbol viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" id=\"check_circle_on_24\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12Zm6.207-14.793a1 1 0 0 0-1.414-1.414L10 14.586l-2.793-2.793a1 1 0 0 0-1.414 1.414l3.5 3.5a1 1 0 0 0 1.414 0l7.5-7.5Z\" fill=\"currentColor\" /></symbol>', 24, 24);\n","import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { Tappable } from \"../Tappable/Tappable\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { hasReactNode, noop } from \"../../lib/utils\";\nimport { Platform } from \"../../lib/platform\";\nimport { Subhead } from \"../Typography/Subhead/Subhead\";\nimport { Text } from \"../Typography/Text/Text\";\nimport { Icon24CheckCircleOn } from \"@vkontakte/icons\";\nimport {\n  ActionSheetContext,\n  ActionSheetContextType,\n} from \"../ActionSheet/ActionSheetContext\";\nimport { AdaptivityProps, withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport \"./ActionSheetItem.css\";\n\nexport interface ActionSheetItemProps\n  extends React.HTMLAttributes<HTMLElement>,\n    React.AnchorHTMLAttributes<HTMLElement>,\n    Pick<\n      React.InputHTMLAttributes<HTMLInputElement>,\n      \"name\" | \"checked\" | \"value\"\n    >,\n    AdaptivityProps {\n  mode?: \"default\" | \"destructive\" | \"cancel\";\n  before?: React.ReactNode;\n  meta?: React.ReactNode;\n  subtitle?: React.ReactNode;\n  autoclose?: boolean;\n  selectable?: boolean;\n  disabled?: boolean;\n  /**\n   * Все текстовые элементы при необходимости занимают несколько строк\n   */\n  multiline?: boolean;\n  /**\n   * Если autoclose === true, onClick будет вызван после завершения анимации скрытия и после вызова onClose.\n   * Из этого следует, что в объекте события значения полей типа `currentTarget` будут не определены.\n   * Если вам нужен объект события именно на момент клика, используйте `onImmediateClick`.\n   */\n  onClick?: React.MouseEventHandler<HTMLElement>;\n  onImmediateClick?: React.MouseEventHandler<HTMLElement>;\n}\n\nconst ActionSheetItemComponent = ({\n  children,\n  autoclose,\n  mode = \"default\",\n  meta,\n  subtitle,\n  before,\n  selectable,\n  value,\n  name,\n  checked,\n  defaultChecked,\n  onChange,\n  onClick,\n  sizeY,\n  onImmediateClick,\n  multiline = false,\n  ...restProps\n}: ActionSheetItemProps) => {\n  const platform = usePlatform();\n  const { onItemClick = () => noop, isDesktop } =\n    React.useContext<ActionSheetContextType<HTMLElement>>(ActionSheetContext);\n\n  let Component: React.ElementType = restProps.href ? \"a\" : \"div\";\n\n  if (selectable) {\n    Component = \"label\";\n  }\n\n  const isRich = hasReactNode(subtitle) || hasReactNode(meta) || selectable;\n  const isCentered =\n    !isRich && !hasReactNode(before) && platform === Platform.IOS;\n\n  return (\n    <Tappable\n      {...restProps}\n      onClick={\n        selectable\n          ? onClick\n          : onItemClick(onClick, onImmediateClick, Boolean(autoclose))\n      }\n      activeMode={\n        platform === Platform.IOS ? \"ActionSheetItem--active\" : undefined\n      }\n      vkuiClass={classNames(\n        \"ActionSheetItem\",\n        platform === Platform.IOS && \"ActionSheetItem--ios\",\n        `ActionSheetItem--${mode}`,\n        `ActionSheetItem--sizeY-${sizeY}`,\n        isRich && \"ActionSheetItem--rich\",\n        isDesktop && \"ActionSheetItem--desktop\"\n      )}\n      Component={Component}\n    >\n      {hasReactNode(before) && (\n        <div vkuiClass=\"ActionSheetItem__before\">{before}</div>\n      )}\n      <div\n        vkuiClass={classNames(\n          \"ActionSheetItem__container\",\n          !multiline && \"ActionSheetItem--ellipsis\"\n        )}\n      >\n        <div\n          vkuiClass={classNames(\n            \"ActionSheetItem__content\",\n            isCentered && \"ActionSheetItem--centered\"\n          )}\n        >\n          <Text\n            weight={mode === \"cancel\" ? \"2\" : undefined}\n            vkuiClass=\"ActionSheetItem__children\"\n          >\n            {children}\n          </Text>\n          {hasReactNode(meta) && (\n            <Text vkuiClass=\"ActionSheetItem__meta\">{meta}</Text>\n          )}\n        </div>\n        {hasReactNode(subtitle) && (\n          <Subhead vkuiClass=\"ActionSheetItem__subtitle\">{subtitle}</Subhead>\n        )}\n      </div>\n      {selectable && (\n        <div vkuiClass=\"ActionSheetItem__after\">\n          <input\n            type=\"radio\"\n            vkuiClass=\"ActionSheetItem__radio\"\n            name={name}\n            value={value}\n            onChange={onChange}\n            onClick={onItemClick(noop, noop, Boolean(autoclose))}\n            defaultChecked={defaultChecked}\n            checked={checked}\n            disabled={restProps.disabled}\n          />\n          <div vkuiClass=\"ActionSheetItem__marker\">\n            <Icon24CheckCircleOn />\n          </div>\n        </div>\n      )}\n    </Tappable>\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ActionSheetItem\n */\nexport const ActionSheetItem = withAdaptivity(ActionSheetItemComponent, {\n  sizeY: true,\n});\n","import {\n  ActionSheetItem,\n  ActionSheetItemProps,\n} from \"../ActionSheetItem/ActionSheetItem\";\n\nexport const ActionSheetDefaultIosCloseItem = (props: ActionSheetItemProps) => {\n  return (\n    <ActionSheetItem autoclose mode=\"cancel\" {...props}>\n      Отменить\n    </ActionSheetItem>\n  );\n};\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon24Cancel\", \"cancel_24\", \"0 0 24 24\", '<symbol xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 24 24\" id=\"cancel_24\"><path d=\"M7.536 6.264a.9.9 0 0 0-1.272 1.272L10.727 12l-4.463 4.464a.9.9 0 0 0 1.272 1.272L12 13.273l4.464 4.463a.9.9 0 1 0 1.272-1.272L13.273 12l4.463-4.464a.9.9 0 1 0-1.272-1.272L12 10.727 7.536 6.264Z\" /></symbol>', 24, 24);\n","export const Icon48DoneOutline = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    vkuiClass=\"Icon\"\n    width=\"48\"\n    height=\"48\"\n    viewBox=\"0 0 48 48\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      d=\"M9 24L19 34L39 14\"\n      stroke=\"currentColor\"\n      strokeWidth=\"3.5\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n","export const Icon48CancelCircle = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    vkuiClass=\"Icon\"\n    width=\"48\"\n    height=\"48\"\n    viewBox=\"0 0 48 48\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    {...props}\n  >\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M40 24c0 8.837-7.163 16-16 16S8 32.837 8 24 15.163 8 24 8s16 7.163 16 16Zm-10.08-4.33a1.125 1.125 0 0 0-1.59-1.59L24 22.409l-4.33-4.33a1.125 1.125 0 0 0-1.59 0l-.101.116a1.125 1.125 0 0 0 .1 1.476L22.41 24l-4.33 4.33a1.125 1.125 0 0 0 1.591 1.59L24 25.591l4.33 4.33c.439.439 1.151.439 1.59 0l.101-.116a1.125 1.125 0 0 0-.1-1.476L25.59 24l4.33-4.33Z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n);\n","import { Spinner, SpinnerProps } from \"../Spinner/Spinner\";\nimport { Icon24Cancel } from \"@vkontakte/icons\";\nimport { Icon48DoneOutline } from \"./Icon48DoneOutline\";\nimport { Icon48CancelCircle } from \"./Icon48CancelCircle\";\nimport { PopoutWrapper } from \"../PopoutWrapper/PopoutWrapper\";\nimport { useScrollLock } from \"../AppRoot/ScrollContext\";\nimport { classNames } from \"../../lib/classNames\";\nimport \"./ScreenSpinner.css\";\n\nexport interface ScreenSpinnerProps extends SpinnerProps {\n  state?: \"loading\" | \"cancelable\" | \"done\" | \"error\";\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ScreenSpinner\n */\nexport const ScreenSpinner = ({\n  style,\n  className,\n  state = \"loading\",\n  size = \"large\",\n  \"aria-label\": ariaLabel = \"Пожалуйста, подождите...\",\n  onClick,\n  ...restProps\n}: ScreenSpinnerProps) => {\n  const hideSpinner = state === \"done\" || state === \"error\";\n\n  const Icon = {\n    loading: () => null,\n    cancelable: Icon24Cancel,\n    done: Icon48DoneOutline,\n    error: Icon48CancelCircle,\n  }[state];\n\n  useScrollLock();\n\n  return (\n    <PopoutWrapper\n      hasMask={false}\n      vkuiClass={classNames(\n        \"ScreenSpinner\",\n        hideSpinner && \"ScreenSpinner--hideSpinner\",\n        `ScreenSpinner--state-${state}`\n      )}\n      className={className}\n      style={style}\n    >\n      <div vkuiClass=\"ScreenSpinner__container\" onClick={onClick}>\n        <Spinner\n          vkuiClass=\"ScreenSpinner__spinner\"\n          size={size}\n          aria-label={ariaLabel}\n          {...restProps}\n        />\n        <div vkuiClass=\"ScreenSpinner__icon\">\n          <Icon aria-hidden />\n        </div>\n      </div>\n    </PopoutWrapper>\n  );\n};\n","import * as React from \"react\";\nimport { classNames } from \"../../../lib/classNames\";\nimport { warnOnce } from \"../../../lib/warnOnce\";\nimport { HasComponent, HasRootRef } from \"../../../types\";\nimport \"./Paragraph.css\";\n\nexport interface ParagraphProps\n  extends React.AllHTMLAttributes<HTMLElement>,\n    HasRootRef<HTMLElement>,\n    HasComponent {\n  /**\n   * Задаёт начертание шрифта, отличное от стандартного.\n   */\n  weight?: \"1\" | \"2\" | \"3\";\n}\n\nconst warn = warnOnce(\"Paragraph\");\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Paragraph\n */\nexport const Paragraph = ({\n  Component = \"span\",\n  getRootRef,\n  weight,\n  children,\n  ...restProps\n}: ParagraphProps) => {\n  if (\n    process.env.NODE_ENV === \"development\" &&\n    typeof Component !== \"string\" &&\n    getRootRef\n  ) {\n    warn(\"getRootRef может использоваться только с элементами DOM\", \"error\");\n  }\n\n  return (\n    <Component\n      {...restProps}\n      ref={getRootRef}\n      vkuiClass={classNames(\"Paragraph\", weight && `Paragraph--w-${weight}`)}\n    >\n      {children}\n    </Component>\n  );\n};\n","import * as React from \"react\";\nimport { Touch, TouchEvent } from \"../Touch/Touch\";\nimport { classNames } from \"../../lib/classNames\";\nimport { HasPlatform } from \"../../types\";\nimport { ANDROID, IOS, VKCOM } from \"../../lib/platform\";\nimport { rubber } from \"../../lib/touch\";\nimport { withAdaptivity, ViewWidth } from \"../../hoc/withAdaptivity\";\nimport { Paragraph } from \"../Typography/Paragraph/Paragraph\";\nimport { Button } from \"../Button/Button\";\nimport { AppRootPortal } from \"../AppRoot/AppRootPortal\";\nimport { useWaitTransitionFinish } from \"../../hooks/useWaitTransitionFinish\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useTimeout } from \"../../hooks/useTimeout\";\nimport {\n  AdaptivityContextInterface,\n  AdaptivityProps,\n} from \"../AdaptivityProvider/AdaptivityContext\";\nimport \"./Snackbar.css\";\n\nexport interface SnackbarProps\n  extends React.HTMLAttributes<HTMLElement>,\n    HasPlatform,\n    AdaptivityProps {\n  /**\n   * Название кнопки действия в уведомлении\n   */\n  action?: React.ReactNode;\n\n  /**\n   * Будет вызвано при клике на кнопку действия\n   */\n  onActionClick?: (e: React.MouseEvent) => void;\n\n  /**\n   * Цветная иконка 24x24 пикселя\n   */\n  before?: React.ReactNode;\n  /**\n   * Контент в правой части, может быть `<Avatar size={32} />`\n   */\n  after?: React.ReactNode;\n  /**\n   * Варианты расположения кнопки\n   */\n  layout?: \"vertical\" | \"horizontal\";\n  /**\n   * Время в миллисекундах, через которое плашка скроется\n   */\n  duration?: number;\n  /**\n   * Обработчик закрытия уведомления\n   */\n  onClose: () => void;\n  /**\n   * Задает стиль снекбара\n   */\n  mode?: \"default\" | \"dark\";\n}\n\nconst SnackbarComponent = ({\n  children,\n  layout = \"horizontal\",\n  action,\n  before,\n  after,\n  viewWidth,\n  duration = 4000,\n  onActionClick,\n  onClose,\n  mode = \"default\",\n  ...restProps\n}: SnackbarProps & AdaptivityContextInterface) => {\n  const platform = usePlatform();\n\n  const { waitTransitionFinish } = useWaitTransitionFinish();\n\n  const [closing, setClosing] = React.useState(false);\n  const [touched, setTouched] = React.useState(false);\n\n  const shiftXPercentRef = React.useRef<number>(0);\n  const shiftXCurrentRef = React.useRef<number>(0);\n\n  const bodyElRef = React.useRef<HTMLDivElement | null>(null);\n  const innerElRef = React.useRef<HTMLDivElement | null>(null);\n\n  const animationFrameRef = React.useRef<ReturnType<\n    typeof requestAnimationFrame\n  > | null>(null);\n\n  const isDesktop = viewWidth >= ViewWidth.SMALL_TABLET;\n  const transitionFinishDurationFallback =\n    platform === ANDROID || platform === VKCOM ? 400 : 320;\n\n  const close = () => {\n    setClosing(true);\n    waitTransitionFinish(\n      innerElRef.current,\n      () => {\n        onClose();\n      },\n      transitionFinishDurationFallback\n    );\n  };\n\n  const handleActionClick: React.MouseEventHandler<HTMLElement> = (e) => {\n    close();\n\n    if (action && typeof onActionClick === \"function\") {\n      onActionClick(e);\n    }\n  };\n\n  const closeTimeout = useTimeout(close, duration);\n\n  const setBodyTransform = (percent: number) => {\n    if (animationFrameRef.current !== null) {\n      cancelAnimationFrame(animationFrameRef.current);\n    }\n    animationFrameRef.current = requestAnimationFrame(() => {\n      if (bodyElRef.current) {\n        bodyElRef.current.style.transform = `translate3d(${percent}%, 0, 0)`;\n      }\n    });\n  };\n\n  const onTouchStart = closeTimeout.clear;\n\n  const onTouchMoveX = (event: TouchEvent) => {\n    const { shiftX, originalEvent } = event;\n    originalEvent.preventDefault();\n\n    if (!touched) {\n      setTouched(true);\n    }\n\n    shiftXPercentRef.current =\n      (shiftX / (bodyElRef.current?.offsetWidth ?? 0)) * 100;\n    shiftXCurrentRef.current = rubber(\n      shiftXPercentRef.current,\n      72,\n      1.2,\n      platform === ANDROID || platform === VKCOM\n    );\n\n    setBodyTransform(shiftXCurrentRef.current);\n  };\n\n  const onTouchEnd = (e: TouchEvent) => {\n    let callback: VoidFunction | undefined;\n\n    if (touched) {\n      let shiftXCurrent = shiftXCurrentRef.current;\n      const expectTranslateY = (shiftXCurrent / e.duration) * 240 * 0.6;\n      shiftXCurrent = shiftXCurrent + expectTranslateY;\n\n      if (isDesktop && shiftXCurrent <= -50) {\n        closeTimeout.clear();\n        waitTransitionFinish(\n          bodyElRef.current,\n          () => {\n            onClose();\n          },\n          transitionFinishDurationFallback\n        );\n        setBodyTransform(-120);\n      } else if (!isDesktop && shiftXCurrent >= 50) {\n        closeTimeout.clear();\n        waitTransitionFinish(\n          bodyElRef.current,\n          () => {\n            onClose();\n          },\n          transitionFinishDurationFallback\n        );\n        setBodyTransform(120);\n      } else {\n        callback = () => {\n          closeTimeout.set();\n          setBodyTransform(0);\n        };\n      }\n    } else {\n      closeTimeout.set();\n    }\n\n    setTouched(false);\n    callback && requestAnimationFrame(callback);\n  };\n\n  React.useEffect(() => closeTimeout.set(), [closeTimeout]);\n\n  const resolvedLayout = after || isDesktop ? \"vertical\" : layout;\n\n  return (\n    <AppRootPortal>\n      <div\n        {...restProps}\n        vkuiClass={classNames(\n          \"Snackbar\",\n          platform === IOS && \"Snackbar--ios\",\n          `Snackbar--l-${resolvedLayout}`,\n          `Snackbar--${mode}`,\n          closing && \"Snackbar--closing\",\n          touched && \"Snackbar--touched\",\n          isDesktop && \"Snackbar--desktop\"\n        )}\n      >\n        <Touch\n          vkuiClass=\"Snackbar__in\"\n          getRootRef={innerElRef}\n          onStart={onTouchStart}\n          onMoveX={onTouchMoveX}\n          onEnd={onTouchEnd}\n        >\n          <div vkuiClass=\"Snackbar__body\" ref={bodyElRef}>\n            {before && <div vkuiClass=\"Snackbar__before\">{before}</div>}\n\n            <div vkuiClass=\"Snackbar__content\">\n              <Paragraph vkuiClass=\"Snackbar__content-text\">\n                {children}\n              </Paragraph>\n\n              {action && (\n                <Button\n                  align=\"left\"\n                  hasHover={false}\n                  mode=\"tertiary\"\n                  appearance={mode === \"dark\" ? \"overlay\" : \"accent\"}\n                  size=\"s\"\n                  vkuiClass=\"Snackbar__action\"\n                  onClick={handleActionClick}\n                >\n                  {action}\n                </Button>\n              )}\n            </div>\n\n            {after && <div vkuiClass=\"Snackbar__after\">{after}</div>}\n          </div>\n        </Touch>\n      </div>\n    </AppRootPortal>\n  );\n};\n\nSnackbarComponent.displayName = \"Snackbar\";\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Snackbar\n */\nexport const Snackbar = withAdaptivity(SnackbarComponent, {\n  viewWidth: true,\n});\n","export enum ModalType {\n  PAGE = \"page\",\n  CARD = \"card\",\n}\n\nexport type TranslateRange = [number, number];\n\nexport type ModalsState = { [index: string]: ModalsStateEntry };\n\nexport interface ModalElements {\n  modalElement?: HTMLElement | null;\n  innerElement?: HTMLElement | null;\n  headerElement?: HTMLElement | null;\n  contentElement?: HTMLElement | null;\n}\n\nexport interface ModalsStateEntry extends ModalElements {\n  id: string | null;\n  /**\n   * Событие начала открытия модалки.\n   */\n  onOpen?: VoidFunction;\n  /**\n   * Событие открытия модалки.\n   */\n  onOpened?: VoidFunction;\n  /**\n   * Событие начала закрытия модалки.\n   */\n  onClose?: VoidFunction;\n  /**\n   * Событие закрытия модалки.\n   */\n  onClosed?: VoidFunction;\n  type?: ModalType;\n\n  settlingHeight?: number;\n  dynamicContentHeight?: boolean;\n  expandable?: boolean;\n\n  /**\n   * Процент текущего сдвига модалки\n   */\n  translateY?: number;\n  /**\n   * Процент сдвига модалки в изначальном состоянии\n   */\n  translateYFrom?: number;\n  /**\n   * Процент сдвига модалки во время взаимодействия с ней (потянуть, чтобы открыть или закрыть)\n   */\n  translateYCurrent?: number;\n\n  touchStartContentScrollTop?: number;\n  touchMovePositive?: boolean | null;\n  touchShiftYPercent?: number;\n\n  expanded?: boolean;\n  collapsed?: boolean;\n  hidden?: boolean;\n\n  contentScrolled?: boolean;\n  contentScrollStopTimeout?: ReturnType<typeof setTimeout>;\n\n  expandedRange?: TranslateRange;\n  collapsedRange?: TranslateRange;\n  hiddenRange?: TranslateRange;\n}\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import * as React from \"react\";\nimport { SSRContext } from \"../lib/SSR\";\nimport { HasPlatform } from \"../types\";\nimport { ConfigProviderContext } from \"../components/ConfigProvider/ConfigProviderContext\";\n\nexport function withPlatform<T extends HasPlatform>(\n  Component: React.ComponentType<T>\n): React.FC<Omit<T, keyof HasPlatform>> {\n  function WithPlatform(props: Omit<T, keyof HasPlatform>) {\n    const ssrContext = React.useContext(SSRContext);\n    const { platform } = React.useContext(ConfigProviderContext);\n    return (\n      <Component {...(props as T)} platform={ssrContext.platform || platform} />\n    );\n  }\n  return WithPlatform;\n}\n","import * as React from \"react\";\n\nexport function withContext<T, X>(\n  Component: React.ComponentType<T>,\n  Ctx: React.Context<X>,\n  prop: string\n): React.FC<T> {\n  function WithContext(props: T) {\n    const context = React.useContext<X>(Ctx);\n\n    return <Component {...props} {...{ [prop]: context }} />;\n  }\n  return WithContext;\n}\n","import * as React from \"react\";\nimport { ModalsState, ModalsStateEntry, ModalType } from \"./types\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { noop, isFunction } from \"../../lib/utils\";\n\ninterface ModalTransitionState {\n  activeModal?: string | null;\n  enteringModal?: string | null;\n  exitingModal?: string | null;\n\n  history?: string[];\n  isBack?: boolean | null;\n}\n\nexport interface ModalTransitionProps extends ModalTransitionState {\n  onEnter: VoidFunction;\n  onEntered: (id: string | null) => void;\n  onExit: VoidFunction;\n  onExited: (id: string | null) => void;\n  getModalState: (id: string) => ModalsStateEntry;\n  delayEnter: boolean;\n}\n\nfunction getModals(children: React.ReactNode | React.ReactNode[]) {\n  return React.Children.toArray(children) as React.ReactElement[];\n}\n\nconst warn = warnOnce(\"ModalRoot\");\n\nexport function modalTransitionReducer(\n  state: ModalTransitionState,\n  action: {\n    type: \"setActive\" | \"entered\" | \"exited\" | \"inited\";\n    id: string | null;\n  }\n): ModalTransitionState {\n  if (action.type === \"setActive\" && action.id !== state.activeModal) {\n    const nextModal = action.id;\n    // preserve exiting modal if switching mid-transition\n    const prevModal = state.exitingModal || state.activeModal;\n    let history = state.history ? [...state.history] : [];\n    const isBack = Boolean(nextModal && history.includes(nextModal));\n\n    if (nextModal === null) {\n      history = [];\n    } else if (isBack) {\n      history = history.splice(0, history.indexOf(nextModal) + 1);\n    } else {\n      history.push(nextModal);\n    }\n\n    return {\n      activeModal: nextModal,\n      // not entering yet\n      enteringModal: null,\n      exitingModal: prevModal,\n      history,\n      isBack,\n    };\n  }\n  if (action.type === \"entered\" && action.id === state.enteringModal) {\n    return { ...state, enteringModal: null };\n  }\n  if (action.type === \"exited\" && action.id === state.exitingModal) {\n    return { ...state, exitingModal: null };\n  }\n  if (action.type === \"inited\" && action.id === state.activeModal) {\n    return { ...state, enteringModal: action.id };\n  }\n  return state;\n}\n\n/**\n * Реализует переход модалок. При смене activeModal m1 -> m2:\n * 1. activeModal: m1, exitingModal: null, enteringModal: null, триггер перехода\n * 2. activeModal: m2, exitingModal: m1, enteringModal: null, рендерим m2 чтобы прошел init, начинаем анимацию выхода\n * одновременный переход между ModalPage:\n *   3a. activeModal: m2, exitingModal: m1, enteringModal: m2\n *   4a. exitingModal и enteringModal переходят в null в порядке завершения анимации\n * ИЛИ дожидаемся скрытия ModalCard\n *   3b. activeModal: m2, exitingModal: null, enteringModal: m2\n *   4b. enteringModal переходит в null после завершения анимации\n * 5. activeModal: m2, exitingModal: null, enteringModal: null, переход закончен\n */\nexport function useModalManager(\n  activeModal: string | null | undefined,\n  children: React.ReactNode | React.ReactNode[],\n  onOpen: (id: string) => void = noop,\n  onOpened: (id: string) => void = noop,\n  onClose: (id: string) => void = noop,\n  onClosed: (id: string) => void = noop,\n  initModal: (state: ModalsStateEntry) => void = noop\n): ModalTransitionProps {\n  const modalsState = React.useRef<ModalsState>({}).current;\n  getModals(children).forEach((Modal) => {\n    const modalProps = Modal.props;\n    const id = getNavId(modalProps, warn);\n    const state: ModalsStateEntry = (id !== undefined && modalsState[id]) || {\n      id: id ?? null,\n    };\n\n    state.onOpen = Modal.props.onOpen;\n    state.onOpened = Modal.props.onOpened;\n    state.onClose = Modal.props.onClose;\n    state.onClosed = Modal.props.onClosed;\n    state.dynamicContentHeight = !!modalProps.dynamicContentHeight;\n    // ModalPage props\n    if (typeof modalProps.settlingHeight === \"number\") {\n      state.settlingHeight = modalProps.settlingHeight;\n    }\n\n    if (state.id !== null) {\n      modalsState[state.id] = state;\n    }\n  });\n\n  const isMissing = activeModal && !modalsState[activeModal];\n  const safeActiveModal = isMissing ? null : activeModal;\n  const [transitionState, dispatchTransition] = React.useReducer(\n    modalTransitionReducer,\n    {\n      activeModal: safeActiveModal,\n      enteringModal: null,\n      exitingModal: null,\n      history: safeActiveModal ? [safeActiveModal] : [],\n      isBack: false,\n    }\n  );\n\n  // Map props to state, render activeModal for init\n  useIsomorphicLayoutEffect(() => {\n    // ignore non-existent activeModal\n    if (process.env.NODE_ENV === \"development\" && isMissing) {\n      warn(\n        `Переход невозможен - модальное окно (страница) ${activeModal} не существует`,\n        \"error\"\n      );\n    }\n    dispatchTransition({ type: \"setActive\", id: safeActiveModal ?? null });\n  }, [activeModal]);\n\n  // Init activeModal & set enteringModal\n  useIsomorphicLayoutEffect(() => {\n    if (transitionState.activeModal) {\n      initModal(modalsState[transitionState.activeModal]);\n      dispatchTransition({ type: \"inited\", id: transitionState.activeModal });\n    }\n  }, [transitionState.activeModal]);\n\n  const isCard = (id: string | null | undefined) =>\n    id != null && modalsState[id]?.type === ModalType.CARD;\n  const onEntered = React.useCallback(\n    (id: string | null) => {\n      if (id) {\n        const modalState = modalsState[id];\n\n        if (isFunction(modalState.onOpened)) {\n          modalState.onOpened();\n        } else if (isFunction(onOpened)) {\n          onOpened(id);\n        }\n      }\n\n      dispatchTransition({ type: \"entered\", id });\n    },\n    [modalsState, onOpened]\n  );\n  const onExited = React.useCallback(\n    (id: string | null) => {\n      if (id) {\n        const modalState = modalsState[id];\n\n        if (isFunction(modalState.onClosed)) {\n          modalState.onClosed();\n        } else if (isFunction(onClosed)) {\n          onClosed(id);\n        }\n      }\n\n      dispatchTransition({ type: \"exited\", id });\n    },\n    [modalsState, onClosed]\n  );\n  const delayEnter = Boolean(\n    transitionState.exitingModal &&\n      (isCard(activeModal) || isCard(transitionState.exitingModal))\n  );\n  const getModalState = React.useCallback(\n    (id: string) => modalsState[id],\n    [modalsState]\n  );\n\n  function onEnter() {\n    const modalState =\n      transitionState.activeModal && modalsState[transitionState.activeModal];\n    if (modalState) {\n      if (isFunction(modalState.onOpen)) {\n        modalState.onOpen();\n      } else if (isFunction(onOpen)) {\n        onOpen(modalState.id);\n      }\n    }\n  }\n\n  function onExit() {\n    const modalState =\n      transitionState.activeModal && modalsState[transitionState.activeModal];\n    if (modalState) {\n      if (isFunction(modalState.onClose)) {\n        modalState.onClose();\n      } else if (isFunction(onClose)) {\n        onClose(modalState.id);\n      }\n    }\n  }\n\n  return {\n    onEnter,\n    onEntered,\n    onExit,\n    onExited,\n    ...transitionState,\n    delayEnter,\n    getModalState,\n  };\n}\n\nexport function withModalManager(\n  initModal: (a: ModalsStateEntry) => void = noop\n) {\n  return function <Props extends ModalTransitionProps>(\n    Wrapped: React.ComponentType<Props>\n  ): React.ComponentType<\n    Omit<Props, keyof ModalTransitionProps> & {\n      activeModal?: string | null;\n      children?: React.ReactNode;\n    }\n  > {\n    return function WithModalManager(props) {\n      const transitionManager = useModalManager(\n        props.activeModal,\n        props.children,\n        (props as any).onOpen,\n        (props as any).onOpened,\n        (props as any).onClose,\n        (props as any).onClosed,\n        initModal\n      );\n      return <Wrapped {...(props as any)} {...transitionManager} />;\n    };\n  };\n}\n","import * as React from \"react\";\nimport { Touch, TouchEvent } from \"../Touch/Touch\";\nimport TouchRootContext from \"../Touch/TouchContext\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { setTransformStyle } from \"../../lib/styles\";\nimport { rubber } from \"../../lib/touch\";\nimport { ANDROID, IOS, VKCOM } from \"../../lib/platform\";\nimport { transitionEvent } from \"../../lib/supportEvents\";\nimport { HasPlatform } from \"../../types\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport { withContext } from \"../../hoc/withContext\";\nimport {\n  ModalRootContext,\n  ModalRootContextInterface,\n} from \"./ModalRootContext\";\nimport {\n  ConfigProviderContext,\n  ConfigProviderContextInterface,\n  WebviewType,\n} from \"../ConfigProvider/ConfigProviderContext\";\nimport { ModalsStateEntry, ModalType, TranslateRange } from \"./types\";\nimport { MODAL_PAGE_DEFAULT_PERCENT_HEIGHT } from \"./constants\";\nimport { DOMProps, withDOM } from \"../../lib/dom\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { FocusTrap } from \"../FocusTrap/FocusTrap\";\nimport { ModalTransitionProps, withModalManager } from \"./useModalManager\";\nimport \"./ModalRoot.css\";\n\nconst warn = warnOnce(\"ModalRoot\");\nconst IS_DEV = process.env.NODE_ENV === \"development\";\n\nfunction numberInRange(number: number, range: TranslateRange | undefined) {\n  if (!range) {\n    return false;\n  }\n  return number >= range[0] && number <= range[1];\n}\n\nfunction rangeTranslate(number: number) {\n  return Math.max(0, Math.min(98, number));\n}\n\nexport interface ModalRootProps extends HasPlatform {\n  activeModal?: string | null;\n\n  /**\n   * Будет вызвано при начале открытия активной модалки с её id\n   */\n  onOpen?(modalId: string): void;\n\n  /**\n   * Будет вызвано при окончательном открытии активной модалки с её id\n   */\n  onOpened?(modalId: string): void;\n\n  /**\n   * Будет вызвано при начале закрытия активной модалки с её id\n   */\n  onClose?(modalId: string): void;\n\n  /**\n   * Будет вызвано при окончательном закрытии активной модалки с её id\n   */\n  onClosed?(modalId: string): void;\n\n  /**\n   * @ignore\n   */\n  configProvider?: ConfigProviderContextInterface;\n  children?: React.ReactNode;\n}\n\ninterface ModalRootState {\n  touchDown?: boolean;\n  dragging?: boolean;\n}\n\nclass ModalRootTouchComponent extends React.Component<\n  ModalRootProps & DOMProps & ModalTransitionProps,\n  ModalRootState\n> {\n  constructor(props: ModalRootProps & ModalTransitionProps) {\n    super(props);\n    this.state = {\n      touchDown: false,\n      dragging: false,\n    };\n\n    this.maskElementRef = React.createRef();\n\n    this.modalRootContext = {\n      updateModalHeight: this.updateModalHeight,\n      registerModal: ({ id, ...data }) =>\n        Object.assign(this.getModalState(id), data),\n      onClose: () => this.props.onExit(),\n      isInsideModal: true,\n    };\n\n    this.frameIds = {};\n  }\n\n  private documentScrolling = false;\n  private readonly maskElementRef: React.RefObject<HTMLDivElement>;\n  private readonly viewportRef = React.createRef<HTMLDivElement>();\n  private maskAnimationFrame: number | undefined = undefined;\n  private readonly modalRootContext: ModalRootContextInterface;\n  private readonly frameIds: {\n    [index: string]: number;\n  };\n  private restoreFocusTo: HTMLElement | undefined | null = undefined;\n\n  get timeout(): number {\n    return this.props.platform === ANDROID || this.props.platform === VKCOM\n      ? 320\n      : 400;\n  }\n\n  get document() {\n    return this.props.document;\n  }\n\n  get window() {\n    return this.props.window;\n  }\n\n  getModalState(id: string | undefined | null) {\n    if (!id) {\n      return undefined;\n    }\n    return this.props.getModalState(id);\n  }\n\n  getModals() {\n    return React.Children.toArray(this.props.children) as React.ReactElement[];\n  }\n\n  componentDidMount() {\n    // Отслеживаем изменение размеров viewport (Необходимо для iOS)\n    if (this.props.platform === IOS) {\n      this.window?.addEventListener(\"resize\", this.updateModalTranslate, false);\n    }\n  }\n\n  componentWillUnmount() {\n    this.toggleDocumentScrolling(true);\n    this.window!.removeEventListener(\n      \"resize\",\n      this.updateModalTranslate,\n      false\n    );\n  }\n\n  componentDidUpdate(prevProps: ModalRootProps & ModalTransitionProps) {\n    // transition phase 2: animate exiting modal\n    if (\n      this.props.exitingModal &&\n      this.props.exitingModal !== prevProps.exitingModal\n    ) {\n      this.closeModal(this.props.exitingModal);\n    }\n\n    // transition phase 3: animate entering modal\n    if (\n      this.props.enteringModal &&\n      this.props.enteringModal !== prevProps.enteringModal\n    ) {\n      const { enteringModal } = this.props;\n      const enteringState = this.getModalState(enteringModal);\n      this.props.onEnter();\n      this.waitTransitionFinish(enteringState, () => {\n        if (enteringState?.innerElement) {\n          enteringState.innerElement.style.transitionDelay = \"\";\n        }\n        this.props.onEntered(enteringModal);\n      });\n\n      if (enteringState?.innerElement) {\n        enteringState.innerElement.style.transitionDelay = this.props.delayEnter\n          ? `${this.timeout}ms`\n          : \"\";\n        this.animateTranslate(enteringState, enteringState.translateY);\n      }\n    }\n\n    // focus restoration\n    if (this.props.activeModal && !prevProps.activeModal) {\n      this.restoreFocusTo = this.document!.activeElement as HTMLElement;\n    }\n    if (\n      !this.props.activeModal &&\n      !this.props.exitingModal &&\n      this.restoreFocusTo\n    ) {\n      this.restoreFocusTo.focus();\n      this.restoreFocusTo = null;\n    }\n\n    this.toggleDocumentScrolling(\n      !this.props.activeModal && !this.props.exitingModal\n    );\n  }\n\n  /* Отключает скролл документа */\n  toggleDocumentScrolling(enabled: boolean) {\n    if (this.documentScrolling === enabled) {\n      return;\n    }\n    this.documentScrolling = enabled;\n\n    if (enabled) {\n      // Здесь нужен последний аргумент с такими же параметрами, потому что\n      // некоторые браузеры на странных вендорах типа Meizu не удаляют обработчик.\n      // https://github.com/VKCOM/VKUI/issues/444\n      this.window!.removeEventListener(\"touchmove\", this.preventTouch, {\n        // @ts-ignore (В интерфейсе EventListenerOptions нет поля passive)\n        passive: false,\n      });\n    } else {\n      this.window!.addEventListener(\"touchmove\", this.preventTouch, {\n        passive: false,\n      });\n    }\n  }\n\n  preventTouch = (event: any) => {\n    if (!event) {\n      return false;\n    }\n    while (event.originalEvent) {\n      event = event.originalEvent;\n    }\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n    return false;\n  };\n\n  updateModalTranslate = () => {\n    const modalState = this.getModalState(this.props.activeModal);\n    modalState && this.animateTranslate(modalState, modalState.translateY);\n  };\n\n  checkPageContentHeight() {\n    const modalState = this.getModalState(this.props.activeModal);\n\n    if (modalState?.type === ModalType.PAGE && modalState?.modalElement) {\n      const prevModalState = { ...modalState };\n      initPageModal(modalState);\n      const currentModalState = { ...modalState };\n\n      let needAnimate = false;\n\n      if (prevModalState.expandable === currentModalState.expandable) {\n        if (\n          prevModalState.translateYFrom !== currentModalState.translateYFrom\n        ) {\n          needAnimate = true;\n        }\n      } else {\n        needAnimate = true;\n      }\n\n      if (needAnimate) {\n        this.animateTranslate(modalState, modalState.translateY);\n      }\n    }\n  }\n\n  updateModalHeight = () => {\n    const modalState = this.getModalState(this.props.activeModal);\n\n    if (\n      modalState &&\n      modalState.type === ModalType.PAGE &&\n      modalState.dynamicContentHeight\n    ) {\n      if (this.props.enteringModal) {\n        this.waitTransitionFinish(modalState, () => {\n          requestAnimationFrame(() => this.checkPageContentHeight());\n        });\n      } else {\n        requestAnimationFrame(() => this.checkPageContentHeight());\n      }\n    }\n  };\n\n  closeModal(id: string) {\n    // Сбрасываем состояния, которые могут помешать закрытию модального окна\n    this.setState({ touchDown: false });\n\n    const prevModalState = this.getModalState(id);\n\n    if (!prevModalState) {\n      id &&\n        warn(\n          `closeActiveModal: модальное окно (страница) ${id} не существует`,\n          \"error\"\n        );\n      return;\n    }\n\n    const nextModalState = this.getModalState(this.props.activeModal);\n    const nextIsPage =\n      !!nextModalState && nextModalState.type === ModalType.PAGE;\n\n    const prevIsPage =\n      !!prevModalState && prevModalState.type === ModalType.PAGE;\n    this.waitTransitionFinish(prevModalState, () => this.props.onExited(id));\n    const exitTranslate =\n      prevIsPage &&\n      nextIsPage &&\n      (prevModalState.translateY ?? 0) <=\n        (nextModalState?.translateYFrom ?? 0) &&\n      !this.props.isBack\n        ? (nextModalState?.translateYFrom ?? 0) + 10\n        : 100;\n    this.animateTranslate(prevModalState, exitTranslate);\n\n    if (!nextModalState) {\n      // NOTE: was only for clean exit\n      this.setMaskOpacity(prevModalState, 0);\n    }\n  }\n\n  onTouchMove = (e: TouchEvent) => {\n    if (this.props.exitingModal) {\n      return;\n    }\n    const modalState = this.getModalState(this.props.activeModal);\n    if (!modalState) {\n      return;\n    }\n\n    if (modalState.type === ModalType.PAGE) {\n      return this.onPageTouchMove(e, modalState);\n    }\n\n    if (modalState.type === ModalType.CARD) {\n      return this.onCardTouchMove(e, modalState);\n    }\n  };\n\n  onPageTouchMove(event: TouchEvent, modalState: ModalsStateEntry) {\n    const { shiftY, originalEvent } = event;\n    const target = originalEvent.target as HTMLElement;\n\n    if (!event.isY) {\n      if (this.viewportRef.current?.contains(target)) {\n        originalEvent.preventDefault();\n      }\n      return;\n    }\n\n    if (!modalState.innerElement?.contains(target)) {\n      return originalEvent.preventDefault();\n    }\n\n    originalEvent.stopPropagation();\n\n    const { expandable, contentScrolled, collapsed, expanded } = modalState;\n\n    if (!this.state.touchDown) {\n      modalState.touchStartContentScrollTop =\n        modalState.contentElement?.scrollTop ?? 0;\n      this.setState({ touchDown: true });\n    }\n\n    if (contentScrolled) {\n      return;\n    }\n\n    if (modalState.touchMovePositive === null) {\n      modalState.touchMovePositive = shiftY > 0;\n    }\n\n    if (\n      !modalState.expandable ||\n      collapsed ||\n      (expanded &&\n        modalState.touchMovePositive &&\n        modalState.touchStartContentScrollTop === 0) ||\n      modalState.headerElement?.contains(target)\n    ) {\n      originalEvent.preventDefault();\n\n      if ((!expandable && shiftY < 0) || !this.window) {\n        return;\n      }\n\n      !this.state.dragging && this.setState({ dragging: true });\n\n      const shiftYPercent = (shiftY / this.window.innerHeight) * 100;\n      const shiftYCurrent = rubber(\n        shiftYPercent,\n        72,\n        0.8,\n        this.props.platform === ANDROID || this.props.platform === VKCOM\n      );\n\n      modalState.touchShiftYPercent = shiftYPercent;\n      modalState.translateYCurrent = rangeTranslate(\n        (modalState.translateY ?? 0) + shiftYCurrent\n      );\n\n      this.animateTranslate(modalState, modalState.translateYCurrent);\n      this.setMaskOpacity(modalState);\n    }\n  }\n\n  onCardTouchMove(event: TouchEvent, modalState: ModalsStateEntry) {\n    const { originalEvent, shiftY } = event;\n    const target = originalEvent.target as HTMLElement;\n    if (modalState.innerElement?.contains(target)) {\n      if (!this.state.touchDown) {\n        this.setState({ touchDown: true, dragging: true });\n      }\n\n      const shiftYPercent =\n        (shiftY / modalState.innerElement.offsetHeight) * 100;\n      const shiftYCurrent = rubber(\n        shiftYPercent,\n        72,\n        1.2,\n        this.props.platform === ANDROID || this.props.platform === VKCOM\n      );\n\n      modalState.touchShiftYPercent = shiftYPercent;\n      modalState.translateYCurrent = Math.max(\n        0,\n        (modalState.translateY ?? 0) + shiftYCurrent\n      );\n\n      this.animateTranslate(modalState, modalState.translateYCurrent);\n      this.setMaskOpacity(modalState);\n    }\n  }\n\n  onTouchEnd = (e: TouchEvent) => {\n    const modalState = this.getModalState(this.props.activeModal);\n\n    if (modalState?.type === ModalType.PAGE) {\n      return this.onPageTouchEnd(e, modalState);\n    }\n\n    if (modalState?.type === ModalType.CARD) {\n      return this.onCardTouchEnd(e, modalState);\n    }\n  };\n\n  onPageTouchEnd(event: TouchEvent, modalState: ModalsStateEntry) {\n    const { startY, shiftY } = event;\n\n    modalState.contentScrolled = false;\n    modalState.touchMovePositive = null;\n\n    let setStateCallback;\n\n    if (this.state.dragging && this.window) {\n      const shiftYEndPercent =\n        ((startY + shiftY) / this.window.innerHeight) * 100;\n\n      let translateY = modalState.translateYCurrent ?? 0;\n      const expectTranslateY =\n        (translateY / event.duration) *\n        240 *\n        0.6 *\n        ((modalState.touchShiftYPercent ?? 0) < 0 ? -1 : 1);\n      translateY = rangeTranslate(translateY + expectTranslateY);\n\n      if (modalState.settlingHeight !== 100) {\n        if (numberInRange(translateY, modalState.expandedRange)) {\n          translateY = modalState.expandedRange?.[0] ?? 0;\n        } else if (numberInRange(translateY, modalState.collapsedRange)) {\n          translateY = modalState.translateYFrom ?? 0;\n        } else if (numberInRange(translateY, modalState.hiddenRange)) {\n          translateY = 100;\n        } else {\n          translateY = modalState.translateYFrom ?? 0;\n        }\n      } else {\n        if (numberInRange(translateY, [0, 25])) {\n          translateY = 0;\n        } else {\n          translateY = 100;\n        }\n      }\n\n      if (translateY !== 100 && shiftYEndPercent >= 75) {\n        translateY = 100;\n      }\n\n      modalState.translateY = translateY;\n      modalState.translateYCurrent = translateY;\n      modalState.collapsed = translateY > 0 && translateY < shiftYEndPercent;\n      modalState.expanded = translateY === 0;\n      modalState.hidden = translateY === 100;\n\n      if (modalState.hidden) {\n        this.props.onExit();\n      }\n\n      setStateCallback = () => {\n        if (!modalState.hidden) {\n          this.animateTranslate(modalState, modalState.translateY);\n        }\n\n        this.setMaskOpacity(modalState);\n      };\n    }\n\n    this.setState(\n      {\n        touchDown: false,\n        dragging: false,\n      },\n      setStateCallback\n    );\n  }\n\n  onCardTouchEnd({ duration }: TouchEvent, modalState: ModalsStateEntry) {\n    let setStateCallback;\n\n    if (this.state.dragging) {\n      let translateY = modalState.translateYCurrent ?? 0;\n\n      const expectTranslateY =\n        (translateY / duration) *\n        240 *\n        0.6 *\n        ((modalState.touchShiftYPercent ?? 0) < 0 ? -1 : 1);\n      translateY = Math.max(0, translateY + expectTranslateY);\n\n      if (translateY >= 30) {\n        translateY = 100;\n      } else {\n        translateY = 0;\n      }\n\n      modalState.translateY = translateY;\n      modalState.hidden = translateY === 100;\n\n      if (modalState.hidden) {\n        this.props.onExit();\n      }\n\n      setStateCallback = () => {\n        if (!modalState.hidden) {\n          this.animateTranslate(modalState, modalState.translateY);\n        }\n\n        this.setMaskOpacity(modalState);\n      };\n    }\n\n    this.setState(\n      {\n        touchDown: false,\n        dragging: false,\n      },\n      setStateCallback\n    );\n  }\n\n  onScroll = (e: React.SyntheticEvent) => {\n    const activeModal = this.props.activeModal;\n\n    const target = e.target as HTMLElement;\n\n    if (!activeModal) {\n      return;\n    }\n    const modalState = this.getModalState(activeModal);\n    if (\n      modalState?.type === ModalType.PAGE &&\n      modalState?.contentElement?.contains(target)\n    ) {\n      modalState.contentScrolled = true;\n\n      if (modalState.contentScrollStopTimeout) {\n        clearTimeout(modalState.contentScrollStopTimeout);\n      }\n\n      modalState.contentScrollStopTimeout = setTimeout(() => {\n        if (modalState.contentScrolled) {\n          modalState.contentScrolled = false;\n        }\n      }, 250);\n    }\n  };\n\n  waitTransitionFinish(\n    modalState: ModalsStateEntry | undefined,\n    eventHandler: () => void\n  ) {\n    if (transitionEvent.supported) {\n      const onceHandler = () => {\n        modalState?.innerElement?.removeEventListener(\n          transitionEvent.name as string,\n          onceHandler\n        );\n        eventHandler();\n      };\n\n      modalState?.innerElement?.addEventListener(\n        transitionEvent.name as string,\n        onceHandler\n      );\n    } else {\n      setTimeout(eventHandler, this.timeout);\n    }\n  }\n\n  /**\n   * Анимирует сдвиг модалки\n   *\n   * @param {ModalsStateEntry} modalState\n   * @param {number} percent Процент сдвига: 0 – полностью открыта, 100 – полностью закрыта\n   */\n  animateTranslate(modalState: ModalsStateEntry, percent: number | undefined) {\n    const frameId = `animateTranslateFrame${modalState.id}`;\n\n    cancelAnimationFrame(this.frameIds[frameId]);\n\n    this.frameIds[frameId] = requestAnimationFrame(() => {\n      setTransformStyle(\n        modalState.innerElement,\n        `translate3d(0, ${percent}%, 0)`\n      );\n    });\n  }\n\n  /* Устанавливает прозрачность для полупрозрачной подложки */\n  setMaskOpacity(\n    modalState: ModalsStateEntry,\n    forceOpacity: number | null = null\n  ) {\n    if (forceOpacity === null && this.props.history?.[0] !== modalState.id) {\n      return;\n    }\n    if (this.maskAnimationFrame) {\n      cancelAnimationFrame(this.maskAnimationFrame);\n    }\n    this.maskAnimationFrame = requestAnimationFrame(() => {\n      if (this.maskElementRef.current) {\n        const { translateY = 0, translateYCurrent = 0 } = modalState;\n\n        const opacity =\n          forceOpacity === null\n            ? 1 - (translateYCurrent - translateY) / (100 - translateY) || 0\n            : forceOpacity;\n        this.maskElementRef.current.style.opacity = Math.max(\n          0,\n          Math.min(100, opacity)\n        ).toString();\n      }\n    });\n  }\n\n  render() {\n    const { activeModal, exitingModal, enteringModal } = this.props;\n    const { touchDown, dragging } = this.state;\n\n    if (!activeModal && !exitingModal) {\n      return null;\n    }\n\n    return (\n      <TouchRootContext.Provider value={true}>\n        <ModalRootContext.Provider value={this.modalRootContext}>\n          <Touch\n            vkuiClass={classNames(\n              getClassName(\"ModalRoot\", this.props.platform),\n              this.props.configProvider?.webviewType === WebviewType.VKAPPS &&\n                \"ModalRoot--vkapps\",\n              touchDown && \"ModalRoot--touched\",\n              !!(enteringModal || exitingModal) && \"ModalRoot--switching\"\n            )}\n            onMove={this.onTouchMove}\n            onEnd={this.onTouchEnd}\n            onScroll={this.onScroll}\n          >\n            <div\n              vkuiClass=\"ModalRoot__mask\"\n              onClick={this.props.onExit}\n              ref={this.maskElementRef}\n            />\n            <div vkuiClass=\"ModalRoot__viewport\" ref={this.viewportRef}>\n              {this.getModals().map((Modal) => {\n                const modalId = getNavId(Modal.props, warn);\n                const _modalState = this.getModalState(modalId);\n                if (\n                  (modalId !== activeModal && modalId !== exitingModal) ||\n                  !_modalState\n                ) {\n                  return null;\n                }\n                const modalState = { ..._modalState };\n\n                const isPage = modalState.type === ModalType.PAGE;\n                const key = `modal-${modalId}`;\n\n                return (\n                  <FocusTrap\n                    key={key}\n                    getRootRef={(e) => {\n                      const modalState = this.getModalState(modalId);\n                      if (modalState) {\n                        modalState.modalElement = e;\n                      }\n                    }}\n                    onClose={this.props.onExit}\n                    timeout={this.timeout}\n                    vkuiClass={classNames(\n                      \"ModalRoot__modal\",\n                      modalId === activeModal && \"ModalRoot__modal--active\",\n                      modalId === exitingModal && \"ModalRoot__modal--prev\",\n                      ((exitingModal && modalId === activeModal) ||\n                        modalId === enteringModal) &&\n                        \"ModalRoot__modal--next\",\n\n                      dragging && \"ModalRoot__modal--dragging\",\n\n                      isPage &&\n                        modalState.expandable &&\n                        \"ModalRoot__modal--expandable\",\n                      isPage &&\n                        modalState.expanded &&\n                        \"ModalRoot__modal--expanded\",\n                      isPage &&\n                        modalState.collapsed &&\n                        \"ModalRoot__modal--collapsed\"\n                    )}\n                    restoreFocus={false}\n                  >\n                    {Modal}\n                  </FocusTrap>\n                );\n              })}\n            </div>\n          </Touch>\n        </ModalRootContext.Provider>\n      </TouchRootContext.Provider>\n    );\n  }\n}\n\nexport const ModalRootTouch = withContext(\n  withPlatform(\n    withDOM<ModalRootProps>(\n      withModalManager(initModal)(ModalRootTouchComponent)\n    )\n  ),\n  ConfigProviderContext,\n  \"configProvider\"\n);\n\n/**\n * Инициализирует модалку перед анимацией открытия\n */\nfunction initModal(modalState: ModalsStateEntry) {\n  switch (modalState.type) {\n    case ModalType.PAGE:\n      modalState.settlingHeight =\n        modalState.settlingHeight || MODAL_PAGE_DEFAULT_PERCENT_HEIGHT;\n      return initPageModal(modalState);\n    case ModalType.CARD:\n      return initCardModal(modalState);\n    default:\n      IS_DEV &&\n        warn(\n          `initActiveModal: modalState.type=\"${modalState.type}\" не поддерживается`,\n          \"error\"\n        );\n  }\n}\n\nfunction initPageModal(modalState: ModalsStateEntry) {\n  const { contentElement } = modalState;\n  const contentHeight = (contentElement?.firstElementChild as HTMLElement)\n    .offsetHeight;\n\n  let prevTranslateY = modalState.translateY;\n\n  modalState.expandable =\n    contentHeight > (contentElement?.clientHeight ?? 0) ||\n    modalState.settlingHeight === 100;\n\n  let collapsed = false;\n  let expanded = false;\n  let translateYFrom;\n  let translateY;\n  let expandedRange: TranslateRange;\n  let collapsedRange: TranslateRange;\n  let hiddenRange: TranslateRange;\n\n  if (modalState.expandable) {\n    translateYFrom = 100 - (modalState.settlingHeight ?? 0);\n\n    const shiftHalf = translateYFrom / 2;\n    const visiblePart = 100 - translateYFrom;\n\n    expandedRange = [0, shiftHalf];\n    collapsedRange = [shiftHalf, translateYFrom + visiblePart / 4];\n    hiddenRange = [translateYFrom + visiblePart / 4, 100];\n\n    collapsed = translateYFrom > 0;\n    expanded = translateYFrom <= 0;\n    translateY = translateYFrom;\n  } else {\n    const headerHeight = modalState.headerElement?.offsetHeight ?? 0;\n    const height = contentHeight + headerHeight;\n\n    translateYFrom =\n      100 -\n      (height / (modalState.innerElement?.parentElement?.offsetHeight ?? 0)) *\n        100;\n    translateY = translateYFrom;\n\n    expandedRange = [translateY, translateY + 25];\n    collapsedRange = [translateY + 25, translateY + 25];\n    hiddenRange = [translateY + 25, translateY + 100];\n  }\n\n  // Если модалка может открываться на весь экран, и новый сдвиг больше предыдущего, то откроем её на весь экран\n  if (\n    (modalState.expandable && translateY > (prevTranslateY ?? 0)) ||\n    modalState.settlingHeight === 100\n  ) {\n    translateY = 0;\n  }\n\n  // Если модалка уже раскрыта обновляем состояния\n  if (translateY === 0) {\n    expanded = true;\n    collapsed = false;\n  }\n\n  modalState.expandedRange = expandedRange;\n  modalState.collapsedRange = collapsedRange;\n  modalState.hiddenRange = hiddenRange;\n  modalState.translateY = translateY;\n  modalState.translateYFrom = translateYFrom;\n  modalState.collapsed = collapsed;\n  modalState.expanded = expanded;\n}\n\nfunction initCardModal(modalState: ModalsStateEntry) {\n  modalState.translateY = 0;\n}\n","/*\n * Задает стиль трансформации элементу с учетом префиксов\n */\nexport function setTransformStyle(\n  element: HTMLElement | undefined | null,\n  transform: string\n): void {\n  if (element) {\n    element.style.transform = transform;\n    element.style.webkitTransform = transform;\n  }\n}\n","export const MODAL_PAGE_DEFAULT_PERCENT_HEIGHT = 75;\n\nexport const PERCENT_OPENED = 0;\nexport const PERCENT_CLOSED = 100;\n","import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { transitionEvent } from \"../../lib/supportEvents\";\nimport { HasPlatform } from \"../../types\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport { withContext } from \"../../hoc/withContext\";\nimport {\n  ModalRootContext,\n  ModalRootContextInterface,\n} from \"./ModalRootContext\";\nimport {\n  ConfigProviderContext,\n  ConfigProviderContextInterface,\n  WebviewType,\n} from \"../ConfigProvider/ConfigProviderContext\";\nimport { ModalsStateEntry } from \"./types\";\nimport { ANDROID, VKCOM } from \"../../lib/platform\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { DOMProps, withDOM } from \"../../lib/dom\";\nimport { getNavId } from \"../../lib/getNavId\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { FocusTrap } from \"../FocusTrap/FocusTrap\";\nimport { ModalTransitionProps, withModalManager } from \"./useModalManager\";\nimport \"./ModalRoot.css\";\n\nconst warn = warnOnce(\"ModalRoot\");\n\nexport interface ModalRootProps extends HasPlatform {\n  activeModal?: string | null;\n  /**\n   * @ignore\n   */\n  configProvider?: ConfigProviderContextInterface;\n  children?: React.ReactNode;\n\n  /**\n   * Будет вызвано при начале открытия активной модалки с её id\n   */\n  onOpen?(modalId: string): void;\n\n  /**\n   * Будет вызвано при окончательном открытии активной модалки с её id\n   */\n  onOpened?(modalId: string): void;\n\n  /**\n   * Будет вызвано при начале закрытия активной модалки с её id\n   */\n  onClose?(modalId: string): void;\n\n  /**\n   * Будет вызвано при окончательном закрытии активной модалки с её id\n   */\n  onClosed?(modalId: string): void;\n}\n\nclass ModalRootDesktopComponent extends React.Component<\n  ModalRootProps & DOMProps & ModalTransitionProps\n> {\n  constructor(props: ModalRootProps & ModalTransitionProps) {\n    super(props);\n\n    this.maskElementRef = React.createRef();\n\n    this.modalRootContext = {\n      updateModalHeight: () => undefined,\n      registerModal: ({ id, ...data }) =>\n        Object.assign(this.getModalState(id), data),\n      onClose: () => this.props.onExit(),\n      isInsideModal: true,\n    };\n  }\n\n  private readonly maskElementRef: React.RefObject<HTMLDivElement>;\n  private maskAnimationFrame: number | undefined = undefined;\n  private readonly modalRootContext: ModalRootContextInterface;\n  private restoreFocusTo: HTMLElement | undefined = undefined;\n\n  private get timeout() {\n    return this.props.platform === ANDROID || this.props.platform === VKCOM\n      ? 320\n      : 400;\n  }\n\n  private get modals() {\n    return React.Children.toArray(this.props.children) as React.ReactElement[];\n  }\n\n  getModalState(id: string | null) {\n    if (id === null) {\n      return undefined;\n    }\n    return this.props.getModalState(id);\n  }\n\n  componentDidUpdate(prevProps: ModalRootProps & ModalTransitionProps) {\n    // transition phase 2: animate exiting modal\n    if (\n      this.props.exitingModal &&\n      this.props.exitingModal !== prevProps.exitingModal\n    ) {\n      this.closeModal(this.props.exitingModal);\n    }\n\n    // transition phase 3: animate entering modal\n    if (\n      this.props.enteringModal &&\n      this.props.enteringModal !== prevProps.enteringModal\n    ) {\n      const { enteringModal } = this.props;\n      const enteringState = this.getModalState(enteringModal);\n      this.props.onEnter();\n      requestAnimationFrame(() => {\n        if (this.props.enteringModal === enteringModal) {\n          this.waitTransitionFinish(enteringState, () =>\n            this.props.onEntered(enteringModal)\n          );\n          this.animateModalOpacity(enteringState, true);\n        }\n      });\n    }\n\n    // focus restoration\n    if (this.props.activeModal && !prevProps.activeModal) {\n      this.restoreFocusTo = (this.props.document?.activeElement ??\n        undefined) as HTMLElement | undefined;\n    }\n    if (\n      !this.props.activeModal &&\n      !this.props.exitingModal &&\n      this.restoreFocusTo\n    ) {\n      this.restoreFocusTo.focus();\n      this.restoreFocusTo = undefined;\n    }\n  }\n\n  closeModal(id: string) {\n    const prevModalState = this.getModalState(id);\n    if (!prevModalState) {\n      return;\n    }\n\n    this.waitTransitionFinish(prevModalState, () => this.props.onExited(id));\n    this.animateModalOpacity(prevModalState, false);\n    if (!this.props.activeModal) {\n      this.setMaskOpacity(prevModalState, 0);\n    }\n  }\n\n  waitTransitionFinish(\n    modalState: ModalsStateEntry | undefined,\n    eventHandler: () => void\n  ) {\n    if (transitionEvent.supported) {\n      const onceHandler = () => {\n        modalState?.innerElement?.removeEventListener(\n          transitionEvent.name as string,\n          onceHandler\n        );\n        eventHandler();\n      };\n\n      modalState?.innerElement?.addEventListener(\n        transitionEvent.name as string,\n        onceHandler\n      );\n    } else {\n      setTimeout(eventHandler, this.timeout);\n    }\n  }\n\n  /* Анимирует сдвиг модалки */\n  animateModalOpacity(\n    modalState: ModalsStateEntry | undefined,\n    display: boolean\n  ) {\n    if (modalState?.innerElement) {\n      modalState.innerElement.style.transitionDelay =\n        display && this.props.delayEnter ? `${this.timeout}ms` : \"\";\n      modalState.innerElement.style.opacity = display ? \"1\" : \"0\";\n    }\n  }\n\n  /* Устанавливает прозрачность для полупрозрачной подложки */\n  setMaskOpacity(\n    modalState: ModalsStateEntry,\n    forceOpacity: number | null = null\n  ) {\n    if (forceOpacity === null && this.props.history?.[0] !== modalState.id) {\n      return;\n    }\n\n    if (this.maskAnimationFrame) {\n      cancelAnimationFrame(this.maskAnimationFrame);\n    }\n    this.maskAnimationFrame = requestAnimationFrame(() => {\n      if (this.maskElementRef.current) {\n        const { translateY = 0, translateYCurrent = 0 } = modalState;\n\n        const opacity =\n          forceOpacity === null\n            ? 1 - (translateYCurrent - translateY) / (100 - translateY) || 0\n            : forceOpacity;\n        this.maskElementRef.current.style.opacity = Math.max(\n          0,\n          Math.min(100, opacity)\n        ).toString();\n      }\n    });\n  }\n\n  render() {\n    const { exitingModal, activeModal, enteringModal } = this.props;\n\n    if (!activeModal && !exitingModal) {\n      return null;\n    }\n\n    return (\n      <ModalRootContext.Provider value={this.modalRootContext}>\n        <div\n          vkuiClass={classNames(\n            getClassName(\"ModalRoot\", this.props.platform),\n            this.props.configProvider?.webviewType === WebviewType.VKAPPS &&\n              \"ModalRoot--vkapps\",\n            \"ModalRoot--desktop\"\n          )}\n        >\n          <div\n            vkuiClass=\"ModalRoot__mask\"\n            ref={this.maskElementRef}\n            onClick={this.props.onExit}\n          />\n          <div vkuiClass=\"ModalRoot__viewport\">\n            {this.modals.map((Modal: React.ReactElement) => {\n              const modalId = getNavId(Modal.props, warn);\n              if (modalId !== activeModal && modalId !== exitingModal) {\n                return null;\n              }\n\n              const key = `modal-${modalId}`;\n\n              return (\n                <FocusTrap\n                  restoreFocus={false}\n                  onClose={this.props.onExit}\n                  timeout={this.timeout}\n                  key={key}\n                  vkuiClass={classNames(\n                    \"ModalRoot__modal\",\n                    !exitingModal &&\n                      !enteringModal &&\n                      modalId === activeModal &&\n                      \"ModalRoot__modal--active\",\n                    modalId === exitingModal && \"ModalRoot__modal--prev\",\n                    Boolean(exitingModal) &&\n                      modalId === activeModal &&\n                      \"ModalRoot__modal--next\"\n                  )}\n                >\n                  {Modal}\n                </FocusTrap>\n              );\n            })}\n          </div>\n        </div>\n      </ModalRootContext.Provider>\n    );\n  }\n}\n\nexport const ModalRootDesktop = withContext(\n  withPlatform(\n    withDOM<ModalRootProps>(withModalManager()(ModalRootDesktopComponent))\n  ),\n  ConfigProviderContext,\n  \"configProvider\"\n);\n","import * as React from \"react\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { ModalRootTouch } from \"./ModalRoot\";\nimport { ModalRootDesktop } from \"./ModalRootDesktop\";\nimport {\n  AdaptivityContextInterface,\n  AdaptivityProps,\n} from \"../AdaptivityProvider/AdaptivityContext\";\nimport { useScrollLock } from \"../AppRoot/ScrollContext\";\nimport { useAdaptivityIsDesktop } from \"../../hooks/useAdaptivity\";\n\nexport interface ModalRootProps extends AdaptivityProps {\n  activeModal?: string | null;\n\n  /**\n   * Будет вызвано при начале открытия активной модалки с её id\n   */\n  onOpen?(modalId: string): void;\n\n  /**\n   * Будет вызвано при окончательном открытии активной модалки с её id\n   */\n  onOpened?(modalId: string): void;\n\n  /**\n   * Будет вызвано при начале закрытия активной модалки с её id\n   */\n  onClose?(modalId: string): void;\n\n  /**\n   * Будет вызвано при окончательном закрытии активной модалки с её id\n   */\n  onClosed?(modalId: string): void;\n  children?: React.ReactNode;\n}\n\nconst ModalRootComponent = (\n  props: ModalRootProps & AdaptivityContextInterface\n) => {\n  const isDesktop = useAdaptivityIsDesktop();\n\n  useScrollLock(!!props.activeModal);\n\n  const RootComponent = isDesktop ? ModalRootDesktop : ModalRootTouch;\n\n  return <RootComponent {...props} />;\n};\n\nModalRootComponent.displayName = \"ModalRoot\";\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ModalRoot\n */\nexport const ModalRoot = withAdaptivity(ModalRootComponent, {\n  viewWidth: true,\n  viewHeight: true,\n  hasMouse: true,\n});\n","import * as React from \"react\";\nimport { TappableProps, Tappable } from \"../Tappable/Tappable\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { getTitleFromChildren, isPrimitiveReactNode } from \"../../lib/utils\";\nimport { IOS, VKCOM, ANDROID } from \"../../lib/platform\";\nimport { Text } from \"../Typography/Text/Text\";\nimport { Title } from \"../Typography/Title/Title\";\nimport \"./PanelHeaderButton.css\";\n\nexport interface PanelHeaderButtonProps extends Omit<TappableProps, \"label\"> {\n  primary?: boolean;\n  label?: React.ReactNode;\n}\n\ninterface ButtonTypographyProps extends React.AllHTMLAttributes<HTMLElement> {\n  primary?: PanelHeaderButtonProps[\"primary\"];\n}\n\nconst ButtonTypography = ({ primary, children }: ButtonTypographyProps) => {\n  const platform = usePlatform();\n\n  if (platform === IOS) {\n    return (\n      <Title Component=\"span\" level=\"3\" weight={primary ? \"1\" : \"3\"}>\n        {children}\n      </Title>\n    );\n  }\n\n  return <Text weight={platform === VKCOM ? undefined : \"2\"}>{children}</Text>;\n};\n\nconst warn = warnOnce(\"PanelHeaderButton\");\n\n/**\n * @see https://vkcom.github.io/VKUI/#/PanelHeaderButton\n */\nexport const PanelHeaderButton = ({\n  children,\n  primary = false,\n  label,\n  ...restProps\n}: PanelHeaderButtonProps) => {\n  const isPrimitive = isPrimitiveReactNode(children);\n  const isPrimitiveLabel = isPrimitiveReactNode(label);\n  const platform = usePlatform();\n\n  let hoverMode;\n  let activeMode;\n\n  switch (platform) {\n    case ANDROID:\n      hoverMode = \"background\";\n      activeMode = \"background\";\n      break;\n    case IOS:\n      hoverMode = \"background\";\n      activeMode = \"opacity\";\n      break;\n    case VKCOM:\n      hoverMode = \"PanelHeaderButton--hover\";\n      activeMode = \"PanelHeaderButton--active\";\n  }\n\n  if (process.env.NODE_ENV === \"development\") {\n    const hasAccessibleName = Boolean(\n      getTitleFromChildren(children) ||\n        getTitleFromChildren(label) ||\n        restProps[\"aria-label\"] ||\n        restProps[\"aria-labelledby\"]\n    );\n\n    if (!hasAccessibleName) {\n      warn(\n        \"a11y: У кнопки нет названия, которое может прочитать скринридер, и она недоступна для части пользователей. Замените содержимое на текст или добавьте описание действия с помощью пропа aria-label.\",\n        \"error\"\n      );\n    }\n  }\n\n  return (\n    <Tappable\n      {...restProps}\n      hoverMode={hoverMode}\n      Component={restProps.href ? \"a\" : \"button\"}\n      activeEffectDelay={200}\n      activeMode={activeMode}\n      vkuiClass={classNames(\n        getClassName(\"PanelHeaderButton\", platform),\n        primary && \"PanelHeaderButton--primary\",\n        isPrimitive && \"PanelHeaderButton--primitive\",\n        !isPrimitive && !isPrimitiveLabel && \"PanelHeaderButton--notPrimitive\"\n      )}\n    >\n      {isPrimitive ? (\n        <ButtonTypography primary={primary}>{children}</ButtonTypography>\n      ) : (\n        children\n      )}\n      {isPrimitiveLabel ? (\n        <ButtonTypography primary={primary}>{label}</ButtonTypography>\n      ) : (\n        label\n      )}\n    </Tappable>\n  );\n};\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon24Dismiss\", \"dismiss_24\", \"0 0 24 24\", '<symbol fill=\"none\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" id=\"dismiss_24\"><g fill=\"currentColor\"><path d=\"M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z\" opacity=\".12\" /><path d=\"M16.736 7.264a.9.9 0 0 1 0 1.272L13.273 12l3.463 3.464a.9.9 0 0 1 .081 1.18l-.08.092a.9.9 0 0 1-1.273 0L12 13.273l-3.464 3.463a.9.9 0 1 1-1.272-1.272L10.727 12 7.264 8.536a.9.9 0 0 1-.08-1.18l.08-.092a.9.9 0 0 1 1.272 0L12 10.727l3.464-3.463a.9.9 0 0 1 1.272 0z\" /></g></symbol>', 24, 24);\n","import * as React from \"react\";\nimport { useDOM } from \"../lib/dom\";\nimport { useGlobalEventListener } from \"./useGlobalEventListener\";\n\ninterface SoftwareKeyboardState {\n  isOpened: boolean;\n}\n\n/**\n Проверяет, закрыла ли клавиатура часть экрана, 24% подошло к большинству устройств\n Работает на iOS и Android, где софт-клавиатура ресайзит viewport в браузерах\n */\nexport function getPreciseKeyboardState(window: any): boolean {\n  const {\n    innerHeight,\n    screen: { availHeight },\n  } = window;\n\n  const coveredViewportPercentage = Math.round(\n    (1 - innerHeight / availHeight) * 100\n  );\n  return coveredViewportPercentage > 24;\n}\n\nconst eventOptions = {\n  passive: true,\n  capture: false,\n};\n\nexport function useKeyboard(): SoftwareKeyboardState {\n  const { document } = useDOM();\n\n  const [isOpened, setIsOpened] = React.useState(false);\n\n  const onFocus = React.useCallback(\n    (event: FocusEvent | true) => {\n      const isOpened =\n        (event === true || event.type === \"focusin\") &&\n        (document?.activeElement?.tagName === \"INPUT\" ||\n          document?.activeElement?.tagName === \"TEXTAREA\");\n      setIsOpened(isOpened);\n    },\n    [document?.activeElement?.tagName]\n  );\n\n  /**\n   У полей с autoFocus не отлавливаются события focus, для этого вызываем вручную,\n   чтобы иметь хоть какое-то понимание происходящего.\n   */\n  React.useEffect(() => {\n    onFocus(true);\n  }, [onFocus]);\n\n  useGlobalEventListener(document, \"focusout\", onFocus, eventOptions);\n  useGlobalEventListener(document, \"focusin\", onFocus, eventOptions);\n\n  return { isOpened };\n}\n","import * as React from \"react\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport { Title } from \"../Typography/Title/Title\";\nimport { Subhead } from \"../Typography/Subhead/Subhead\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { ViewWidth, withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { HasRootRef } from \"../../types\";\nimport { PanelHeaderButton } from \"../PanelHeaderButton/PanelHeaderButton\";\nimport { IOS, Platform } from \"../../lib/platform\";\nimport { ModalDismissButton } from \"../ModalDismissButton/ModalDismissButton\";\nimport { Icon24Dismiss } from \"@vkontakte/icons\";\nimport { useKeyboard } from \"../../hooks/useKeyboard\";\nimport { AdaptivityContextInterface } from \"../AdaptivityProvider/AdaptivityContext\";\nimport { useAdaptivityIsDesktop } from \"../../hooks/useAdaptivity\";\nimport \"./ModalCardBase.css\";\n\nexport interface ModalCardBaseProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    HasRootRef<HTMLDivElement> {\n  /**\n   * Иконка.\n   *\n   * Может быть компонентом иконки, например, `<Icon56MoneyTransferOutline />`, или `<Avatar size={72} src=\"\" />`\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * Заголовок карточки\n   */\n  header?: React.ReactNode;\n\n  /**\n   * Подзаголовок\n   */\n  subheader?: React.ReactNode;\n\n  /**\n   * Кнопки-действия.\n   *\n   * Рекомендуется использовать `<Button size=\"l\" mode=\"primary\" />` или `<Button size=\"l\" mode=\"secondary\" />`\n   */\n  actions?: React.ReactNode;\n\n  /**\n   * Тип отображения кнопок: вертикальный или горизонтальный\n   */\n  actionsLayout?: \"vertical\" | \"horizontal\";\n  onClose?: VoidFunction;\n\n  /**\n   * `aria-label` для кнопки закрытия. Необходим, чтобы кнопка была доступной.\n   */\n  dismissLabel?: string;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ModalCardBase\n */\nexport const ModalCardBase = withAdaptivity<\n  ModalCardBaseProps & AdaptivityContextInterface\n>(\n  ({\n    getRootRef,\n    icon,\n    header,\n    subheader,\n    children,\n    actions,\n    actionsLayout,\n    viewWidth,\n    hasMouse,\n    viewHeight,\n    onClose,\n    dismissLabel = \"Скрыть\",\n    ...restProps\n  }) => {\n    const platform = usePlatform();\n    const isDesktop = useAdaptivityIsDesktop();\n    const isSoftwareKeyboardOpened = useKeyboard().isOpened;\n\n    const canShowCloseBtn =\n      viewWidth >= ViewWidth.SMALL_TABLET || platform === Platform.VKCOM;\n    const canShowCloseBtnIos = platform === IOS && !canShowCloseBtn;\n\n    return (\n      <div\n        {...restProps}\n        vkuiClass={classNames(\n          getClassName(\"ModalCardBase\", platform),\n          isDesktop && \"ModalCardBase--desktop\"\n        )}\n        ref={getRootRef}\n      >\n        <div\n          vkuiClass={classNames(\n            \"ModalCardBase__container\",\n            isSoftwareKeyboardOpened &&\n              \"ModalCardBase__container--softwareKeyboardOpened\"\n          )}\n        >\n          {hasReactNode(icon) && (\n            <div vkuiClass=\"ModalCardBase__icon\">{icon}</div>\n          )}\n          {hasReactNode(header) && (\n            <Title level=\"2\" weight=\"2\" vkuiClass=\"ModalCardBase__header\">\n              {header}\n            </Title>\n          )}\n          {hasReactNode(subheader) && (\n            <Subhead vkuiClass=\"ModalCardBase__subheader\">{subheader}</Subhead>\n          )}\n\n          {children}\n\n          {hasReactNode(actions) && (\n            <div\n              vkuiClass={classNames(\n                \"ModalCardBase__actions\",\n                actionsLayout === \"vertical\" && \"ModalCardBase__actions--v\"\n              )}\n            >\n              {actions}\n            </div>\n          )}\n\n          {canShowCloseBtn && <ModalDismissButton onClick={onClose} />}\n          {canShowCloseBtnIos && (\n            <PanelHeaderButton\n              aria-label={dismissLabel}\n              vkuiClass=\"ModalCardBase__dismiss\"\n              onClick={onClose}\n            >\n              <Icon24Dismiss />\n            </PanelHeaderButton>\n          )}\n        </div>\n      </div>\n    );\n  },\n  {\n    viewWidth: true,\n    viewHeight: true,\n    hasMouse: true,\n  }\n);\n\nModalCardBase.displayName = \"ModalCardBase\";\n","import * as React from \"react\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { withPlatform } from \"../../hoc/withPlatform\";\nimport { HasPlatform } from \"../../types\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport {\n  ModalRootContext,\n  useModalRegistry,\n} from \"../ModalRoot/ModalRootContext\";\nimport { ModalType } from \"../ModalRoot/types\";\nimport { getNavId, NavIdProps } from \"../../lib/getNavId\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport {\n  ModalCardBase,\n  ModalCardBaseProps,\n} from \"../ModalCardBase/ModalCardBase\";\nimport {\n  AdaptivityContextInterface,\n  AdaptivityProps,\n} from \"../AdaptivityProvider/AdaptivityContext\";\nimport { useAdaptivityIsDesktop } from \"../../hooks/useAdaptivity\";\nimport \"./ModalCard.css\";\n\nexport interface ModalCardProps\n  extends HasPlatform,\n    AdaptivityProps,\n    NavIdProps,\n    ModalCardBaseProps {}\n\nconst warn = warnOnce(\"ModalCard\");\n\nconst ModalCardComponent = ({\n  icon,\n  header,\n  subheader,\n  children,\n  actions,\n  actionsLayout = \"horizontal\",\n  onClose,\n  platform,\n  viewWidth,\n  viewHeight,\n  hasMouse,\n  nav,\n  id,\n  ...restProps\n}: ModalCardProps & AdaptivityContextInterface) => {\n  const isDesktop = useAdaptivityIsDesktop();\n\n  const modalContext = React.useContext(ModalRootContext);\n  const { refs } = useModalRegistry(\n    getNavId({ nav, id }, warn),\n    ModalType.CARD\n  );\n\n  return (\n    <div\n      {...restProps}\n      id={id}\n      vkuiClass={classNames(\n        getClassName(\"ModalCard\", platform),\n        isDesktop && \"ModalCard--desktop\"\n      )}\n    >\n      <ModalCardBase\n        vkuiClass=\"ModalCard__in\"\n        getRootRef={refs.innerElement}\n        icon={icon}\n        header={header}\n        subheader={subheader}\n        actions={actions}\n        actionsLayout={actionsLayout}\n        onClose={onClose || modalContext.onClose}\n      >\n        {children}\n      </ModalCardBase>\n    </div>\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ModalCard\n */\nexport const ModalCard = withAdaptivity(withPlatform(ModalCardComponent), {\n  viewWidth: true,\n  viewHeight: true,\n  hasMouse: true,\n});\n\nModalCard.displayName = \"ModalCard\";\n","import * as React from \"react\";\nimport { TappableProps, Tappable } from \"../Tappable/Tappable\";\nimport { classNames } from \"../../lib/classNames\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport { IOS } from \"../../lib/platform\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport \"./IconButton.css\";\n\nexport interface IconButtonProps extends TappableProps {\n  children?: React.ReactNode;\n  /**\n   * @deprecated будет удалено в 5.0.0. Используйте `children`\n   */\n  icon?: React.ReactNode;\n}\n\nconst warn = warnOnce(\"IconButton\");\n\nconst IconButtonComponent = ({\n  icon,\n  sizeY,\n  children,\n  Component = \"button\",\n  ...restProps\n}: IconButtonProps) => {\n  const platform = usePlatform();\n\n  if (icon && process.env.NODE_ENV === \"development\") {\n    warn(\n      \"Свойство icon устарело и будет удалено в 5.0.0. Используйте children\"\n    );\n  }\n\n  return (\n    <Tappable\n      activeEffectDelay={200}\n      activeMode=\"background\"\n      {...restProps}\n      Component={restProps.href ? \"a\" : Component}\n      vkuiClass={classNames(\n        \"IconButton\",\n        `IconButton--sizeY-${sizeY}`,\n        platform === IOS && \"IconButton--ios\"\n      )}\n    >\n      {icon || children}\n    </Tappable>\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/IconButton\n */\nexport const IconButton = withAdaptivity(IconButtonComponent, {\n  sizeY: true,\n});\n\nIconButton.displayName = \"IconButton\";\n","import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { HasRootRef } from \"../../types\";\nimport \"./Card.css\";\n\nexport interface CardProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    HasRootRef<HTMLDivElement> {\n  mode?: \"tint\" | \"shadow\" | \"outline\";\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Card\n */\nexport const Card = ({\n  mode = \"tint\",\n  children,\n  getRootRef,\n  ...restProps\n}: CardProps) => {\n  const platform = usePlatform();\n\n  return (\n    <div\n      {...restProps}\n      ref={getRootRef}\n      vkuiClass={classNames(getClassName(\"Card\", platform), `Card--md-${mode}`)}\n    >\n      <div vkuiClass=\"Card__in\">{children}</div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { HasComponent, HasPlatform, HasRootRef } from \"../../types\";\nimport { hasReactNode, isPrimitiveReactNode } from \"../../lib/utils\";\nimport { Platform } from \"../../lib/platform\";\nimport { Headline } from \"../Typography/Headline/Headline\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport { Title } from \"../Typography/Title/Title\";\nimport { Text } from \"../Typography/Text/Text\";\nimport { Subhead } from \"../Typography/Subhead/Subhead\";\nimport \"./Header.css\";\n\nexport interface HeaderProps\n  extends React.HTMLAttributes<HTMLElement>,\n    HasRootRef<HTMLElement> {\n  mode?: \"primary\" | \"secondary\" | \"tertiary\";\n  subtitle?: React.ReactNode;\n  /**\n   * Допускаются иконки, текст, Link\n   */\n  aside?: React.ReactNode;\n  /**\n   * Допускаются текст, Indicator\n   */\n  indicator?: React.ReactNode;\n  multiline?: boolean;\n}\n\ntype HeaderContentProps = Pick<HeaderProps, \"children\" | \"mode\"> &\n  HasPlatform &\n  HasComponent;\n\nconst HeaderContent = ({\n  platform,\n  mode,\n  ...restProps\n}: HeaderContentProps) => {\n  if (platform === Platform.IOS) {\n    switch (mode) {\n      case \"primary\":\n      case \"tertiary\":\n        return <Title weight=\"1\" level=\"3\" {...restProps} />;\n      case \"secondary\":\n        return <Caption weight=\"2\" caps {...restProps} />;\n    }\n  }\n\n  if (platform === Platform.VKCOM) {\n    switch (mode) {\n      case \"primary\":\n        return <Headline weight=\"3\" {...restProps} />;\n      case \"secondary\":\n      case \"tertiary\":\n        return <Caption {...restProps} />;\n    }\n  }\n\n  switch (mode) {\n    case \"primary\":\n    case \"tertiary\":\n      return <Headline weight=\"2\" {...restProps} />;\n    case \"secondary\":\n      return <Caption weight=\"1\" caps {...restProps} />;\n  }\n\n  return null;\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Header\n */\nexport const Header = ({\n  mode = \"primary\",\n  children,\n  subtitle,\n  indicator,\n  aside,\n  getRootRef,\n  multiline,\n  ...restProps\n}: HeaderProps) => {\n  const platform = usePlatform();\n\n  const AsideTypography = platform === Platform.VKCOM ? Subhead : Text;\n  const SubtitleTypography = mode === \"secondary\" ? Subhead : Caption;\n\n  return (\n    <header\n      {...restProps}\n      ref={getRootRef}\n      vkuiClass={classNames(\n        \"Header\",\n        platform === Platform.VKCOM && \"Header--vkcom\",\n        platform === Platform.ANDROID && \"Header--android\",\n        platform === Platform.IOS && \"Header--ios\",\n        `Header--mode-${mode}`,\n        isPrimitiveReactNode(indicator) && \"Header--pi\"\n      )}\n    >\n      <div vkuiClass=\"Header__main\">\n        <HeaderContent\n          vkuiClass=\"Header__content\"\n          Component=\"span\"\n          mode={mode}\n          platform={platform}\n        >\n          <span\n            vkuiClass={classNames(\n              \"Header__content-in\",\n              multiline && \"Header__content-in--multiline\"\n            )}\n          >\n            {children}\n          </span>\n          {hasReactNode(indicator) && (\n            <Caption\n              vkuiClass=\"Header__indicator\"\n              weight={\n                mode === \"primary\" || mode === \"secondary\" ? \"1\" : undefined\n              }\n            >\n              {indicator}\n            </Caption>\n          )}\n        </HeaderContent>\n\n        {hasReactNode(subtitle) && (\n          <SubtitleTypography vkuiClass=\"Header__subtitle\" Component=\"span\">\n            {subtitle}\n          </SubtitleTypography>\n        )}\n      </div>\n\n      {hasReactNode(aside) && (\n        <AsideTypography vkuiClass=\"Header__aside\" Component=\"span\">\n          {aside}\n        </AsideTypography>\n      )}\n    </header>\n  );\n};\n","import * as React from \"react\";\nimport { IOS } from \"../../lib/platform\";\nimport { classNames } from \"../../lib/classNames\";\nimport { HasRootRef } from \"../../types\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { Spacing } from \"../Spacing/Spacing\";\nimport { Separator } from \"../Separator/Separator\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport {\n  withAdaptivity,\n  AdaptivityProps,\n  SizeType,\n} from \"../../hoc/withAdaptivity\";\nimport { ModalRootContext } from \"../ModalRoot/ModalRootContext\";\nimport \"./Group.css\";\n\nexport interface GroupProps\n  extends HasRootRef<HTMLElement>,\n    React.HTMLAttributes<HTMLElement>,\n    AdaptivityProps {\n  header?: React.ReactNode;\n  description?: React.ReactNode;\n  /**\n    show - разделитель всегда показывается,\n    hide – разделитель всегда спрятан,\n    auto – разделитель рисуется автоматически между соседними группами.\n   */\n  separator?: \"show\" | \"hide\" | \"auto\";\n  /**\n   * Режим отображения. Если установлен 'card', выглядит как карточка c\n   * обводкой и внешними отступами. Если 'plain' — без отступов и обводки.\n   * По умолчанию режим отображения зависит от `sizeX`. В модальных окнах\n   * по умолчанию 'plain'.\n   */\n  mode?: \"plain\" | \"card\";\n  children?: React.ReactNode;\n}\n\nconst GroupComponent = ({\n  header,\n  description,\n  children,\n  separator = \"auto\",\n  getRootRef,\n  mode,\n  sizeX,\n  ...restProps\n}: GroupProps) => {\n  const { isInsideModal } = React.useContext(ModalRootContext);\n  const platform = usePlatform();\n\n  let computedMode: GroupProps[\"mode\"] = mode;\n\n  if (!mode) {\n    computedMode =\n      sizeX === SizeType.COMPACT || isInsideModal ? \"plain\" : \"card\";\n  }\n\n  let separatorElement = null;\n\n  if (separator !== \"hide\") {\n    const separatorClassName = classNames(\n      \"Group__separator\",\n      separator === \"show\" && \"Group__separator--force\"\n    );\n    separatorElement =\n      computedMode === \"card\" ? (\n        <Spacing vkuiClass={separatorClassName} size={16} />\n      ) : (\n        <Separator vkuiClass={separatorClassName} />\n      );\n  }\n\n  return (\n    <section\n      {...restProps}\n      ref={getRootRef}\n      vkuiClass={classNames(\n        \"Group\",\n        platform === IOS && \"Group--ios\",\n        // TODO v5.0.0 Новая адаптивность\n        `Group--sizeX-${sizeX}`,\n        `Group--${computedMode}`\n      )}\n    >\n      <div vkuiClass=\"Group__inner\">\n        {header}\n        {children}\n        {hasReactNode(description) && (\n          <Caption vkuiClass=\"Group__description\">{description}</Caption>\n        )}\n      </div>\n      {separatorElement}\n    </section>\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Group\n */\nexport const Group = withAdaptivity(GroupComponent, { sizeX: true });\n\nGroup.displayName = \"Group\";\n","import * as React from \"react\";\nimport { noop } from \"../../lib/utils\";\n\nexport const ListContext = React.createContext({\n  toggleDrag: noop as (value: boolean) => void,\n});\n","import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { ListContext } from \"./ListContext\";\nimport \"./List.css\";\n\nexport type ListProps = React.HTMLAttributes<HTMLDivElement>;\n\n/**\n * @see https://vkcom.github.io/VKUI/#/List\n */\nexport const List = ({ children, ...restProps }: ListProps) => {\n  const [isDragging, toggleDrag] = React.useState(false);\n\n  return (\n    <div\n      role=\"list\"\n      {...restProps}\n      vkuiClass={classNames(\"List\", isDragging && \"List--dragging\")}\n    >\n      <ListContext.Provider value={React.useMemo(() => ({ toggleDrag }), [])}>\n        {children}\n      </ListContext.Provider>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { HasComponent } from \"../../types\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { TappableProps, Tappable } from \"../Tappable/Tappable\";\nimport { Icon24Chevron } from \"@vkontakte/icons\";\nimport { IOS } from \"../../lib/platform\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { withAdaptivity, SizeType } from \"../../hoc/withAdaptivity\";\nimport { Headline } from \"../Typography/Headline/Headline\";\nimport { Footnote } from \"../Typography/Footnote/Footnote\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport \"./SimpleCell.css\";\n\nexport interface SimpleCellOwnProps extends HasComponent {\n  /**\n   * Иконка 28 или `<Avatar size={28|32|40|48|72} />`\n   */\n  before?: React.ReactNode;\n  /**\n   * Иконка 12 или `<Badge />`. Добавится справа от текста `children`.\n   */\n  badge?: React.ReactNode;\n  /**\n   * Контейнер для текста справа от `children`.\n   */\n  indicator?: React.ReactNode;\n  /**\n   * Иконка 24|28 или `<Switch />`. Располагается справа от `indicator`.\n   */\n  after?: React.ReactNode;\n  /**\n   * Контейнер для текста под `children`.\n   */\n  description?: React.ReactNode;\n  /**\n   * Убирает анимацию нажатия\n   */\n  disabled?: boolean;\n  /**\n   * В iOS добавляет chevron справа. Передавать `true`, если предполагается переход при клике по ячейке.\n   */\n  expandable?: boolean;\n  multiline?: boolean;\n}\n\nexport interface SimpleCellProps extends SimpleCellOwnProps, TappableProps {}\n\ntype SimpleCellTypographyProps = React.HTMLAttributes<HTMLDivElement> &\n  HasComponent;\n\nconst SimpleCellTypography = (props: SimpleCellTypographyProps) => {\n  const { sizeY } = useAdaptivity();\n\n  if (sizeY === SizeType.COMPACT) {\n    return <Caption level=\"2\" {...props} />;\n  }\n\n  return <Footnote {...props} />;\n};\n\nconst SimpleCellComponent = ({\n  badge,\n  before,\n  indicator,\n  children,\n  after,\n  description,\n  expandable,\n  multiline,\n  sizeY,\n  ...restProps\n}: SimpleCellProps) => {\n  const platform = usePlatform();\n  const hasAfter = hasReactNode(after) || (expandable && platform === IOS);\n\n  return (\n    <Tappable\n      {...restProps}\n      vkuiClass={classNames(\n        getClassName(\"SimpleCell\", platform),\n        expandable && \"SimpleCell--exp\",\n        multiline && \"SimpleCell--mult\",\n        `SimpleCell--sizeY-${sizeY}`\n      )}\n    >\n      {before}\n      <div vkuiClass=\"SimpleCell__main\">\n        <div vkuiClass=\"SimpleCell__content\">\n          <Headline\n            Component=\"span\"\n            vkuiClass=\"SimpleCell__children\"\n            weight=\"3\"\n          >\n            {children}\n          </Headline>\n          {hasReactNode(badge) && (\n            <span vkuiClass=\"SimpleCell__badge\">{badge}</span>\n          )}\n        </div>\n        {description && (\n          <div vkuiClass=\"SimpleCell__content\">\n            <SimpleCellTypography vkuiClass=\"SimpleCell__text SimpleCell__subtitle\">\n              {description}\n            </SimpleCellTypography>\n          </div>\n        )}\n      </div>\n      {hasReactNode(indicator) && (\n        <Headline Component=\"span\" weight=\"3\" vkuiClass=\"SimpleCell__indicator\">\n          {indicator}\n        </Headline>\n      )}\n      {hasAfter && (\n        <div vkuiClass=\"SimpleCell__after\">\n          {after}\n          {expandable && platform === IOS && <Icon24Chevron />}\n        </div>\n      )}\n    </Tappable>\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/SimpleCell\n */\nexport const SimpleCell = withAdaptivity(SimpleCellComponent, { sizeY: true });\n\nSimpleCell.displayName = \"SimpleCell\";\n","import * as React from \"react\";\nimport { HasRootRef } from \"../../types\";\nimport { classNames } from \"../../lib/classNames\";\nimport { getTitleFromChildren, noop } from \"../../lib/utils\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { useDOM } from \"../../lib/dom\";\nimport { IOS } from \"../../lib/platform\";\nimport { Icon24Cancel } from \"@vkontakte/icons\";\nimport { IconButton } from \"../IconButton/IconButton\";\nimport { useGlobalEventListener } from \"../../hooks/useGlobalEventListener\";\nimport { Tappable } from \"../Tappable/Tappable\";\nimport \"./Removable.css\";\n\nexport interface RemovableProps {\n  /**\n   * iOS only. Текст в выезжающей кнопке для удаления ячейки.\n   */\n  removePlaceholder?: React.ReactNode;\n  /**\n   * Коллбэк срабатывает при клике на контрол удаления.\n   */\n  onRemove?: (e: React.MouseEvent, rootEl?: HTMLElement | null) => void;\n}\n\ninterface RemovableIosOwnProps extends RemovableProps {\n  removePlaceholderString?: string;\n  children?: React.ReactNode;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/RemovableIos\n */\nconst RemovableIos = ({\n  onRemove,\n  removePlaceholder,\n  removePlaceholderString,\n  children,\n}: RemovableIosOwnProps) => {\n  const { window } = useDOM();\n\n  const removeButtonRef = React.useRef<HTMLElement>(null);\n  const disabledRef = React.useRef(true);\n  const [removeOffset, updateRemoveOffset] = React.useState(0);\n\n  useGlobalEventListener(\n    window,\n    \"click\",\n    () => {\n      if (removeOffset > 0) {\n        updateRemoveOffset(0);\n      }\n    },\n    { capture: true }\n  );\n\n  const onRemoveTransitionEnd = () => {\n    if (removeOffset > 0) {\n      removeButtonRef?.current?.focus();\n    } else {\n      disabledRef.current = true;\n    }\n  };\n\n  const onRemoveActivateClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    if (!removeButtonRef.current) {\n      return;\n    }\n    const { offsetWidth } = removeButtonRef.current;\n    disabledRef.current = false;\n    updateRemoveOffset(offsetWidth);\n  };\n\n  return (\n    <div\n      vkuiClass=\"Removable__content\"\n      style={{ transform: `translateX(-${removeOffset ?? 0}px)` }}\n      onTransitionEnd={onRemoveTransitionEnd}\n    >\n      <IconButton\n        hasActive={false}\n        hasHover={false}\n        aria-label={removePlaceholderString}\n        vkuiClass=\"Removable__action Removable__toggle\"\n        onClick={onRemoveActivateClick}\n        disabled={removeOffset > 0}\n      >\n        <i vkuiClass=\"Removable__toggle-in\" role=\"presentation\" />\n      </IconButton>\n      {children}\n\n      <span vkuiClass=\"Removable__offset\" aria-hidden />\n\n      <Tappable\n        Component=\"button\"\n        hasActive={false}\n        hasHover={false}\n        disabled={disabledRef.current}\n        getRootRef={removeButtonRef}\n        vkuiClass=\"Removable__remove\"\n        onClick={onRemove}\n      >\n        <span vkuiClass=\"Removable__remove-in\">{removePlaceholder}</span>\n      </Tappable>\n    </div>\n  );\n};\n\ninterface RemovableOwnProps\n  extends React.AllHTMLAttributes<HTMLElement>,\n    RemovableProps,\n    HasRootRef<HTMLDivElement> {\n  /**\n   * Расположение кнопки удаления.\n   */\n  align?: \"start\" | \"center\";\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Removable\n */\nexport const Removable = ({\n  getRootRef,\n  children,\n  onRemove = noop,\n  removePlaceholder = \"Удалить\",\n  align = \"center\",\n  ...restProps\n}: RemovableOwnProps) => {\n  const platform = usePlatform();\n  const { sizeY } = useAdaptivity();\n\n  const ref = useExternRef(getRootRef);\n\n  const onRemoveClick = (e: React.MouseEvent) => {\n    e.preventDefault();\n    onRemove(e);\n  };\n\n  const removePlaceholderString: string =\n    getTitleFromChildren(removePlaceholder);\n\n  return (\n    <div\n      {...restProps}\n      ref={ref}\n      vkuiClass={classNames(\n        \"Removable\",\n        platform === IOS && \"Removable--ios\",\n        `Removable--${align}`,\n        `Removable--sizeY-${sizeY}`\n      )}\n    >\n      {platform !== IOS && (\n        <div vkuiClass=\"Removable__content\">\n          {children}\n\n          <IconButton\n            activeMode=\"opacity\"\n            hoverMode=\"opacity\"\n            vkuiClass=\"Removable__action\"\n            onClick={onRemoveClick}\n            aria-label={removePlaceholderString}\n          >\n            <Icon24Cancel role=\"presentation\" />\n          </IconButton>\n\n          <span vkuiClass=\"Removable__offset\" aria-hidden />\n        </div>\n      )}\n\n      {platform === IOS && (\n        <RemovableIos\n          onRemove={onRemoveClick}\n          removePlaceholder={removePlaceholder}\n          removePlaceholderString={removePlaceholderString}\n        >\n          {children}\n        </RemovableIos>\n      )}\n    </div>\n  );\n};\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon24ReorderIos\", \"reorder_ios_24\", \"0 0 24 24\", '<symbol viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" id=\"reorder_ios_24\"><g fill=\"none\" fill-rule=\"evenodd\"><path opacity=\".1\" d=\"M0 0h24v24H0z\" /><path d=\"M2.75 7h18.5a.75.75 0 1 1 0 1.5H2.75a.75.75 0 0 1 0-1.5Zm0 4h18.5a.75.75 0 1 1 0 1.5H2.75a.75.75 0 1 1 0-1.5Zm0 4h18.5a.75.75 0 1 1 0 1.5H2.75a.75.75 0 1 1 0-1.5Z\" fill=\"currentColor\" fill-rule=\"nonzero\" /></g></symbol>', 24, 24);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon24Reorder\", \"reorder_24\", \"0 0 24 24\", '<symbol viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" id=\"reorder_24\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h24v24H0z\" /><path d=\"M21 18a1 1 0 0 1-1 1H4a1 1 0 0 1 0-2h16a1 1 0 0 1 1 1Zm0-4a1 1 0 0 1-1 1H4a1 1 0 0 1 0-2h16a1 1 0 0 1 1 1Zm0-4a1 1 0 0 1-1 1H4a1 1 0 0 1 0-2h16a1 1 0 0 1 1 1ZM3 6a1 1 0 0 1 1-1h16a1 1 0 0 1 0 2H4a1 1 0 0 1-1-1Z\" fill=\"currentColor\" fill-rule=\"nonzero\" /></g></symbol>', 24, 24);\n","import * as React from \"react\";\nimport { Icon24Reorder, Icon24ReorderIos } from \"@vkontakte/icons\";\nimport { getClassName } from \"../../../helpers/getClassName\";\nimport { usePlatform } from \"../../../hooks/usePlatform\";\nimport { classNames } from \"../../../lib/classNames\";\nimport { IOS } from \"../../../lib/platform\";\nimport { Touch } from \"../../Touch/Touch\";\nimport { DraggableProps } from \"../useDraggable\";\nimport \"./CellDragger.css\";\n\ntype CellDraggerProps = DraggableProps & React.HTMLAttributes<HTMLElement>;\n\nexport const CellDragger = ({\n  onDragStart,\n  onDragMove,\n  onDragEnd,\n  ...restProps\n}: CellDraggerProps) => {\n  const platform = usePlatform();\n\n  const onClick = React.useCallback((e: React.MouseEvent) => {\n    e.preventDefault();\n  }, []);\n\n  return (\n    <Touch\n      vkuiClass={classNames(getClassName(\"CellDragger\", platform))}\n      onStart={onDragStart}\n      onMoveY={onDragMove}\n      onEnd={onDragEnd}\n      onClick={onClick}\n      {...restProps}\n    >\n      {platform === IOS ? <Icon24ReorderIos /> : <Icon24Reorder />}\n    </Touch>\n  );\n};\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon24CheckBoxOff\", \"check_box_off_24\", \"0 0 24 24\", '<symbol fill=\"none\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" id=\"check_box_off_24\"><path d=\"M16.872 2c1.783 0 2.43.186 3.082.534.651.349 1.163.86 1.512 1.512S22 5.345 22 7.128v9.744c0 1.783-.186 2.43-.534 3.082a3.635 3.635 0 0 1-1.512 1.512c-.652.348-1.299.534-3.082.534H7.128c-1.783 0-2.43-.186-3.082-.534s-1.163-.86-1.512-1.512C2.186 19.302 2 18.655 2 16.872V7.128c0-1.783.186-2.43.534-3.082a3.635 3.635 0 0 1 1.512-1.512C4.698 2.186 5.345 2 7.128 2zm.564 2H6.564c-.892 0-1.215.093-1.54.267-.327.174-.583.43-.757.756-.174.326-.267.65-.267 1.54v10.873c0 .892.093 1.215.267 1.54.174.327.43.583.756.757.326.174.65.267 1.54.267h10.873c.892 0 1.215-.093 1.54-.267.327-.174.583-.43.757-.756.174-.326.267-.65.267-1.54V6.563c0-.892-.093-1.215-.267-1.54a1.817 1.817 0 0 0-.756-.757c-.326-.174-.65-.267-1.54-.267z\" fill=\"currentColor\" /></symbol>', 24, 24);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon24CheckCircleOff\", \"check_circle_off_24\", \"0 0 24 24\", '<symbol viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" id=\"check_circle_off_24\"><path d=\"M12 0c6.629 0 12 5.373 12 12 0 6.629-5.373 12-12 12-6.629 0-12-5.373-12-12C0 5.371 5.373 0 12 0Zm0 1.5C6.2 1.5 1.5 6.2 1.5 12S6.2 22.5 12 22.5 22.5 17.8 22.5 12 17.8 1.5 12 1.5Z\" fill=\"currentColor\" /></symbol>', 24, 24);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon24CheckBoxOn\", \"check_box_on_24\", \"0 0 24 24\", '<symbol fill=\"none\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" id=\"check_box_on_24\"><path clip-rule=\"evenodd\" d=\"M2.436 4.184C2 5.04 2 6.16 2 8.4v7.2c0 2.24 0 3.36.436 4.216a4 4 0 0 0 1.748 1.748C5.04 22 6.16 22 8.4 22h7.2c2.24 0 3.36 0 4.216-.436a4 4 0 0 0 1.748-1.748C22 18.96 22 17.84 22 15.6V8.4c0-2.24 0-3.36-.436-4.216a4 4 0 0 0-1.748-1.748C18.96 2 17.84 2 15.6 2H8.4c-2.24 0-3.36 0-4.216.436a4 4 0 0 0-1.748 1.748zm15.771 5.023a1 1 0 0 0-1.414-1.414L10 14.586l-2.793-2.793a1 1 0 0 0-1.414 1.414l3.5 3.5a1 1 0 0 0 1.414 0z\" fill=\"currentColor\" fill-rule=\"evenodd\" /></symbol>', 24, 24);\n","import * as React from \"react\";\nimport {\n  Icon24CheckBoxOff,\n  Icon24CheckBoxOn,\n  Icon24CheckCircleOff,\n  Icon24CheckCircleOn,\n} from \"@vkontakte/icons\";\nimport { getClassName } from \"../../../helpers/getClassName\";\nimport { usePlatform } from \"../../../hooks/usePlatform\";\nimport { classNames } from \"../../../lib/classNames\";\nimport { ANDROID } from \"../../../lib/platform\";\nimport { CellProps } from \"../Cell\";\nimport \"./CellCheckbox.css\";\n\nexport type CellCheckboxProps = Pick<CellProps, \"defaultChecked\" | \"checked\"> &\n  React.InputHTMLAttributes<HTMLInputElement>;\n\nexport const CellCheckbox = ({\n  className,\n  style,\n  ...restProps\n}: CellCheckboxProps) => {\n  const platform = usePlatform();\n\n  const IconOff =\n    platform === ANDROID ? Icon24CheckBoxOff : Icon24CheckCircleOff;\n\n  const IconOn = platform === ANDROID ? Icon24CheckBoxOn : Icon24CheckCircleOn;\n\n  return (\n    <div\n      vkuiClass={classNames(getClassName(\"CellCheckbox\", platform))}\n      className={className}\n      style={style}\n    >\n      <input vkuiClass=\"CellCheckbox__input\" type=\"checkbox\" {...restProps} />\n      <IconOff vkuiClass=\"CellCheckbox__icon CellCheckbox__icon--off\" />\n      <IconOn vkuiClass=\"CellCheckbox__icon CellCheckbox__icon--on\" />\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { noop } from \"../../lib/utils\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { IOS } from \"../../lib/platform\";\nimport { SimpleCell, SimpleCellProps } from \"../SimpleCell/SimpleCell\";\nimport { HasPlatform, HasRootRef } from \"../../types\";\nimport { Removable, RemovableProps } from \"../Removable/Removable\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { useDraggable } from \"./useDraggable\";\nimport { ListContext } from \"../List/ListContext\";\nimport { CellDragger } from \"./CellDragger/CellDragger\";\nimport { CellCheckbox, CellCheckboxProps } from \"./CellCheckbox/CellCheckbox\";\nimport \"./Cell.css\";\n\nexport interface CellProps\n  extends Omit<SimpleCellProps, \"getRootRef\">,\n    HasPlatform,\n    RemovableProps,\n    HasRootRef<HTMLDivElement> {\n  mode?: \"removable\" | \"selectable\";\n  /**\n   * В режиме перетаскивания ячейка перестает быть кликабельной, то есть при клике переданный onClick вызываться не будет\n   */\n  draggable?: boolean;\n  /**\n   * @deprecated Будет удалено в 5.0.0. Используйте mode=\"removable\"\n   */\n  removable?: boolean;\n  /**\n   * Имя для input в режиме selectable\n   */\n  name?: string;\n  /**\n   * @deprecated Будет удалено в 5.0.0. Используйте mode=\"selectable\"\n   */\n  selectable?: boolean;\n  /**\n   * В режиме selectable реагирует на входящие значения пропса checked, как зависящий напрямую от входящего значения\n   */\n  checked?: boolean;\n  /**\n   * В режиме selectable реагирует на входящие значения пропса defaultChecked как неконтролируемый компонент\n   */\n  defaultChecked?: boolean;\n  /**\n   * Коллбэк срабатывает при завершении перетаскивания.\n   * **Важно:** режим перетаскивания не меняет порядок ячеек в DOM. В коллбэке есть объект с полями `from` и `to`.\n   * Эти числа нужны для того, чтобы разработчик понимал, с какого индекса на какой произошел переход. В песочнице\n   * есть рабочий пример с обработкой этих чисел и перерисовкой списка.\n   */\n  onDragFinish?: ({ from, to }: { from: number; to: number }) => void;\n  /**\n   * aria-label для кнопки перетаскивания ячейки\n   */\n  draggerLabel?: string;\n}\n\nconst warn = warnOnce(\"Cell\");\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Cell\n */\nexport const Cell = ({\n  mode: propsMode, // TODO: убрать переименование в propsMode перед 5.0.0\n  onRemove = noop,\n  removePlaceholder = \"Удалить\",\n  onDragFinish,\n  before,\n  after,\n  disabled,\n  removable: deprecatedRemovable, // TODO: удалить перед 5.0.0\n  draggable,\n  selectable: deprecatedSelectable, // TODO: удалить перед 5.0.0\n  Component,\n  onChange,\n  name,\n  value,\n  checked,\n  defaultChecked,\n  getRootRef,\n  draggerLabel = \"Перенести ячейку\",\n  className,\n  style,\n  ...restProps\n}: CellProps) => {\n  // TODO: удалить перед 5.0.0\n  let mode: CellProps[\"mode\"] = propsMode;\n\n  if (!propsMode && (deprecatedSelectable || deprecatedRemovable)) {\n    mode = deprecatedSelectable ? \"selectable\" : \"removable\";\n\n    if (process.env.NODE_ENV === \"development\") {\n      deprecatedSelectable &&\n        warn(\n          'Свойство selectable устарело и будет удалено в 5.0.0. Используйте mode=\"selectable\".'\n        );\n      deprecatedRemovable &&\n        warn(\n          'Свойство removable устарело и будет удалено в 5.0.0. Используйте mode=\"removable\".'\n        );\n    }\n  }\n  // /end TODO\n\n  const selectable = mode === \"selectable\";\n  const removable = mode === \"removable\";\n\n  const platform = usePlatform();\n\n  const rootElRef = useExternRef(getRootRef);\n\n  const { dragging, ...draggableProps } = useDraggable({\n    rootElRef,\n    onDragFinish,\n  });\n\n  const { toggleDrag } = React.useContext(ListContext);\n  React.useEffect(() => {\n    if (dragging) {\n      toggleDrag(true);\n      return () => toggleDrag(false);\n    }\n    return undefined;\n  }, [dragging, toggleDrag]);\n\n  let dragger;\n  if (draggable) {\n    dragger = (\n      <CellDragger\n        vkuiClass=\"Cell__dragger\"\n        aria-label={draggerLabel}\n        {...draggableProps}\n      />\n    );\n  }\n\n  let checkbox;\n  if (selectable) {\n    const checkboxProps: CellCheckboxProps = {\n      name,\n      value,\n      onChange,\n      defaultChecked,\n      checked,\n      disabled,\n    };\n    checkbox = <CellCheckbox vkuiClass=\"Cell__checkbox\" {...checkboxProps} />;\n  }\n\n  const simpleCellDisabled =\n    (draggable && !selectable) || removable || disabled;\n  const hasActive = !simpleCellDisabled && !dragging;\n\n  const cellClasses = classNames(\n    \"Cell\",\n    platform === IOS && \"Cell--ios\",\n    dragging && \"Cell--dragging\",\n    removable && \"Cell--removable\",\n    selectable && \"Cell--selectable\",\n    disabled && \"Cell--disabled\"\n  );\n\n  const simpleCell = (\n    <SimpleCell\n      hasActive={hasActive}\n      hasHover={hasActive}\n      {...restProps}\n      vkuiClass=\"Cell__content\"\n      disabled={simpleCellDisabled}\n      Component={selectable ? \"label\" : Component}\n      before={\n        <React.Fragment>\n          {draggable && platform !== IOS && dragger}\n          {selectable && checkbox}\n          {before}\n        </React.Fragment>\n      }\n      after={\n        <React.Fragment>\n          {draggable && platform === IOS && dragger}\n          {after}\n        </React.Fragment>\n      }\n    />\n  );\n\n  if (removable) {\n    return (\n      <Removable\n        vkuiClass={cellClasses}\n        className={className}\n        style={style}\n        getRootRef={rootElRef}\n        removePlaceholder={removePlaceholder}\n        onRemove={(e) => onRemove(e, rootElRef.current)}\n      >\n        {simpleCell}\n      </Removable>\n    );\n  }\n\n  return (\n    <div\n      vkuiClass={cellClasses}\n      className={className}\n      style={style}\n      ref={rootElRef}\n    >\n      {simpleCell}\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { TouchEvent } from \"../Touch/Touch\";\nimport { CellProps } from \"./Cell\";\n\nexport interface DraggableProps {\n  onDragStart: () => void;\n  onDragEnd: () => void;\n  onDragMove: (e: TouchEvent) => void;\n}\n\ninterface UseDraggableProps extends DraggableProps {\n  dragging: boolean;\n}\n\nexport const useDraggable = <T extends HTMLElement>({\n  rootElRef,\n  onDragFinish,\n}: Pick<CellProps, \"onDragFinish\"> & {\n  rootElRef: React.MutableRefObject<T | null>;\n}) => {\n  const [dragging, setDragging] = React.useState<boolean>(false);\n\n  const [siblings, setSiblings] = React.useState<HTMLElement[]>([]);\n  const [dragStartIndex, setDragStartIndex] = React.useState<number>(0);\n  const [dragEndIndex, setDragEndIndex] = React.useState<number>(0);\n  const [dragShift, setDragShift] = React.useState<number>(0);\n  const [dragDirection, setDragDirection] = React.useState<\n    \"down\" | \"up\" | undefined\n  >(undefined);\n\n  const onDragStart = () => {\n    const rootEl = rootElRef.current;\n    if (!rootEl) {\n      return;\n    }\n\n    setDragging(true);\n\n    let _siblings: HTMLElement[] = [];\n    if (rootEl.parentElement?.childNodes) {\n      _siblings = Array.from(rootEl.parentElement.children) as HTMLElement[];\n    }\n    const idx = _siblings.indexOf(rootEl);\n\n    setDragStartIndex(idx);\n    setDragEndIndex(idx);\n    setSiblings(_siblings);\n    setDragShift(0);\n  };\n\n  const onDragMove = (e: TouchEvent) => {\n    e.originalEvent.preventDefault();\n\n    const rootEl = rootElRef.current;\n\n    if (rootEl) {\n      rootEl.style.transform = `translateY(${e.shiftY}px)`;\n      const rootGesture = rootEl.getBoundingClientRect();\n\n      setDragDirection(dragShift - e.shiftY < 0 ? \"down\" : \"up\");\n      setDragShift(e.shiftY);\n      setDragEndIndex(dragStartIndex);\n\n      siblings.forEach((sibling: HTMLElement, siblingIndex: number) => {\n        const siblingGesture = sibling.getBoundingClientRect();\n        const siblingHalfHeight = siblingGesture.height / 2;\n\n        const rootOverSibling =\n          rootGesture.bottom > siblingGesture.top + siblingHalfHeight;\n        const rootUnderSibling =\n          rootGesture.top < siblingGesture.bottom - siblingHalfHeight;\n\n        if (dragStartIndex < siblingIndex) {\n          if (rootOverSibling) {\n            if (dragDirection === \"down\") {\n              sibling.style.transform = \"translateY(-100%)\";\n            }\n\n            setDragEndIndex((dragEndIndex) => dragEndIndex + 1);\n          }\n          if (rootUnderSibling && dragDirection === \"up\") {\n            sibling.style.transform = \"translateY(0)\";\n          }\n        } else if (dragStartIndex > siblingIndex) {\n          if (rootUnderSibling) {\n            if (dragDirection === \"up\") {\n              sibling.style.transform = \"translateY(100%)\";\n            }\n\n            setDragEndIndex((dragEndIndex) => dragEndIndex - 1);\n          }\n          if (rootOverSibling && dragDirection === \"down\") {\n            sibling.style.transform = \"translateY(0)\";\n          }\n        }\n      });\n    }\n  };\n\n  const onDragEnd = () => {\n    const [from, to] = [dragStartIndex, dragEndIndex];\n\n    siblings.forEach((sibling: HTMLElement) => {\n      sibling.style.transform = \"\";\n    });\n\n    setSiblings([]);\n    setDragEndIndex(0);\n    setDragStartIndex(0);\n    setDragDirection(undefined);\n    setDragShift(0);\n\n    setDragging(false);\n\n    onDragFinish && onDragFinish({ from, to });\n  };\n\n  const useDraggableProps: UseDraggableProps = {\n    onDragStart,\n    onDragMove,\n    onDragEnd,\n    dragging,\n  };\n\n  return useDraggableProps;\n};\n","import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { TappableProps, Tappable } from \"../Tappable/Tappable\";\nimport { Subhead } from \"../Typography/Subhead/Subhead\";\nimport { withAdaptivity } from \"../../hoc/withAdaptivity\";\nimport \"./RichCell.css\";\n\nexport interface RichCellProps extends TappableProps {\n  /**\n   * Контейнер для текста над `children`.\n   */\n  subhead?: React.ReactNode;\n  /**\n   * Контейнер для текста под `children`.\n   */\n  text?: React.ReactNode;\n  /**\n   * Контейнер для текста под `text`.\n   */\n  caption?: React.ReactNode;\n  /**\n   * Контейнер для контента под `caption`. Например `<UsersStack size=\"s\" />`.\n   */\n  bottom?: React.ReactNode;\n  /**\n   * Кнопки-действия. Принимает [`Button`](https://vkcom.github.io/VKUI/#/Button) с параметрами:\n   *\n   * - `mode=\"primary\" size=\"s\"`\n   * - `mode=\"secondary\" size=\"s\"`\n   *\n   * Для набора кнопок используйте [`ButtonGroup`](https://vkcom.github.io/VKUI/#/ButtonGroup) с параметрами:\n   *\n   * - `mode=\"horizontal\" gap=\"s\" stretched`\n   */\n  actions?: React.ReactNode;\n  /**\n   * `<Avatar size={40|48|72} />`.\n   */\n  before?: React.ReactNode;\n  /**\n   * Иконка 24 или текст.\n   */\n  after?: React.ReactNode;\n  /**\n   * Текст под `after`.\n   */\n  afterCaption?: React.ReactNode;\n  /**\n   * Убирает анимацию нажатия.\n   */\n  disabled?: boolean;\n  /**\n   * Включает многострочный режим для `subhead`, `children`, `text` и `caption`.\n   */\n  multiline?: boolean;\n}\n\nconst RichCellComponent = ({\n  subhead,\n  children,\n  text,\n  caption,\n  before,\n  after,\n  afterCaption,\n  bottom,\n  actions,\n  multiline,\n  sizeY,\n  ...restProps\n}: RichCellProps) => {\n  return (\n    <Tappable\n      {...restProps}\n      vkuiClass={classNames(\n        \"RichCell\",\n        !multiline && \"RichCell--text-ellipsis\",\n        `RichCell--sizeY-${sizeY}`\n      )}\n    >\n      {before && <div vkuiClass=\"RichCell__before\">{before}</div>}\n      <div vkuiClass=\"RichCell__in\">\n        <div vkuiClass=\"RichCell__content\">\n          <div vkuiClass=\"RichCell__content-before\">\n            {subhead && (\n              <Subhead Component=\"div\" vkuiClass=\"RichCell__subhead\">\n                {subhead}\n              </Subhead>\n            )}\n            <div vkuiClass=\"RichCell__children\">{children}</div>\n            {text && <div vkuiClass=\"RichCell__text\">{text}</div>}\n            {caption && (\n              <Subhead Component=\"div\" vkuiClass=\"RichCell__caption\">\n                {caption}\n              </Subhead>\n            )}\n          </div>\n          {(after || afterCaption) && (\n            <div vkuiClass=\"RichCell__content-after\">\n              {after && <div vkuiClass=\"RichCell__after-children\">{after}</div>}\n              {afterCaption && (\n                <div vkuiClass=\"RichCell__after-caption\">{afterCaption}</div>\n              )}\n            </div>\n          )}\n        </div>\n        {bottom && <div vkuiClass=\"RichCell__bottom\">{bottom}</div>}\n        {actions && <div vkuiClass=\"RichCell__actions\">{actions}</div>}\n      </div>\n    </Tappable>\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/RichCell\n */\nexport const RichCell = withAdaptivity(RichCellComponent, { sizeY: true });\n\nRichCell.displayName = \"RichCell\";\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon12Circle\", \"circle_12\", \"0 0 12 12\", '<symbol fill=\"none\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\" id=\"circle_12\"><path d=\"M10 6a4 4 0 1 1-8 0 4 4 0 0 1 8 0z\" fill=\"currentColor\" /></symbol>', 12, 12);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon12OnlineMobile\", \"online_mobile_12\", \"0 0 8 12\", '<symbol xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 8 12\" id=\"online_mobile_12\"><path fill=\"currentColor\" d=\"M5.99 0C7.1 0 8 .9 8 2.01v7.98C8 11.1 7.1 12 5.99 12H2.01C.9 12 0 11.1 0 9.99V2.01C0 .9.9 0 2.01 0h3.98Zm.007 3H2.004a.502.502 0 0 0-.503.502v4.995c0 .278.225.503.503.503h3.995a.502.502 0 0 0 .502-.502V3.503A.502.502 0 0 0 5.997 3Z\" /></symbol>', 8, 12);\n","import * as React from \"react\";\nimport { Icon12Circle, Icon12OnlineMobile } from \"@vkontakte/icons\";\nimport { classNames } from \"../../lib/classNames\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { Tappable } from \"../Tappable/Tappable\";\nimport { HasRef, HasRootRef } from \"../../types\";\nimport \"./Avatar.css\";\n\nexport interface AvatarProps\n  extends React.ImgHTMLAttributes<HTMLElement>,\n    HasRootRef<HTMLDivElement>,\n    HasRef<HTMLImageElement> {\n  /**\n   * Рекомендуемый сет значений: 96 | 88 | 80 | 72 | 64 | 56 | 48 | 44 | 40 | 36 | 32 | 28 | 24\n   */\n  size?: number;\n  mode?: \"default\" | \"image\" | \"app\";\n  shadow?: boolean;\n  badge?: \"online\" | \"online-mobile\" | JSX.Element;\n  overlayIcon?: JSX.Element;\n  overlayMode?: \"dark\" | \"light\";\n  /**\n   * Поведение показа overlay: \"hover\" - при наведении, \"always\" - всегда\n   */\n  overlayAction?: \"hover\" | \"always\";\n}\n\nexport const AVATAR_DEFAULT_SIZE = 48;\nexport const AVATAR_DEFAULT_SHADOW = true;\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Avatar\n */\nexport const Avatar = ({\n  alt,\n  crossOrigin,\n  decoding,\n  height,\n  loading,\n  referrerPolicy,\n  sizes,\n  src,\n  srcSet,\n  useMap,\n  width,\n  getRef,\n  size = AVATAR_DEFAULT_SIZE,\n  shadow = AVATAR_DEFAULT_SHADOW,\n  mode = \"default\",\n  className,\n  children,\n  getRootRef,\n  style,\n  \"aria-label\": ariaLabel,\n  badge,\n  overlayIcon,\n  overlayMode = \"light\",\n  overlayAction: passedOverlayAction,\n  onClick,\n  ...restProps\n}: AvatarProps) => {\n  const { hasMouse } = useAdaptivity();\n  const [failedImage, setFailedImage] = React.useState(false);\n\n  const overlayAction = passedOverlayAction ?? (hasMouse ? \"hover\" : \"always\");\n\n  const onImageError = () => {\n    setFailedImage(true);\n  };\n\n  const onImageLoad = () => {\n    setFailedImage(false);\n  };\n\n  let borderRadius: string | number = \"50%\";\n\n  switch (mode) {\n    case \"image\":\n      size < 64 && (borderRadius = 4);\n      size >= 64 && size < 96 && (borderRadius = 6);\n      size >= 96 && (borderRadius = 8);\n      break;\n    case \"app\":\n      size <= 40 && (borderRadius = 8);\n      size > 40 && size < 56 && (borderRadius = 10);\n      size >= 56 && size < 64 && (borderRadius = 12);\n      size >= 64 && size < 84 && (borderRadius = 16);\n      size >= 84 && (borderRadius = 18);\n      break;\n    default:\n      break;\n  }\n\n  const hasSrc = src || srcSet;\n\n  return (\n    <div\n      {...restProps}\n      vkuiClass={classNames(\n        \"Avatar\",\n        `Avatar--type-${mode}`,\n        `Avatar--sz-${size}`,\n        shadow && \"Avatar--shadow\",\n        failedImage && \"Avatar--failed\"\n      )}\n      className={className}\n      ref={getRootRef}\n      role={hasSrc ? \"img\" : \"presentation\"}\n      aria-label={alt || ariaLabel}\n      onClick={!overlayIcon ? onClick : undefined}\n      style={{ ...style, width: size, height: size, borderRadius }}\n    >\n      {hasSrc && (\n        <img\n          crossOrigin={crossOrigin}\n          decoding={decoding}\n          height={height}\n          loading={loading}\n          referrerPolicy={referrerPolicy}\n          sizes={sizes}\n          src={src}\n          srcSet={srcSet}\n          useMap={useMap}\n          width={width}\n          ref={getRef}\n          onError={onImageError}\n          onLoad={onImageLoad}\n          vkuiClass=\"Avatar__img\"\n          alt=\"\"\n        />\n      )}\n      {children && <div vkuiClass=\"Avatar__children\">{children}</div>}\n      {overlayIcon && (\n        <Tappable\n          Component=\"button\"\n          vkuiClass={classNames(\n            \"Avatar__overlay\",\n            overlayAction === \"always\" && \"Avatar__overlay--visible\",\n            overlayMode === \"light\" && \"Avatar__overlay--light\",\n            overlayMode === \"dark\" && \"Avatar__overlay--dark\"\n          )}\n          hoverMode=\"Avatar__overlay--visible\"\n          focusVisibleMode=\"Avatar__overlay--focus-visible\"\n          hasActive={false}\n          onClick={onClick}\n        >\n          {overlayIcon}\n        </Tappable>\n      )}\n      {badge && (\n        <div\n          vkuiClass={classNames(\n            \"Avatar__badge\",\n            size >= 96 && \"Avatar__badge--large\",\n            badge !== \"online\" &&\n              badge !== \"online-mobile\" &&\n              \"Avatar__badge--shadow\"\n          )}\n        >\n          {badge === \"online\" ? (\n            <div vkuiClass=\"Avatar__badge-online\">\n              <Icon12Circle\n                width={size >= 72 ? 15 : 12}\n                height={size >= 72 ? 15 : 12}\n              />\n            </div>\n          ) : badge === \"online-mobile\" ? (\n            <div vkuiClass=\"Avatar__badge-online-mobile\">\n              <Icon12OnlineMobile\n                width={size >= 72 ? 9 : 8}\n                height={size >= 72 ? 15 : 12}\n              />\n            </div>\n          ) : (\n            badge\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { HasRootRef } from \"../../types\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { IOS, VKCOM } from \"../../lib/platform\";\nimport { withAdaptivity, AdaptivityProps } from \"../../hoc/withAdaptivity\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport \"./Tabs.css\";\n\nexport interface TabsProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    HasRootRef<HTMLDivElement>,\n    AdaptivityProps {\n  /**\n   * Задаёт вид кнопок.\n   *\n   * > ⚠️ Значения `\"buttons\"`, `\"segmented\"` устарели и будут удалены в 5.0.0. Вместо `\"buttons\"` используйте `\"secondary\"`.\n   * > Режим `\"segmented\"` переехал в отдельный компонент [`SegmentedControl`](https://vkcom.github.io/VKUI#/SegmentedControl),\n   * > поэтому используйте его вместо `Tabs`.\n   */\n  mode?: \"buttons\" | \"segmented\" | \"default\" | \"accent\" | \"secondary\";\n}\n\nconst warn = warnOnce(\"Tabs\");\n\nexport interface TabsContextProps {\n  mode: TabsProps[\"mode\"];\n  withGaps: boolean;\n}\n\nexport const TabsModeContext = React.createContext<TabsContextProps>({\n  mode: \"default\",\n  withGaps: false,\n});\n\nconst TabsComponent = ({\n  children,\n  mode = \"default\",\n  getRootRef,\n  sizeX,\n  ...restProps\n}: TabsProps) => {\n  const platform = usePlatform();\n\n  if (\n    (mode === \"buttons\" || mode === \"segmented\") &&\n    process.env.NODE_ENV === \"development\"\n  ) {\n    const expectedValueText =\n      mode === \"buttons\"\n        ? `значения \"secondary\"`\n        : \"компонент SegmentedControl\";\n    warn(\n      `mode=\"${mode}\" устарело и будет удалено в 5.0.0. Используйте ${expectedValueText}`\n    );\n  }\n\n  if (platform !== IOS && mode === \"segmented\") {\n    mode = \"default\";\n  }\n\n  if (mode === \"buttons\") {\n    mode = \"secondary\";\n  }\n\n  const withGaps = mode === \"accent\" || mode === \"secondary\";\n\n  return (\n    <div\n      {...restProps}\n      ref={getRootRef}\n      vkuiClass={classNames(\n        \"Tabs\",\n        (platform === IOS || platform === VKCOM) && `Tabs--${platform}`,\n        `Tabs--${mode}`,\n        withGaps && \"Tabs--withGaps\",\n        // TODO v5.0.0 новая адаптивность\n        `Tabs--sizeX-${sizeX}`\n      )}\n    >\n      <div vkuiClass=\"Tabs__in\">\n        <TabsModeContext.Provider value={{ mode, withGaps }}>\n          {children}\n        </TabsModeContext.Provider>\n      </div>\n    </div>\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Tabs\n */\nexport const Tabs = withAdaptivity(TabsComponent, { sizeX: true });\n\nTabs.displayName = \"Tabs\";\n","import * as React from \"react\";\nimport { Tappable } from \"../Tappable/Tappable\";\nimport { classNames } from \"../../lib/classNames\";\nimport { IOS, VKCOM } from \"../../lib/platform\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { TabsModeContext, TabsContextProps } from \"../Tabs/Tabs\";\nimport { Headline } from \"../Typography/Headline/Headline\";\nimport { Subhead } from \"../Typography/Subhead/Subhead\";\nimport \"./TabsItem.css\";\n\nexport interface TabsItemProps extends React.HTMLAttributes<HTMLElement> {\n  /**\n   * Добавляет иконку слева.\n   *\n   * - Для `mode=\"default\"` используйте иконки размером 24.\n   * - Для всех остальных `mode` используйте иконки размером 20.\n   */\n  before?: React.ReactNode;\n  /**\n   * Добавляет элемент слева от `after`.\n   *\n   * - `React.ReactElement` – либо [`Badge`](https://vkcom.github.io/VKUI/#/Badge) с параметром `mode=\"prominent\"`.\n   *   либо [`Counter`](https://vkcom.github.io/VKUI/#/Counter) с параметрами `mode=\"prominent\" size=\"s\"`.\n   * - `number` – для показа текстового блока с переданным числом.\n   */\n  status?: React.ReactElement | number;\n  /**\n   * Добавляет иконку справа.\n   *\n   * Например, `<Icon16Dropdown />`\n   */\n  after?: React.ReactNode;\n  selected?: boolean;\n  disabled?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/TabsItem\n */\nexport const TabsItem = ({\n  before,\n  children,\n  status,\n  after,\n  selected = false,\n  ...restProps\n}: TabsItemProps) => {\n  const platform = usePlatform();\n  const { sizeY } = useAdaptivity();\n  const { mode, withGaps }: TabsContextProps =\n    React.useContext(TabsModeContext);\n  let statusComponent = null;\n\n  if (status) {\n    statusComponent =\n      typeof status === \"number\" ? (\n        <Subhead\n          Component=\"span\"\n          vkuiClass=\"TabsItem__status TabsItem__status--count\"\n          weight=\"2\"\n        >\n          {status}\n        </Subhead>\n      ) : (\n        <span vkuiClass=\"TabsItem__status\">{status}</span>\n      );\n  }\n\n  return (\n    <Tappable\n      {...restProps}\n      vkuiClass={classNames(\n        \"TabsItem\",\n        (platform === IOS || platform === VKCOM) && `TabsItem--${platform}`,\n        mode && `TabsItem--${mode}`,\n        selected && \"TabsItem--selected\",\n        // TODO v5.0.0 новая адаптивность\n        sizeY && `TabsItem--sizeY-${sizeY}`,\n        withGaps && \"TabsItem--withGaps\"\n      )}\n      hoverMode=\"TabsItem--hover\"\n      activeMode=\"TabsItem--active\"\n      focusVisibleMode={mode === \"segmented\" ? \"outside\" : \"inside\"}\n      hasActive={mode === \"segmented\"}\n    >\n      {before && <div vkuiClass=\"TabsItem__before\">{before}</div>}\n      <Headline\n        Component=\"span\"\n        vkuiClass=\"TabsItem__label\"\n        level={mode === \"default\" ? \"1\" : \"2\"}\n        weight=\"2\"\n      >\n        {children}\n      </Headline>\n      {statusComponent}\n      {after && <div vkuiClass=\"TabsItem__after\">{after}</div>}\n      {mode === \"default\" && (\n        <div\n          vkuiClass=\"TabsItem__underline\"\n          aria-hidden\n          data-selected={selected}\n        />\n      )}\n    </Tappable>\n  );\n};\n","import { classNames } from \"../../lib/classNames\";\nimport { TappableProps, Tappable } from \"../Tappable/Tappable\";\nimport \"./Link.css\";\n\nexport interface LinkProps extends TappableProps {\n  /**\n   * Включает состояние `visited`, которое позволяет пользователю понять посещал ли он ссылку или нет\n   */\n  hasVisited?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Link\n */\nexport const Link = ({ hasVisited, children, ...restProps }: LinkProps) => {\n  return (\n    <Tappable\n      Component={restProps.href ? \"a\" : \"button\"}\n      {...restProps}\n      vkuiClass={classNames(\"Link\", hasVisited && \"Link--has-visited\")}\n      hasHover={false}\n      activeMode=\"opacity\"\n      focusVisibleMode=\"Link--focus-visible\"\n    >\n      {children}\n    </Tappable>\n  );\n};\n","import * as React from \"react\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { HasComponent, HasRef } from \"../../types\";\nimport \"./FormLayout.css\";\n\nconst preventDefault = (e: React.FormEvent) => e.preventDefault();\n\nexport type FormLayoutProps = React.AllHTMLAttributes<HTMLElement> &\n  HasRef<HTMLElement> &\n  HasComponent;\n\n/**\n * @see https://vkcom.github.io/VKUI/#/FormLayout\n */\nexport const FormLayout = ({\n  children,\n  Component = \"form\",\n  getRef,\n  onSubmit = preventDefault,\n  ...restProps\n}: FormLayoutProps) => {\n  const platform = usePlatform();\n  return (\n    <Component\n      {...restProps}\n      vkuiClass={getClassName(\"FormLayout\", platform)}\n      onSubmit={onSubmit}\n      ref={getRef}\n    >\n      <div vkuiClass=\"FormLayout__container\">{children}</div>\n      {Component === \"form\" && (\n        <input type=\"submit\" vkuiClass=\"FormLayout__submit\" value=\"\" />\n      )}\n    </Component>\n  );\n};\n","import * as React from \"react\";\nimport { HasComponent, HasRootRef } from \"../../types\";\nimport { classNames } from \"../../lib/classNames\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { hasReactNode, noop } from \"../../lib/utils\";\nimport { Subhead } from \"../Typography/Subhead/Subhead\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport { Removable, RemovableProps } from \"../Removable/Removable\";\nimport \"./FormItem.css\";\n\nexport interface FormItemProps\n  extends React.AllHTMLAttributes<HTMLElement>,\n    HasRootRef<HTMLElement>,\n    HasComponent,\n    RemovableProps {\n  top?: React.ReactNode;\n  bottom?: React.ReactNode;\n  status?: \"default\" | \"error\" | \"valid\";\n  /**\n   * Дает возможность удалить `FormItem`. Рекомендуется использовать только для `Input` или `Select`.\n   */\n  removable?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/FormItem\n */\nexport const FormItem = ({\n  children,\n  top,\n  bottom,\n  status = \"default\",\n  Component = \"div\",\n  removable,\n  onRemove = noop,\n  removePlaceholder = \"Удалить\",\n  getRootRef,\n  ...restProps\n}: FormItemProps) => {\n  const platform = usePlatform();\n  const rootEl = useExternRef(getRootRef);\n  const { sizeY } = useAdaptivity();\n\n  const wrappedChildren = (\n    <React.Fragment>\n      {hasReactNode(top) && <Subhead vkuiClass=\"FormItem__top\">{top}</Subhead>}\n      {children}\n      {hasReactNode(bottom) && (\n        <Caption vkuiClass=\"FormItem__bottom\">{bottom}</Caption>\n      )}\n    </React.Fragment>\n  );\n\n  return (\n    <Component\n      {...restProps}\n      ref={rootEl}\n      vkuiClass={classNames(\n        getClassName(\"FormItem\", platform), // TODO: v5 remove\n        `FormItem--${status}`,\n        `FormItem--sizeY-${sizeY}`,\n        hasReactNode(top) && \"FormItem--withTop\",\n        removable && \"FormItem--removable\"\n      )}\n    >\n      {removable ? (\n        <Removable\n          align=\"start\"\n          onRemove={(e) => {\n            if (rootEl?.current) {\n              onRemove(e, rootEl.current);\n            }\n          }}\n          removePlaceholder={removePlaceholder}\n        >\n          <div vkuiClass=\"FormItem__removable\">{wrappedChildren}</div>\n        </Removable>\n      ) : (\n        wrappedChildren\n      )}\n    </Component>\n  );\n};\n","import * as React from \"react\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { HasRef } from \"../../types\";\nimport \"./VisuallyHiddenInput.css\";\n\nexport interface VisuallyHiddenInputProps\n  extends React.InputHTMLAttributes<HTMLInputElement>,\n    HasRef<HTMLInputElement> {}\n\n/**\n * @description\n * Обертка над обычным `<input/>`; дает\n * скрыть его визуально и оставить\n * доступным для ассистивных технологий.\n */\nexport const VisuallyHiddenInput = ({\n  getRef,\n  ...restProps\n}: VisuallyHiddenInputProps) => {\n  const inputRef = useExternRef(getRef);\n\n  return (\n    <input {...restProps} vkuiClass=\"VisuallyHiddenInput\" ref={inputRef} />\n  );\n};\n","import { getClassName } from \"../../helpers/getClassName\";\nimport { classNames } from \"../../lib/classNames\";\nimport { callMultiple } from \"../../lib/callMultiple\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { HasRootRef } from \"../../types\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport {\n  VisuallyHiddenInput,\n  VisuallyHiddenInputProps,\n} from \"../VisuallyHiddenInput/VisuallyHiddenInput\";\nimport { useFocusVisible } from \"../../hooks/useFocusVisible\";\nimport { FocusVisible } from \"../FocusVisible/FocusVisible\";\nimport \"./Switch.css\";\n\nexport interface SwitchProps\n  extends VisuallyHiddenInputProps,\n    HasRootRef<HTMLLabelElement> {}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Switch\n */\nexport const Switch = ({\n  style,\n  className,\n  getRootRef,\n  ...restProps\n}: SwitchProps) => {\n  const platform = usePlatform();\n  const { sizeY } = useAdaptivity();\n  const { focusVisible, onBlur, onFocus } = useFocusVisible();\n\n  return (\n    <label\n      vkuiClass={classNames(\n        getClassName(\"Switch\", platform),\n        `Switch--sizeY-${sizeY}`,\n        restProps.disabled && \"Switch--disabled\",\n        focusVisible && \"Switch--focus-visible\"\n      )}\n      className={className}\n      style={style}\n      ref={getRootRef}\n      role=\"presentation\"\n    >\n      <VisuallyHiddenInput\n        {...restProps}\n        type=\"checkbox\"\n        vkuiClass=\"Switch__self\"\n        onBlur={callMultiple(onBlur, restProps.onBlur)}\n        onFocus={callMultiple(onFocus, restProps.onFocus)}\n      />\n      <span role=\"presentation\" vkuiClass=\"Switch__pseudo\" />\n      <FocusVisible mode=\"outside\" />\n    </label>\n  );\n};\n","import * as React from \"react\";\nimport { getClassName } from \"../../helpers/getClassName\";\nimport { Button, VKUIButtonProps } from \"../Button/Button\";\nimport { HasRef, HasRootRef } from \"../../types\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport { VisuallyHiddenInput } from \"../VisuallyHiddenInput/VisuallyHiddenInput\";\n\nexport interface FileProps\n  extends Omit<VKUIButtonProps, \"type\">,\n    Omit<React.InputHTMLAttributes<HTMLInputElement>, \"type\" | \"size\">,\n    HasRef<HTMLInputElement>,\n    HasRootRef<HTMLElement> {\n  /**\n   * @deprecated Будет удалено в 5.0.0. Используйте size\n   */\n  controlSize?: VKUIButtonProps[\"size\"];\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/File\n */\nexport const File = ({\n  children = \"Выберите файл\",\n  align = \"left\",\n  // TODO: v5.0.0 удалить controlSize\n  controlSize,\n  size,\n  mode,\n  stretched,\n  before,\n  after,\n  loading,\n  className,\n  style,\n  getRef,\n  getRootRef,\n  appearance,\n  ...restProps\n}: FileProps) => {\n  const platform = usePlatform();\n\n  return (\n    <Button\n      Component=\"label\"\n      align={align}\n      vkuiClass={getClassName(\"File\", platform)}\n      className={className}\n      stretched={stretched}\n      mode={mode}\n      appearance={appearance}\n      // TODO: v5.0.0 удалить controlSize\n      size={size ?? controlSize}\n      before={before}\n      after={after}\n      loading={loading}\n      style={style}\n      getRootRef={getRootRef}\n      disabled={restProps.disabled}\n    >\n      <VisuallyHiddenInput\n        {...restProps}\n        vkuiClass=\"File__input\"\n        type=\"file\"\n        getRef={getRef}\n      />\n      {children}\n    </Button>\n  );\n};\n","import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { HasComponent, HasRootRef } from \"../../types\";\nimport { useAdaptivity } from \"../../hooks/useAdaptivity\";\nimport \"./FormField.css\";\n\nexport const FormFieldMode = {\n  default: \"default\",\n  plain: \"plain\",\n} as const;\n\nexport interface FormFieldProps {\n  status?: \"default\" | \"error\" | \"valid\";\n  /**\n   * Добавляет иконку слева.\n   *\n   * Рекомендации:\n   *\n   * - Используйте следующие размеры иконок `12` | `16` | `20` | `24` | `28`.\n   * - Используйте [IconButton](https://vkcom.github.io/VKUI/#/IconButton), если вам нужна кликабельная иконка.\n   */\n  before?: React.ReactNode;\n  /**\n   * Добавляет иконку справа.\n   *\n   * Рекомендации:\n   *\n   * - Используйте следующие размеры иконок `12` | `16` | `20` | `24` | `28`.\n   * - Используйте [IconButton](https://vkcom.github.io/VKUI/#/IconButton), если вам нужна кликабельная иконка.\n   */\n  after?: React.ReactNode;\n  mode?: keyof typeof FormFieldMode;\n}\n\ninterface FormFieldOwnProps\n  extends React.AllHTMLAttributes<HTMLElement>,\n    HasRootRef<HTMLElement>,\n    HasComponent,\n    FormFieldProps {\n  disabled?: boolean;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/FormField\n */\nexport const FormField = ({\n  Component = \"div\",\n  status = \"default\",\n  children,\n  getRootRef,\n  before,\n  after,\n  disabled,\n  mode = FormFieldMode.default,\n  ...restProps\n}: FormFieldOwnProps) => {\n  const { sizeY } = useAdaptivity();\n  const [hover, setHover] = React.useState(false);\n\n  const handleMouseEnter = (e: MouseEvent) => {\n    e.stopPropagation();\n    setHover(true);\n  };\n\n  const handleMouseLeave = (e: MouseEvent) => {\n    e.stopPropagation();\n    setHover(false);\n  };\n\n  return (\n    <Component\n      role=\"presentation\"\n      {...restProps}\n      ref={getRootRef}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      vkuiClass={classNames(\n        \"FormField\",\n        `FormField--${mode}`,\n        `FormField--status-${status}`,\n        `FormField--sizeY-${sizeY}`, // TODO v5.0.0 поправить под новую адаптивность\n        disabled && \"FormField--disabled\",\n        !disabled && hover && \"FormField--hover\"\n      )}\n    >\n      {before && (\n        <div role=\"presentation\" vkuiClass=\"FormField__before\">\n          {before}\n        </div>\n      )}\n      {children}\n      {after && (\n        <div role=\"presentation\" vkuiClass=\"FormField__after\">\n          {after}\n        </div>\n      )}\n      <div role=\"presentation\" vkuiClass=\"FormField__border\" />\n    </Component>\n  );\n};\n","import * as React from \"react\";\nimport { classNames } from \"../../lib/classNames\";\nimport { FormField, FormFieldProps } from \"../FormField/FormField\";\nimport { HasAlign, HasRef, HasRootRef } from \"../../types\";\nimport { withAdaptivity, AdaptivityProps } from \"../../hoc/withAdaptivity\";\nimport \"./Input.css\";\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement>,\n    HasRef<HTMLInputElement>,\n    HasRootRef<HTMLDivElement>,\n    HasAlign,\n    AdaptivityProps,\n    FormFieldProps {}\n\nconst InputComponent = ({\n  type = \"text\",\n  align,\n  getRef,\n  className,\n  getRootRef,\n  sizeY,\n  style,\n  before,\n  after,\n  status,\n  ...restProps\n}: InputProps) => {\n  return (\n    <FormField\n      vkuiClass={classNames(\n        \"Input\",\n        !!align && `Input--${align}`,\n        `Input--sizeY-${sizeY}`, // TODO v5.0.0 поправить под новую адаптивность\n        before && \"Input--hasBefore\",\n        after && \"Input--hasAfter\"\n      )}\n      style={style}\n      className={className}\n      getRootRef={getRootRef}\n      before={before}\n      after={after}\n      disabled={restProps.disabled}\n      status={status}\n    >\n      <input {...restProps} type={type} vkuiClass=\"Input__el\" ref={getRef} />\n    </FormField>\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Input\n */\nexport const Input = withAdaptivity(InputComponent, {\n  sizeY: true,\n});\n\nInput.displayName = \"Input\";\n","import * as React from \"react\";\nimport { ACTIVE_EFFECT_DELAY, Tappable } from \"../Tappable/Tappable\";\nimport { classNames } from \"../../lib/classNames\";\nimport { IOS, VKCOM } from \"../../lib/platform\";\nimport { HasRef, HasRootRef } from \"../../types\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport {\n  withAdaptivity,\n  AdaptivityProps,\n  SizeType,\n} from \"../../hoc/withAdaptivity\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport { VisuallyHiddenInput } from \"../VisuallyHiddenInput/VisuallyHiddenInput\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport { Headline } from \"../Typography/Headline/Headline\";\nimport { Text } from \"../Typography/Text/Text\";\nimport \"./Radio.css\";\n\nconst RadioIcon = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 24 24\"\n      aria-hidden\n      {...props}\n    >\n      <circle\n        cx=\"12\"\n        cy=\"12\"\n        r=\"11\"\n        stroke=\"currentColor\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n      />\n      <circle\n        cx=\"12\"\n        cy=\"12\"\n        r=\"7.5\"\n        vkuiClass=\"Radio__pin\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n\nexport interface RadioProps\n  extends React.InputHTMLAttributes<HTMLInputElement>,\n    HasRef<HTMLInputElement>,\n    HasRootRef<HTMLLabelElement>,\n    AdaptivityProps {\n  description?: React.ReactNode;\n}\n\nconst RadioComponent = ({\n  children,\n  description,\n  style,\n  className,\n  getRootRef,\n  sizeY,\n  ...restProps\n}: RadioProps) => {\n  const platform = usePlatform();\n\n  const RadioTypography =\n    platform === VKCOM || sizeY === SizeType.COMPACT ? Text : Headline;\n\n  return (\n    <Tappable\n      Component=\"label\"\n      style={style}\n      className={className}\n      vkuiClass={classNames(\"Radio\", `Radio--sizeY-${sizeY}`)}\n      activeEffectDelay={platform === IOS ? 100 : ACTIVE_EFFECT_DELAY}\n      disabled={restProps.disabled}\n      getRootRef={getRootRef}\n    >\n      <VisuallyHiddenInput\n        {...restProps}\n        vkuiClass=\"Radio__input\"\n        type=\"radio\"\n      />\n      <div vkuiClass=\"Radio__container\">\n        <RadioIcon vkuiClass=\"Radio__icon\" />\n        <RadioTypography vkuiClass=\"Radio__content\" Component=\"div\">\n          <div vkuiClass=\"Radio__children\">{children}</div>\n          {hasReactNode(description) && (\n            <Caption vkuiClass=\"Radio__description\">{description}</Caption>\n          )}\n        </RadioTypography>\n      </div>\n    </Tappable>\n  );\n};\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Radio\n */\nexport const Radio = withAdaptivity(RadioComponent, {\n  sizeY: true,\n});\n\nRadio.displayName = \"Radio\";\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon20CheckBoxOn\", \"check_box_on_20\", \"0 0 20 20\", '<symbol viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" id=\"check_box_on_20\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2.436 4.184C2 5.04 2 6.16 2 8.4v3.2c0 2.24 0 3.36.436 4.216a4 4 0 0 0 1.748 1.748C5.04 18 6.16 18 8.4 18h3.2c2.24 0 3.36 0 4.216-.436a4 4 0 0 0 1.748-1.748C18 14.96 18 13.84 18 11.6V8.4c0-2.24 0-3.36-.436-4.216a4 4 0 0 0-1.748-1.748C14.96 2 13.84 2 11.6 2H8.4c-2.24 0-3.36 0-4.216.436a4 4 0 0 0-1.748 1.748Zm12.2 3.803a.9.9 0 1 0-1.272-1.274l-4.673 4.665-2.055-2.052A.9.9 0 0 0 5.364 10.6l2.691 2.687a.9.9 0 0 0 1.272 0l5.309-5.3Z\" fill=\"currentColor\" /></symbol>', 20, 20);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon20CheckBoxOff\", \"check_box_off_20\", \"0 0 20 20\", '<symbol viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" id=\"check_box_off_20\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M4.046 2.534C4.788 2.138 5.517 2 7.128 2h5.744c1.61 0 2.34.138 3.082.534.65.348 1.164.862 1.512 1.512.396.742.534 1.471.534 3.082v5.744c0 1.61-.138 2.34-.534 3.082a3.644 3.644 0 0 1-1.512 1.512c-.742.396-1.472.534-3.082.534H7.128c-1.61 0-2.34-.138-3.082-.534a3.644 3.644 0 0 1-1.512-1.512C2.138 15.212 2 14.482 2 12.872V7.128c0-1.61.138-2.34.534-3.082a3.645 3.645 0 0 1 1.512-1.512Zm3.082.966c-1.531 0-1.962.136-2.374.357a2.145 2.145 0 0 0-.897.897c-.22.412-.357.843-.357 2.374v5.744c0 1.531.136 1.962.357 2.374.208.389.508.69.897.897.412.22.843.357 2.374.357h5.744c1.531 0 1.962-.136 2.374-.357.389-.208.69-.508.897-.897.22-.412.357-.843.357-2.374V7.128c0-1.531-.136-1.962-.357-2.374a2.145 2.145 0 0 0-.897-.897c-.412-.22-.843-.357-2.374-.357H7.128Z\" fill=\"currentColor\" /></symbol>', 20, 20);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon20CheckBoxIndetermanate\", \"check_box_indetermanate_20\", \"0 0 20 20\", '<symbol fill=\"none\" viewBox=\"0 0 20 20\" xmlns=\"http://www.w3.org/2000/svg\" id=\"check_box_indetermanate_20\"><path clip-rule=\"evenodd\" d=\"M2 8.4c0-2.24 0-3.36.436-4.216a4 4 0 0 1 1.748-1.748C5.04 2 6.16 2 8.4 2h3.2c2.24 0 3.36 0 4.216.436a4 4 0 0 1 1.748 1.748C18 5.04 18 6.16 18 8.4v3.2c0 2.24 0 3.36-.436 4.216a4 4 0 0 1-1.748 1.748C14.96 18 13.84 18 11.6 18H8.4c-2.24 0-3.36 0-4.216-.436a4 4 0 0 1-1.748-1.748C2 14.96 2 13.84 2 11.6zm4.4.7a.9.9 0 1 0 0 1.8h7.2a.9.9 0 1 0 0-1.8z\" fill=\"currentColor\" fill-rule=\"evenodd\" /></symbol>', 20, 20);\n","import * as React from \"react\";\nimport { ACTIVE_EFFECT_DELAY, Tappable } from \"../Tappable/Tappable\";\nimport { classNames } from \"../../lib/classNames\";\nimport { IOS, VKCOM } from \"../../lib/platform\";\n\nimport {\n  Icon20CheckBoxOn,\n  Icon20CheckBoxOff,\n  Icon24CheckBoxOn,\n  Icon24CheckBoxOff,\n  Icon20CheckBoxIndetermanate,\n} from \"@vkontakte/icons\";\n\nimport { HasRef, HasRootRef } from \"../../types\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport {\n  withAdaptivity,\n  AdaptivityProps,\n  SizeType,\n} from \"../../hoc/withAdaptivity\";\nimport { Text } from \"../Typography/Text/Text\";\nimport { hasReactNode } from \"../../lib/utils\";\nimport { Caption } from \"../Typography/Caption/Caption\";\nimport { useExternRef } from \"../../hooks/useExternRef\";\nimport { VisuallyHiddenInput } from \"../VisuallyHiddenInput/VisuallyHiddenInput\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport \"./Checkbox.css\";\n\nexport interface CheckboxProps\n  extends React.InputHTMLAttributes<HTMLInputElement>,\n    HasRootRef<HTMLLabelElement>,\n    HasRef<HTMLInputElement>,\n    AdaptivityProps {\n  description?: React.ReactNode;\n  indeterminate?: boolean;\n  defaultIndeterminate?: boolean;\n}\n\nconst warn = warnOnce(\"Checkbox\");\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Checkbox\n */\nexport const Checkbox = ({\n  children,\n  className,\n  style,\n  getRootRef,\n  getRef,\n  description,\n  indeterminate,\n  defaultIndeterminate,\n  sizeY,\n  onChange,\n  ...restProps\n}: CheckboxProps) => {\n  const inputRef = useExternRef(getRef);\n  const platform = usePlatform();\n\n  React.useEffect(() => {\n    const indeterminateValue =\n      indeterminate === undefined ? defaultIndeterminate : indeterminate;\n\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(indeterminateValue);\n    }\n  }, [defaultIndeterminate, indeterminate, inputRef]);\n\n  const handleChange: CheckboxProps[\"onChange\"] = React.useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (\n        defaultIndeterminate !== undefined &&\n        indeterminate === undefined &&\n        restProps.checked === undefined &&\n        inputRef.current\n      ) {\n        inputRef.current.indeterminate = false;\n      }\n      if (indeterminate !== undefined && inputRef.current) {\n        inputRef.current.indeterminate = indeterminate;\n      }\n      onChange && onChange(event);\n    },\n    [defaultIndeterminate, indeterminate, restProps.checked, onChange, inputRef]\n  );\n\n  if (process.env.NODE_ENV === \"development\") {\n    if (defaultIndeterminate && restProps.defaultChecked) {\n      warn(\n        \"defaultIndeterminate и defaultChecked не могут быть true одновременно\",\n        \"error\"\n      );\n    }\n\n    if (indeterminate && restProps.checked) {\n      warn(\"indeterminate и checked не могут быть true одновременно\", \"error\");\n    }\n\n    if (restProps.defaultChecked && restProps.checked) {\n      warn(\"defaultChecked и checked не могут быть true одновременно\", \"error\");\n    }\n  }\n\n  return (\n    <Tappable\n      Component=\"label\"\n      vkuiClass={classNames(\n        \"Checkbox\",\n        `Checkbox--sizeY-${sizeY}`,\n        !(hasReactNode(children) || hasReactNode(description)) &&\n          `Checkbox--simple`\n      )}\n      className={className}\n      style={style}\n      disabled={restProps.disabled}\n      activeEffectDelay={platform === IOS ? 100 : ACTIVE_EFFECT_DELAY}\n      getRootRef={getRootRef}\n    >\n      <VisuallyHiddenInput\n        {...restProps}\n        onChange={handleChange}\n        type=\"checkbox\"\n        vkuiClass=\"Checkbox__input\"\n        getRef={inputRef}\n      />\n      <div vkuiClass=\"Checkbox__icon Checkbox__icon--on\">\n        {sizeY === SizeType.COMPACT || platform === VKCOM ? (\n          <Icon20CheckBoxOn aria-hidden />\n        ) : (\n          <Icon24CheckBoxOn aria-hidden />\n        )}\n      </div>\n      <div vkuiClass=\"Checkbox__icon Checkbox__icon--off\">\n        {sizeY === SizeType.COMPACT || platform === VKCOM ? (\n          <Icon20CheckBoxOff aria-hidden />\n        ) : (\n          <Icon24CheckBoxOff aria-hidden />\n        )}\n      </div>\n      <div vkuiClass=\"Checkbox__icon Checkbox__icon--indeterminate\">\n        <Icon20CheckBoxIndetermanate\n          aria-hidden\n          width={sizeY === SizeType.COMPACT || platform === VKCOM ? 20 : 24}\n          height={sizeY === SizeType.COMPACT || platform === VKCOM ? 20 : 24}\n        />\n      </div>\n      <Text vkuiClass=\"Checkbox__content\" Component=\"div\">\n        <div vkuiClass=\"Checkbox__children\">{children}</div>\n        {hasReactNode(description) && (\n          <Caption vkuiClass=\"Checkbox__description\">{description}</Caption>\n        )}\n      </Text>\n    </Tappable>\n  );\n};\n\n// eslint-disable-next-line import/no-default-export\nexport default withAdaptivity(Checkbox, {\n  sizeY: true,\n});\n","import * as React from \"react\";\nimport { HasRootRef } from \"../../types\";\nimport \"./Div.css\";\n\nexport interface DivProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    HasRootRef<HTMLDivElement> {}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/Div\n */\nexport const Div = ({ children, getRootRef, ...restProps }: DivProps) => {\n  return (\n    <div {...restProps} ref={getRootRef} vkuiClass=\"Div\">\n      {children}\n    </div>\n  );\n};\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon28ArrowLeftOutline\", \"arrow_left_outline_28\", \"0 0 28 28\", '<symbol viewBox=\"0 0 28 28\" xmlns=\"http://www.w3.org/2000/svg\" id=\"arrow_left_outline_28\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M28 0H0v28h28z\" /><path d=\"M12.293 6.293a1 1 0 0 1 1.414 1.414L8.414 13H22a1 1 0 0 1 .993.883L23 14a1 1 0 0 1-1 1H8.414l5.293 5.293a1 1 0 0 1 .083 1.32l-.083.094a1 1 0 0 1-1.414 0l-7-7-.073-.082A1.005 1.005 0 0 1 5 14l.004.09A1.006 1.006 0 0 1 5 14.02V14a1.02 1.02 0 0 1 .125-.484.878.878 0 0 1 .071-.111.999.999 0 0 1 .097-.112l-.08.09c.025-.031.051-.062.08-.09Z\" fill=\"currentColor\" fill-rule=\"nonzero\" /></g></symbol>', 28, 28);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon28ChevronLeftOutline\", \"chevron_left_outline_28\", \"0 0 28 28\", '<symbol fill=\"none\" viewBox=\"0 0 28 28\" xmlns=\"http://www.w3.org/2000/svg\" id=\"chevron_left_outline_28\"><path d=\"m12.414 14 5.793-5.793a1 1 0 0 0-1.414-1.414l-6.5 6.5a1 1 0 0 0 0 1.414l6.5 6.5a1 1 0 0 0 1.414-1.414z\" fill=\"currentColor\" /></symbol>', 28, 28);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon28ChevronBack\", \"chevron_back_28\", \"0 0 20 28\", '<symbol viewBox=\"0 0 20 28\" xmlns=\"http://www.w3.org/2000/svg\" id=\"chevron_back_28\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h20v28H0z\" /><path d=\"M4.56 12.94 13 4.5a1.414 1.414 0 0 1 2 2L7.5 14l7.5 7.5a1.414 1.414 0 0 1-2 2l-8.44-8.44a1.5 1.5 0 0 1 0-2.12Z\" fill=\"currentColor\" /></g></symbol>', 20, 28);\n","import * as React from \"react\";\nimport {\n  Icon28ChevronBack,\n  Icon28ChevronLeftOutline,\n  Icon28ArrowLeftOutline,\n} from \"@vkontakte/icons\";\nimport {\n  PanelHeaderButton,\n  PanelHeaderButtonProps,\n} from \"../PanelHeaderButton/PanelHeaderButton\";\nimport { ANDROID, VKCOM, IOS } from \"../../lib/platform\";\nimport { usePlatform } from \"../../hooks/usePlatform\";\nimport {\n  withAdaptivity,\n  SizeType,\n  AdaptivityProps,\n} from \"../../hoc/withAdaptivity\";\nimport { classNames } from \"../../lib/classNames\";\nimport \"./PanelHeaderBack.css\";\n\nexport type PanelHeaderBackProps = PanelHeaderButtonProps &\n  AdaptivityProps & {\n    \"aria-label\"?: string;\n  };\n\n/**\n * @see https://vkcom.github.io/VKUI/#/PanelHeaderBack\n */\nexport const PanelHeaderBackComponent = ({\n  label,\n  sizeX,\n  \"aria-label\": ariaLabel = \"Назад\",\n  ...restProps\n}: PanelHeaderButtonProps & AdaptivityProps) => {\n  const platform = usePlatform();\n  const showLabel =\n    platform === VKCOM || (platform === IOS && sizeX === SizeType.REGULAR);\n\n  return (\n    <PanelHeaderButton\n      {...restProps}\n      aria-label={ariaLabel}\n      vkuiClass={classNames(\n        \"PanelHeaderBack\",\n        platform === IOS && \"PanelHeaderBack--ios\",\n        platform === VKCOM && \"PanelHeaderBack--vkcom\",\n        showLabel && !!label && \"PanelHeaderBack--has-label\"\n      )}\n      label={showLabel && label}\n    >\n      {platform === ANDROID && <Icon28ArrowLeftOutline />}\n      {platform === VKCOM && <Icon28ChevronLeftOutline />}\n      {platform === IOS && <Icon28ChevronBack />}\n    </PanelHeaderButton>\n  );\n};\n\nexport const PanelHeaderBack = React.memo(\n  withAdaptivity(PanelHeaderBackComponent, {\n    sizeX: true,\n  })\n);\n\nPanelHeaderBack.displayName = \"PanelHeaderBack\";\n","import * as React from \"react\";\nimport vkBridge, { Insets as BridgeInsets } from \"@vkontakte/vk-bridge\";\nimport { useIsomorphicLayoutEffect } from \"../lib/useIsomorphicLayoutEffect\";\n\nexport interface Insets {\n  bottom: BridgeInsets[\"bottom\"] | null;\n  top: BridgeInsets[\"top\"] | null;\n  left: BridgeInsets[\"left\"] | null;\n  right: BridgeInsets[\"right\"] | null;\n}\n\nlet initialState: Insets = {\n  bottom: null,\n  top: null,\n  left: null,\n  right: null,\n};\n\ninterface BridgeEvent {\n  detail: {\n    type: string;\n    data: {\n      [index: string]: any;\n    };\n  };\n}\n\nfunction resolveInsets(e: BridgeEvent): Insets | null {\n  const { type, data } = e.detail;\n  switch (type) {\n    case \"VKWebAppUpdateConfig\":\n    case \"VKWebAppUpdateInsets\": // Устаревшее событие vk-bridge\n      const { insets } = data;\n      if (insets) {\n        return {\n          ...insets,\n          bottom: insets.bottom > 150 ? 0 : insets.bottom, // если больше 150 – значит открылась клава и она сама работает как инсет, то есть наш нужно занулить\n        };\n      }\n  }\n  return null;\n}\n\nvkBridge.subscribe((e: BridgeEvent) => {\n  const insets = resolveInsets(e);\n  if (insets) {\n    initialState = insets;\n  }\n});\n\nexport function useInsets(): Insets {\n  const [insets, setInsets] = React.useState<Insets>(initialState);\n\n  useIsomorphicLayoutEffect(() => {\n    function connectListener(e: BridgeEvent) {\n      const insets = resolveInsets(e);\n      if (insets) {\n        setInsets(insets);\n      }\n    }\n\n    vkBridge.subscribe(connectListener);\n    return () => {\n      vkBridge.unsubscribe(connectListener);\n    };\n  }, []);\n\n  return insets;\n}\n","import * as React from \"react\";\nimport { useDOM } from \"../../lib/dom\";\nimport { classNames } from \"../../lib/classNames\";\nimport { AppRootContext } from \"./AppRootContext\";\nimport {\n  withAdaptivity,\n  SizeType,\n  AdaptivityProps,\n} from \"../../hoc/withAdaptivity\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { classScopingMode } from \"../../lib/classScopingMode\";\nimport { IconSettingsProvider } from \"@vkontakte/icons\";\nimport {\n  ElementScrollController,\n  GlobalScrollController,\n} from \"./ScrollContext\";\nimport { noop } from \"../../lib/utils\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport { useKeyboardInputTracker } from \"../../hooks/useKeyboardInputTracker\";\nimport { useInsets } from \"../../hooks/useInsets\";\nimport { Insets } from \"@vkontakte/vk-bridge\";\nimport { ConfigProviderContext } from \"../ConfigProvider/ConfigProviderContext\";\nimport { isRefObject } from \"../../lib/isRefObject\";\nimport \"./AppRoot.css\";\n\n// Используйте classList, но будьте осторожны\n/* eslint-disable no-restricted-properties */\n\nexport interface AppRootProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    Pick<AdaptivityProps, \"sizeX\" | \"hasMouse\"> {\n  /** @deprecated Use mode=\"embedded\" */\n  embedded?: boolean;\n  /** Режим встраивания */\n  mode?: \"partial\" | \"embedded\" | \"full\";\n  window?: Window;\n  /** Убирает классы без префикса (.Button) */\n  noLegacyClasses?: boolean;\n  scroll?: \"global\" | \"contain\";\n  /** Элемент используемый в качестве root для порталов\n   * При передаче своего элемента необходимо задать ему class=\"vkui__portal-root\" и добавить в DOM\n   */\n  // TODO: v5.0.0 изменить тип на HTMLElement\n  portalRoot?: HTMLDivElement | React.RefObject<HTMLDivElement> | null;\n  /** Disable portal for components */\n  disablePortal?: boolean;\n}\n\nconst warn = warnOnce(\"AppRoot\");\n\n/**\n * @see https://vkcom.github.io/VKUI/#/AppRoot\n */\nexport const AppRoot = withAdaptivity<AppRootProps>(\n  ({\n    children,\n    mode: _mode,\n    embedded: _embedded,\n    sizeX,\n    hasMouse,\n    noLegacyClasses = false,\n    scroll = \"global\",\n    portalRoot: portalRootProp = null,\n    disablePortal,\n    ...props\n  }) => {\n    // normalize mode\n    const mode = _mode || (_embedded ? \"embedded\" : \"full\");\n    const isKeyboardInputActive = useKeyboardInputTracker();\n    const rootRef = React.useRef<HTMLDivElement | null>(null);\n    const [portalRoot, setPortalRoot] = React.useState<HTMLDivElement | null>(\n      null\n    );\n    const { document } = useDOM();\n    const insets = useInsets();\n    const { appearance } = React.useContext(ConfigProviderContext);\n\n    classScopingMode.noConflict = noLegacyClasses;\n\n    if (process.env.NODE_ENV === \"development\") {\n      if (scroll !== \"global\" && mode !== \"embedded\") {\n        warn(\n          `Свойство scroll=\"${scroll}\" поддерживается только в режиме embedded`,\n          \"error\"\n        );\n      }\n      if (_mode && _embedded) {\n        warn(`Свойство mode=\"${mode}\" приоритетнее, чем \"embedded\"`);\n      }\n    }\n\n    // setup portal\n    useIsomorphicLayoutEffect(() => {\n      let portal: HTMLDivElement | null = null;\n      if (portalRootProp) {\n        if (isRefObject(portalRootProp)) {\n          portal = portalRootProp.current;\n        } else {\n          portal = portalRootProp;\n        }\n      }\n      if (!portal) {\n        portal = document!.createElement(\"div\");\n        portal.classList.add(\"vkui__portal-root\");\n        document!.body.appendChild(portal);\n      }\n      setPortalRoot(portal);\n      return () => {\n        portal?.parentElement?.removeChild(portal);\n      };\n    }, [portalRootProp]);\n\n    // setup root classes\n    useIsomorphicLayoutEffect(() => {\n      if (mode === \"partial\") {\n        return noop;\n      }\n\n      const parent = rootRef.current?.parentElement;\n      const classes = [\"vkui__root\"].concat(\n        mode === \"embedded\" ? \"vkui__root--embedded\" : []\n      );\n      parent?.classList.add(...classes);\n\n      return () => {\n        parent?.classList.remove(...classes);\n      };\n    }, []);\n\n    useIsomorphicLayoutEffect(() => {\n      if (mode === \"full\") {\n        document!.documentElement.classList.add(\"vkui\");\n\n        return () => {\n          document!.documentElement.classList.remove(\"vkui\");\n        };\n      }\n\n      return undefined;\n    }, [document, mode]);\n\n    // setup insets\n    useIsomorphicLayoutEffect(() => {\n      if (mode === \"partial\" || !rootRef.current?.parentElement) {\n        return noop;\n      }\n\n      const parent = rootRef.current.parentElement;\n\n      for (const key in insets) {\n        if (\n          insets.hasOwnProperty(key) &&\n          typeof insets[key as keyof Insets] === \"number\"\n        ) {\n          const inset = insets[key as keyof Insets];\n          parent.style.setProperty(`--safe-area-inset-${key}`, `${inset}px`);\n          portalRoot &&\n            portalRoot.style.setProperty(\n              `--safe-area-inset-${key}`,\n              `${inset}px`\n            );\n        }\n      }\n\n      return () => {\n        for (const key in insets) {\n          if (insets.hasOwnProperty(key)) {\n            parent.style.removeProperty(`--safe-area-inset-${key}`);\n            portalRoot &&\n              portalRoot.style.removeProperty(`--safe-area-inset-${key}`);\n          }\n        }\n      };\n    }, [insets, portalRoot]);\n\n    // adaptivity handler\n    useIsomorphicLayoutEffect(() => {\n      if (mode === \"partial\" || sizeX !== SizeType.REGULAR) {\n        return noop;\n      }\n      const container =\n        mode === \"embedded\" ? rootRef.current?.parentElement : document!.body;\n      container?.classList.add(\"vkui--sizeX-regular\");\n      return () => container?.classList.remove(\"vkui--sizeX-regular\");\n    }, [sizeX]);\n\n    useIsomorphicLayoutEffect(() => {\n      if (mode !== \"full\" || appearance === undefined) {\n        return noop;\n      }\n      document!.documentElement.style.setProperty(\"color-scheme\", appearance);\n\n      return () =>\n        document!.documentElement.style.removeProperty(\"color-scheme\");\n    }, [appearance]);\n\n    const ScrollController = React.useMemo(\n      () =>\n        scroll === \"contain\" ? ElementScrollController : GlobalScrollController,\n      [scroll]\n    );\n\n    const content = (\n      <AppRootContext.Provider\n        value={{\n          appRoot: rootRef,\n          portalRoot,\n          embedded: mode === \"embedded\",\n          keyboardInput: isKeyboardInputActive,\n          mode,\n          disablePortal,\n        }}\n      >\n        <ScrollController elRef={rootRef}>\n          <IconSettingsProvider\n            classPrefix=\"vkui\"\n            globalClasses={!noLegacyClasses}\n          >\n            {children}\n          </IconSettingsProvider>\n        </ScrollController>\n      </AppRootContext.Provider>\n    );\n\n    return mode === \"partial\" ? (\n      content\n    ) : (\n      <div\n        ref={rootRef}\n        vkuiClass={classNames(\"AppRoot\", !hasMouse && \"AppRoot--no-mouse\")}\n        {...props}\n      >\n        {content}\n      </div>\n    );\n  },\n  {\n    sizeX: true,\n    hasMouse: true,\n  }\n);\n\nAppRoot.displayName = \"AppRoot\";\n","import * as React from \"react\";\nimport { Keys, pressedKey } from \"../lib/accessibility\";\nimport { useDOM } from \"../lib/dom\";\nimport { useGlobalEventListener } from \"./useGlobalEventListener\";\n\nexport const ENABLE_KEYBOARD_INPUT_EVENT_NAME = \"enableKeyboardInput\";\nexport const DISABLE_KEYBOARD_INPUT_EVENT_NAME = \"disableKeyboardInput\";\n\nexport function useKeyboardInputTracker(): boolean {\n  const { document } = useDOM();\n\n  const [isKeyboardInputActive, toggleKeyboardInput] =\n    React.useState<boolean>(false);\n\n  const enableKeyboardInput = React.useCallback(() => {\n    toggleKeyboardInput(true);\n  }, []);\n\n  const handleKeydown = React.useCallback(\n    (e: KeyboardEvent) => {\n      if (pressedKey(e) === Keys.TAB) {\n        enableKeyboardInput();\n      }\n    },\n    [enableKeyboardInput]\n  );\n\n  const disableKeyboardInput = React.useCallback(() => {\n    toggleKeyboardInput(false);\n  }, []);\n\n  const eventOptions = {\n    passive: true,\n    capture: true,\n  };\n\n  useGlobalEventListener(document, \"keydown\", handleKeydown, eventOptions);\n  useGlobalEventListener(\n    document,\n    \"mousedown\",\n    disableKeyboardInput,\n    eventOptions\n  );\n  useGlobalEventListener(\n    document,\n    \"touchstart\",\n    disableKeyboardInput,\n    eventOptions\n  );\n  useGlobalEventListener(\n    document,\n    ENABLE_KEYBOARD_INPUT_EVENT_NAME,\n    enableKeyboardInput,\n    eventOptions\n  );\n  useGlobalEventListener(\n    document,\n    DISABLE_KEYBOARD_INPUT_EVENT_NAME,\n    disableKeyboardInput,\n    eventOptions\n  );\n\n  return isKeyboardInputActive;\n}\n","import * as React from \"react\";\nimport vkBridge from \"@vkontakte/vk-bridge\";\nimport { useIsomorphicLayoutEffect } from \"../lib/useIsomorphicLayoutEffect\";\n\nexport interface BridgeAdaptivity {\n  type: \"\" | \"force_mobile\" | \"force_mobile_compact\" | \"adaptive\";\n  viewportWidth: number;\n  viewportHeight: number;\n}\n\ninterface BridgeEvent {\n  detail: {\n    type: string;\n    data: {\n      [index: string]: any;\n    };\n  };\n}\n\nlet initialState: BridgeAdaptivity = {\n  type: \"\",\n  viewportWidth: 0,\n  viewportHeight: 0,\n};\n\nfunction resolveAdaptivity(e: BridgeEvent): BridgeAdaptivity | null {\n  const { type, data } = e.detail;\n\n  if (type !== \"VKWebAppUpdateConfig\" || !data) {\n    return null;\n  }\n\n  const {\n    adaptivity,\n    viewport_width: viewportWidth,\n    viewport_height: viewportHeight,\n  } = data;\n\n  const bridgeAdaptivity: BridgeAdaptivity = {\n    type: \"\",\n    viewportWidth: isFinite(viewportWidth) ? +viewportWidth : 0,\n    viewportHeight: isFinite(viewportHeight) ? +viewportHeight : 0,\n  };\n\n  switch (adaptivity) {\n    case \"force_mobile\":\n    case \"force_mobile_compact\":\n    case \"adaptive\":\n      bridgeAdaptivity.type = adaptivity;\n  }\n\n  return bridgeAdaptivity;\n}\n\nvkBridge.subscribe((e: BridgeEvent) => {\n  const bridgeAdaptivity = resolveAdaptivity(e);\n\n  if (bridgeAdaptivity) {\n    initialState = bridgeAdaptivity;\n  }\n});\n\nexport function useBridgeAdaptivity(): BridgeAdaptivity {\n  const [bridgeAdaptivity, setBridgeAdaptivity] =\n    React.useState<BridgeAdaptivity>(initialState);\n\n  useIsomorphicLayoutEffect(() => {\n    function bridgeListener(e: BridgeEvent) {\n      const newBridgeAdaptivity = resolveAdaptivity(e);\n\n      if (newBridgeAdaptivity) {\n        setBridgeAdaptivity(newBridgeAdaptivity);\n      }\n    }\n\n    vkBridge.subscribe(bridgeListener);\n    return () => {\n      vkBridge.unsubscribe(bridgeListener);\n    };\n  }, []);\n\n  return bridgeAdaptivity;\n}\n","import * as React from \"react\";\nimport { hasMouse as _hasMouse, hasHover as _hasHover } from \"@vkontakte/vkjs\";\nimport {\n  AdaptivityContext,\n  AdaptivityProps,\n  SizeType,\n  ViewHeight,\n  ViewWidth,\n} from \"./AdaptivityContext\";\nimport { useDOM } from \"../../lib/dom\";\nimport {\n  useBridgeAdaptivity,\n  BridgeAdaptivity,\n} from \"../../hooks/useBridgeAdaptivity\";\n\nexport const DESKTOP_SIZE = 1280;\nexport const TABLET_SIZE = 1024;\nexport const SMALL_TABLET_SIZE = 768;\nexport const MOBILE_SIZE = 320;\n\nexport const MOBILE_LANDSCAPE_HEIGHT = 414;\nexport const MEDIUM_HEIGHT = 720;\n\nexport interface AdaptivityProviderProps extends AdaptivityProps {\n  children?: React.ReactNode;\n}\n\n/**\n * @see https://vkcom.github.io/VKUI/#/AdaptivityProvider\n */\nexport const AdaptivityProvider = (props: AdaptivityProviderProps) => {\n  const adaptivityRef = React.useRef<ReturnType<\n    typeof calculateAdaptivity\n  > | null>(null);\n  const [, updateAdaptivity] = React.useState({});\n  const bridge = useBridgeAdaptivity();\n\n  const { window } = useDOM();\n\n  if (!adaptivityRef.current) {\n    adaptivityRef.current = calculateAdaptivity(props, bridge, window);\n  }\n\n  React.useEffect(() => {\n    function onResize() {\n      if (adaptivityRef.current === null) {\n        return;\n      }\n\n      const calculated = calculateAdaptivity(props, bridge, window);\n      const { viewWidth, viewHeight, sizeX, sizeY, hasMouse, deviceHasHover } =\n        adaptivityRef.current;\n\n      if (\n        viewWidth !== calculated.viewWidth ||\n        viewHeight !== calculated.viewHeight ||\n        sizeX !== calculated.sizeX ||\n        sizeY !== calculated.sizeY ||\n        hasMouse !== calculated.hasMouse ||\n        deviceHasHover !== calculated.deviceHasHover\n      ) {\n        adaptivityRef.current = calculated;\n        updateAdaptivity({});\n      }\n    }\n\n    onResize();\n    window!.addEventListener(\"resize\", onResize, false);\n\n    return () => {\n      window!.removeEventListener(\"resize\", onResize, false);\n    };\n  }, [\n    props.viewWidth,\n    props.viewHeight,\n    props.sizeX,\n    props.sizeY,\n    props.hasMouse,\n    props.deviceHasHover,\n    window,\n    props,\n    bridge,\n  ]);\n\n  return (\n    <AdaptivityContext.Provider value={adaptivityRef.current}>\n      {props.children}\n    </AdaptivityContext.Provider>\n  );\n};\n\nfunction calculateAdaptivity(\n  props: AdaptivityProps,\n  bridge: BridgeAdaptivity,\n  window?: Window\n) {\n  let windowWidth = 0;\n  let windowHeight = 0;\n\n  if (bridge.type === \"adaptive\") {\n    windowWidth = bridge.viewportWidth;\n    windowHeight = bridge.viewportHeight;\n  } else if (window) {\n    windowWidth = window.innerWidth;\n    windowHeight = window.innerHeight;\n  }\n\n  let viewWidth = ViewWidth.SMALL_MOBILE;\n  let viewHeight = ViewHeight.SMALL;\n  let sizeY = SizeType.REGULAR;\n  let sizeX = SizeType.REGULAR;\n  let hasMouse = _hasMouse;\n  let deviceHasHover = _hasHover;\n\n  if (windowWidth >= DESKTOP_SIZE) {\n    viewWidth = ViewWidth.DESKTOP;\n  } else if (windowWidth >= TABLET_SIZE) {\n    viewWidth = ViewWidth.TABLET;\n  } else if (windowWidth >= SMALL_TABLET_SIZE) {\n    viewWidth = ViewWidth.SMALL_TABLET;\n  } else if (windowWidth >= MOBILE_SIZE) {\n    viewWidth = ViewWidth.MOBILE;\n  } else {\n    viewWidth = ViewWidth.SMALL_MOBILE;\n  }\n\n  if (windowHeight >= MEDIUM_HEIGHT) {\n    viewHeight = ViewHeight.MEDIUM;\n  } else if (windowHeight > MOBILE_LANDSCAPE_HEIGHT) {\n    viewHeight = ViewHeight.SMALL;\n  } else {\n    viewHeight = ViewHeight.EXTRA_SMALL;\n  }\n\n  if (!bridge.type) {\n    props.viewWidth && (viewWidth = props.viewWidth);\n    props.viewHeight && (viewHeight = props.viewHeight);\n\n    hasMouse = props.hasMouse ?? hasMouse;\n    deviceHasHover = props.deviceHasHover ?? deviceHasHover;\n  }\n\n  if (viewWidth <= ViewWidth.MOBILE) {\n    sizeX = SizeType.COMPACT;\n  }\n\n  if (\n    (viewWidth >= ViewWidth.SMALL_TABLET && hasMouse) ||\n    viewHeight <= ViewHeight.EXTRA_SMALL\n  ) {\n    sizeY = SizeType.COMPACT;\n  }\n\n  if (!bridge.type) {\n    props.sizeX && (sizeX = props.sizeX);\n    props.sizeY && (sizeY = props.sizeY);\n  }\n\n  if (\n    bridge.type === \"force_mobile\" ||\n    bridge.type === \"force_mobile_compact\"\n  ) {\n    viewWidth = ViewWidth.MOBILE;\n    sizeX = SizeType.COMPACT;\n\n    if (bridge.type === \"force_mobile_compact\") {\n      sizeY = SizeType.COMPACT;\n    } else {\n      sizeY = SizeType.REGULAR;\n    }\n  }\n\n  return { viewWidth, viewHeight, sizeX, sizeY, hasMouse, deviceHasHover };\n}\n","import * as React from \"react\";\n\nexport const LocaleProviderContext = React.createContext<string | undefined>(\n  undefined\n);\n","import * as React from \"react\";\nimport { AppearanceType } from \"@vkontakte/vk-bridge\";\nimport { canUseDOM, useDOM } from \"../../lib/dom\";\nimport {\n  ConfigProviderContext,\n  ConfigProviderContextInterface,\n} from \"./ConfigProviderContext\";\nimport { useIsomorphicLayoutEffect } from \"../../lib/useIsomorphicLayoutEffect\";\nimport { useObjectMemo } from \"../../hooks/useObjectMemo\";\nimport { noop } from \"../../lib/utils\";\nimport { warnOnce } from \"../../lib/warnOnce\";\nimport {\n  normalizeScheme,\n  AppearanceScheme,\n  Scheme,\n} from \"../../helpers/scheme\";\nimport {\n  AppearanceProvider,\n  generateVKUITokensClassName,\n} from \"../AppearanceProvider/AppearanceProvider\";\nimport { LocaleProviderContext } from \"../LocaleProviderContext/LocaleProviderContext\";\n\nexport interface ConfigProviderProps\n  extends Partial<ConfigProviderContextInterface> {\n  /**\n   * @deprecated будет удалено в 5.0.0, устанавливать тему следует через appearance\n   * Цветовая схема приложения\n   */\n  scheme?: AppearanceScheme;\n  /**\n    Локаль ([список](https://www.iana.org/assignments/language-subtag-registry/language-subtag-registry))\n   */\n  locale?: string;\n  children?: React.ReactNode;\n}\n\nconst warn = warnOnce(\"ConfigProvider\");\n\nfunction useSchemeDetector(\n  node: HTMLElement | undefined | null,\n  _scheme: Scheme | \"inherit\"\n) {\n  const inherit = _scheme === \"inherit\";\n  const getScheme = React.useCallback(() => {\n    if (!inherit || !canUseDOM || !node) {\n      return undefined;\n    }\n    return node.getAttribute(\"scheme\") as Scheme;\n  }, [inherit, node]);\n  const [resolvedScheme, setScheme] = React.useState(getScheme());\n\n  React.useEffect(() => {\n    if (!inherit || !node) {\n      return noop;\n    }\n    setScheme(getScheme());\n    const observer = new MutationObserver(() => setScheme(getScheme()));\n    observer.observe(node, { attributes: true, attributeFilter: [\"scheme\"] });\n    return () => observer.disconnect();\n  }, [getScheme, inherit, node]);\n\n  return _scheme === \"inherit\" ? resolvedScheme : _scheme;\n}\n\nconst deriveAppearance = (scheme: Scheme | undefined): AppearanceType =>\n  scheme === Scheme.SPACE_GRAY || scheme === Scheme.VKCOM_DARK\n    ? \"dark\"\n    : \"light\";\n\n/**\n * @see https://vkcom.github.io/VKUI/#/ConfigProvider\n */\nexport const ConfigProvider = (props: ConfigProviderProps) => {\n  const parentLocale = React.useContext(LocaleProviderContext);\n  const parentConfig = React.useContext(ConfigProviderContext);\n\n  const {\n    children,\n    webviewType = parentConfig.webviewType,\n    isWebView = parentConfig.isWebView,\n    transitionMotionEnabled = parentConfig.transitionMotionEnabled,\n    platform = parentConfig.platform,\n    hasNewTokens = parentConfig.hasNewTokens,\n    appearance = parentConfig.appearance,\n    scheme,\n    locale = parentLocale ?? \"ru\",\n  } = props;\n\n  const normalizedScheme = normalizeScheme({\n    scheme,\n    platform,\n    appearance,\n  });\n  const { document } = useDOM();\n  const target = document?.body;\n\n  useIsomorphicLayoutEffect(() => {\n    if (normalizedScheme === \"inherit\") {\n      return noop;\n    }\n    if (\n      process.env.NODE_ENV === \"development\" &&\n      target?.hasAttribute(\"scheme\") &&\n      parentConfig.appearance === undefined // appearance не была вычислена в родительском конфиге, @deprecated будет удалено в 5.0.0\n    ) {\n      warn(\n        '<body scheme> был установлен перед монтированием VKUI - вы не забыли scheme=\"inherit\"?'\n      );\n    }\n    target?.setAttribute(\"scheme\", normalizedScheme);\n    return () => target?.removeAttribute(\"scheme\");\n  }, [normalizedScheme]);\n\n  const realScheme = useSchemeDetector(target, normalizedScheme);\n  const derivedAppearance = deriveAppearance(realScheme);\n\n  useIsomorphicLayoutEffect(() => {\n    const VKUITokensClassName = generateVKUITokensClassName(\n      platform,\n      derivedAppearance\n    );\n\n    // eslint-disable-next-line no-restricted-properties\n    target?.classList.add(VKUITokensClassName);\n\n    return () => {\n      // eslint-disable-next-line no-restricted-properties\n      target?.classList.remove(VKUITokensClassName);\n    };\n  }, [platform, derivedAppearance]);\n\n  const configContext = useObjectMemo({\n    webviewType,\n    isWebView,\n    transitionMotionEnabled,\n    hasNewTokens,\n    platform,\n    scheme,\n    appearance: appearance || derivedAppearance,\n  });\n\n  return (\n    <ConfigProviderContext.Provider value={configContext}>\n      <LocaleProviderContext.Provider value={locale}>\n        <AppearanceProvider appearance={configContext.appearance}>\n          {children}\n        </AppearanceProvider>\n      </LocaleProviderContext.Provider>\n    </ConfigProviderContext.Provider>\n  );\n};\n","const niceErrors = {\n    0: `Invalid value for configuration 'enforceActions', expected 'never', 'always' or 'observed'`,\n    1(annotationType, key: PropertyKey) {\n        return `Cannot apply '${annotationType}' to '${key.toString()}': Field not found.`\n    },\n    /*\n    2(prop) {\n        return `invalid decorator for '${prop.toString()}'`\n    },\n    3(prop) {\n        return `Cannot decorate '${prop.toString()}': action can only be used on properties with a function value.`\n    },\n    4(prop) {\n        return `Cannot decorate '${prop.toString()}': computed can only be used on getter properties.`\n    },\n    */\n    5: \"'keys()' can only be used on observable objects, arrays, sets and maps\",\n    6: \"'values()' can only be used on observable objects, arrays, sets and maps\",\n    7: \"'entries()' can only be used on observable objects, arrays and maps\",\n    8: \"'set()' can only be used on observable objects, arrays and maps\",\n    9: \"'remove()' can only be used on observable objects, arrays and maps\",\n    10: \"'has()' can only be used on observable objects, arrays and maps\",\n    11: \"'get()' can only be used on observable objects, arrays and maps\",\n    12: `Invalid annotation`,\n    13: `Dynamic observable objects cannot be frozen. If you're passing observables to 3rd party component/function that calls Object.freeze, pass copy instead: toJS(observable)`,\n    14: \"Intercept handlers should return nothing or a change object\",\n    15: `Observable arrays cannot be frozen. If you're passing observables to 3rd party component/function that calls Object.freeze, pass copy instead: toJS(observable)`,\n    16: `Modification exception: the internal structure of an observable array was changed.`,\n    17(index, length) {\n        return `[mobx.array] Index out of bounds, ${index} is larger than ${length}`\n    },\n    18: \"mobx.map requires Map polyfill for the current browser. Check babel-polyfill or core-js/es6/map.js\",\n    19(other) {\n        return \"Cannot initialize from classes that inherit from Map: \" + other.constructor.name\n    },\n    20(other) {\n        return \"Cannot initialize map from \" + other\n    },\n    21(dataStructure) {\n        return `Cannot convert to map from '${dataStructure}'`\n    },\n    22: \"mobx.set requires Set polyfill for the current browser. Check babel-polyfill or core-js/es6/set.js\",\n    23: \"It is not possible to get index atoms from arrays\",\n    24(thing) {\n        return \"Cannot obtain administration from \" + thing\n    },\n    25(property, name) {\n        return `the entry '${property}' does not exist in the observable map '${name}'`\n    },\n    26: \"please specify a property\",\n    27(property, name) {\n        return `no observable property '${property.toString()}' found on the observable object '${name}'`\n    },\n    28(thing) {\n        return \"Cannot obtain atom from \" + thing\n    },\n    29: \"Expecting some object\",\n    30: \"invalid action stack. did you forget to finish an action?\",\n    31: \"missing option for computed: get\",\n    32(name, derivation) {\n        return `Cycle detected in computation ${name}: ${derivation}`\n    },\n    33(name) {\n        return `The setter of computed value '${name}' is trying to update itself. Did you intend to update an _observable_ value, instead of the computed property?`\n    },\n    34(name) {\n        return `[ComputedValue '${name}'] It is not possible to assign a new value to a computed value.`\n    },\n    35: \"There are multiple, different versions of MobX active. Make sure MobX is loaded only once or use `configure({ isolateGlobalState: true })`\",\n    36: \"isolateGlobalState should be called before MobX is running any reactions\",\n    37(method) {\n        return `[mobx] \\`observableArray.${method}()\\` mutates the array in-place, which is not allowed inside a derivation. Use \\`array.slice().${method}()\\` instead`\n    },\n    38: \"'ownKeys()' can only be used on observable objects\",\n    39: \"'defineProperty()' can only be used on observable objects\"\n} as const\n\nconst errors: typeof niceErrors = __DEV__ ? niceErrors : ({} as any)\n\nexport function die(error: string | keyof typeof errors, ...args: any[]): never {\n    if (__DEV__) {\n        let e: any = typeof error === \"string\" ? error : errors[error]\n        if (typeof e === \"function\") e = e.apply(null, args as any)\n        throw new Error(`[MobX] ${e}`)\n    }\n    throw new Error(\n        typeof error === \"number\"\n            ? `[MobX] minified error nr: ${error}${\n                  args.length ? \" \" + args.map(String).join(\",\") : \"\"\n              }. Find the full error at: https://github.com/mobxjs/mobx/blob/main/packages/mobx/src/errors.ts`\n            : `[MobX] ${error}`\n    )\n}\n","declare const window: any\ndeclare const self: any\n\nconst mockGlobal = {}\n\nexport function getGlobal() {\n    if (typeof globalThis !== \"undefined\") {\n        return globalThis\n    }\n    if (typeof window !== \"undefined\") {\n        return window\n    }\n    if (typeof global !== \"undefined\") {\n        return global\n    }\n    if (typeof self !== \"undefined\") {\n        return self\n    }\n    return mockGlobal\n}\n","import { globalState, die } from \"../internal\"\n\n// We shorten anything used > 5 times\nexport const assign = Object.assign\nexport const getDescriptor = Object.getOwnPropertyDescriptor\nexport const defineProperty = Object.defineProperty\nexport const objectPrototype = Object.prototype\n\nexport const EMPTY_ARRAY = []\nObject.freeze(EMPTY_ARRAY)\n\nexport const EMPTY_OBJECT = {}\nObject.freeze(EMPTY_OBJECT)\n\nexport interface Lambda {\n    (): void\n    name?: string\n}\n\nconst hasProxy = typeof Proxy !== \"undefined\"\nconst plainObjectString = Object.toString()\n\nexport function assertProxies() {\n    if (!hasProxy) {\n        die(\n            __DEV__\n                ? \"`Proxy` objects are not available in the current environment. Please configure MobX to enable a fallback implementation.`\"\n                : \"Proxy not available\"\n        )\n    }\n}\n\nexport function warnAboutProxyRequirement(msg: string) {\n    if (__DEV__ && globalState.verifyProxies) {\n        die(\n            \"MobX is currently configured to be able to run in ES5 mode, but in ES5 MobX won't be able to \" +\n                msg\n        )\n    }\n}\n\nexport function getNextId() {\n    return ++globalState.mobxGuid\n}\n\n/**\n * Makes sure that the provided function is invoked at most once.\n */\nexport function once(func: Lambda): Lambda {\n    let invoked = false\n    return function () {\n        if (invoked) {\n            return\n        }\n        invoked = true\n        return (func as any).apply(this, arguments)\n    }\n}\n\nexport const noop = () => {}\n\nexport function isFunction(fn: any): fn is Function {\n    return typeof fn === \"function\"\n}\n\nexport function isString(value: any): value is string {\n    return typeof value === \"string\"\n}\n\nexport function isStringish(value: any): value is string | number | symbol {\n    const t = typeof value\n    switch (t) {\n        case \"string\":\n        case \"symbol\":\n        case \"number\":\n            return true\n    }\n    return false\n}\n\nexport function isObject(value: any): value is Object {\n    return value !== null && typeof value === \"object\"\n}\n\nexport function isPlainObject(value: any) {\n    if (!isObject(value)) {\n        return false\n    }\n    const proto = Object.getPrototypeOf(value)\n    if (proto == null) {\n        return true\n    }\n    const protoConstructor = Object.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n    return (\n        typeof protoConstructor === \"function\" && protoConstructor.toString() === plainObjectString\n    )\n}\n\n// https://stackoverflow.com/a/37865170\nexport function isGenerator(obj: any): boolean {\n    const constructor = obj?.constructor\n    if (!constructor) {\n        return false\n    }\n    if (\n        \"GeneratorFunction\" === constructor.name ||\n        \"GeneratorFunction\" === constructor.displayName\n    ) {\n        return true\n    }\n    return false\n}\n\nexport function addHiddenProp(object: any, propName: PropertyKey, value: any) {\n    defineProperty(object, propName, {\n        enumerable: false,\n        writable: true,\n        configurable: true,\n        value\n    })\n}\n\nexport function addHiddenFinalProp(object: any, propName: PropertyKey, value: any) {\n    defineProperty(object, propName, {\n        enumerable: false,\n        writable: false,\n        configurable: true,\n        value\n    })\n}\n\nexport function createInstanceofPredicate<T>(\n    name: string,\n    theClass: new (...args: any[]) => T\n): (x: any) => x is T {\n    const propName = \"isMobX\" + name\n    theClass.prototype[propName] = true\n    return function (x) {\n        return isObject(x) && x[propName] === true\n    } as any\n}\n\nexport function isES6Map(thing: any): thing is Map<any, any> {\n    return thing instanceof Map\n}\n\nexport function isES6Set(thing: any): thing is Set<any> {\n    return thing instanceof Set\n}\n\nconst hasGetOwnPropertySymbols = typeof Object.getOwnPropertySymbols !== \"undefined\"\n\n/**\n * Returns the following: own enumerable keys and symbols.\n */\nexport function getPlainObjectKeys(object: any) {\n    const keys = Object.keys(object)\n    // Not supported in IE, so there are not going to be symbol props anyway...\n    if (!hasGetOwnPropertySymbols) {\n        return keys\n    }\n    const symbols = Object.getOwnPropertySymbols(object)\n    if (!symbols.length) {\n        return keys\n    }\n    return [...keys, ...symbols.filter(s => objectPrototype.propertyIsEnumerable.call(object, s))]\n}\n\n// From Immer utils\n// Returns all own keys, including non-enumerable and symbolic\nexport const ownKeys: (target: any) => Array<string | symbol> =\n    typeof Reflect !== \"undefined\" && Reflect.ownKeys\n        ? Reflect.ownKeys\n        : hasGetOwnPropertySymbols\n        ? obj => Object.getOwnPropertyNames(obj).concat(Object.getOwnPropertySymbols(obj) as any)\n        : /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport function stringifyKey(key: any): string {\n    if (typeof key === \"string\") {\n        return key\n    }\n    if (typeof key === \"symbol\") {\n        return key.toString()\n    }\n    return new String(key).toString()\n}\n\nexport function toPrimitive(value: any) {\n    return value === null ? null : typeof value === \"object\" ? \"\" + value : value\n}\n\nexport function hasProp(target: Object, prop: PropertyKey): boolean {\n    return objectPrototype.hasOwnProperty.call(target, prop)\n}\n\n// From Immer utils\nexport const getOwnPropertyDescriptors =\n    Object.getOwnPropertyDescriptors ||\n    function getOwnPropertyDescriptors(target: any) {\n        // Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n        const res: any = {}\n        // Note: without polyfill for ownKeys, symbols won't be picked up\n        ownKeys(target).forEach(key => {\n            res[key] = getDescriptor(target, key)\n        })\n        return res\n    }\n","import { Annotation, addHiddenProp, AnnotationsMap, hasProp, die, isOverride } from \"../internal\"\n\nexport const storedAnnotationsSymbol = Symbol(\"mobx-stored-annotations\")\n\n/**\n * Creates a function that acts as\n * - decorator\n * - annotation object\n */\nexport function createDecoratorAnnotation(annotation: Annotation): PropertyDecorator & Annotation {\n    function decorator(target, property) {\n        storeAnnotation(target, property, annotation)\n    }\n    return Object.assign(decorator, annotation)\n}\n\n/**\n * Stores annotation to prototype,\n * so it can be inspected later by `makeObservable` called from constructor\n */\nexport function storeAnnotation(prototype: any, key: PropertyKey, annotation: Annotation) {\n    if (!hasProp(prototype, storedAnnotationsSymbol)) {\n        addHiddenProp(prototype, storedAnnotationsSymbol, {\n            // Inherit annotations\n            ...prototype[storedAnnotationsSymbol]\n        })\n    }\n    // @override must override something\n    if (__DEV__ && isOverride(annotation) && !hasProp(prototype[storedAnnotationsSymbol], key)) {\n        const fieldName = `${prototype.constructor.name}.prototype.${key.toString()}`\n        die(\n            `'${fieldName}' is decorated with 'override', ` +\n                `but no such decorated member was found on prototype.`\n        )\n    }\n    // Cannot re-decorate\n    assertNotDecorated(prototype, annotation, key)\n\n    // Ignore override\n    if (!isOverride(annotation)) {\n        prototype[storedAnnotationsSymbol][key] = annotation\n    }\n}\n\nfunction assertNotDecorated(prototype: object, annotation: Annotation, key: PropertyKey) {\n    if (__DEV__ && !isOverride(annotation) && hasProp(prototype[storedAnnotationsSymbol], key)) {\n        const fieldName = `${prototype.constructor.name}.prototype.${key.toString()}`\n        const currentAnnotationType = prototype[storedAnnotationsSymbol][key].annotationType_\n        const requestedAnnotationType = annotation.annotationType_\n        die(\n            `Cannot apply '@${requestedAnnotationType}' to '${fieldName}':` +\n                `\\nThe field is already decorated with '@${currentAnnotationType}'.` +\n                `\\nRe-decorating fields is not allowed.` +\n                `\\nUse '@override' decorator for methods overriden by subclass.`\n        )\n    }\n}\n\n/**\n * Collects annotations from prototypes and stores them on target (instance)\n */\nexport function collectStoredAnnotations(target): AnnotationsMap<any, any> {\n    if (!hasProp(target, storedAnnotationsSymbol)) {\n        if (__DEV__ && !target[storedAnnotationsSymbol]) {\n            die(\n                `No annotations were passed to makeObservable, but no decorated members have been found either`\n            )\n        }\n        // We need a copy as we will remove annotation from the list once it's applied.\n        addHiddenProp(target, storedAnnotationsSymbol, { ...target[storedAnnotationsSymbol] })\n    }\n    return target[storedAnnotationsSymbol]\n}\n","import {\n    die,\n    Annotation,\n    hasProp,\n    createDecoratorAnnotation,\n    ObservableObjectAdministration,\n    MakeResult\n} from \"../internal\"\n\nconst OVERRIDE = \"override\"\n\nexport const override: Annotation & PropertyDecorator = createDecoratorAnnotation({\n    annotationType_: OVERRIDE,\n    make_,\n    extend_\n})\n\nexport function isOverride(annotation: Annotation): boolean {\n    return annotation.annotationType_ === OVERRIDE\n}\n\nfunction make_(adm: ObservableObjectAdministration, key): MakeResult {\n    // Must not be plain object\n    if (__DEV__ && adm.isPlainObject_) {\n        die(\n            `Cannot apply '${this.annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${this.annotationType_}' cannot be used on plain objects.`\n        )\n    }\n    // Must override something\n    if (__DEV__ && !hasProp(adm.appliedAnnotations_!, key)) {\n        die(\n            `'${adm.name_}.${key.toString()}' is annotated with '${this.annotationType_}', ` +\n                `but no such annotated member was found on prototype.`\n        )\n    }\n    return MakeResult.Cancel\n}\n\nfunction extend_(adm, key, descriptor, proxyTrap): boolean {\n    die(`'${this.annotationType_}' can only be used with 'makeObservable'`)\n}\n","import {\n    IDerivationState_,\n    IObservable,\n    IDerivation,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    noop,\n    onBecomeObserved,\n    onBecomeUnobserved,\n    propagateChanged,\n    reportObserved,\n    startBatch,\n    Lambda\n} from \"../internal\"\n\nexport const $mobx = Symbol(\"mobx administration\")\n\nexport interface IAtom extends IObservable {\n    reportObserved(): boolean\n    reportChanged()\n}\n\nexport class Atom implements IAtom {\n    isPendingUnobservation_ = false // for effective unobserving. BaseAtom has true, for extra optimization, so its onBecomeUnobserved never gets called, because it's not needed\n    isBeingObserved_ = false\n    observers_ = new Set<IDerivation>()\n\n    diffValue_ = 0\n    lastAccessedBy_ = 0\n    lowestObserverState_ = IDerivationState_.NOT_TRACKING_\n    /**\n     * Create a new atom. For debugging purposes it is recommended to give it a name.\n     * The onBecomeObserved and onBecomeUnobserved callbacks can be used for resource management.\n     */\n    constructor(public name_ = __DEV__ ? \"Atom@\" + getNextId() : \"Atom\") {}\n\n    // onBecomeObservedListeners\n    public onBOL: Set<Lambda> | undefined\n    // onBecomeUnobservedListeners\n    public onBUOL: Set<Lambda> | undefined\n\n    public onBO() {\n        if (this.onBOL) {\n            this.onBOL.forEach(listener => listener())\n        }\n    }\n\n    public onBUO() {\n        if (this.onBUOL) {\n            this.onBUOL.forEach(listener => listener())\n        }\n    }\n\n    /**\n     * Invoke this method to notify mobx that your atom has been used somehow.\n     * Returns true if there is currently a reactive context.\n     */\n    public reportObserved(): boolean {\n        return reportObserved(this)\n    }\n\n    /**\n     * Invoke this method _after_ this method has changed to signal mobx that all its observers should invalidate.\n     */\n    public reportChanged() {\n        startBatch()\n        propagateChanged(this)\n        endBatch()\n    }\n\n    toString() {\n        return this.name_\n    }\n}\n\nexport const isAtom = createInstanceofPredicate(\"Atom\", Atom)\n\nexport function createAtom(\n    name: string,\n    onBecomeObservedHandler: () => void = noop,\n    onBecomeUnobservedHandler: () => void = noop\n): IAtom {\n    const atom = new Atom(name)\n    // default `noop` listener will not initialize the hook Set\n    if (onBecomeObservedHandler !== noop) {\n        onBecomeObserved(atom, onBecomeObservedHandler)\n    }\n\n    if (onBecomeUnobservedHandler !== noop) {\n        onBecomeUnobserved(atom, onBecomeUnobservedHandler)\n    }\n    return atom\n}\n","import {\n    IComputedValue,\n    IObservable,\n    IObservableArray,\n    Lambda,\n    ObservableMap,\n    getAtom,\n    ObservableSet,\n    isFunction,\n    IObservableValue\n} from \"../internal\"\n\nconst ON_BECOME_OBSERVED = \"onBO\"\nconst ON_BECOME_UNOBSERVED = \"onBUO\"\n\nexport function onBecomeObserved(\n    value:\n        | IObservable\n        | IComputedValue<any>\n        | IObservableArray<any>\n        | ObservableMap<any, any>\n        | ObservableSet<any>\n        | IObservableValue<any>,\n    listener: Lambda\n): Lambda\nexport function onBecomeObserved<K, V = any>(\n    value: ObservableMap<K, V> | Object,\n    property: K,\n    listener: Lambda\n): Lambda\nexport function onBecomeObserved(thing, arg2, arg3?): Lambda {\n    return interceptHook(ON_BECOME_OBSERVED, thing, arg2, arg3)\n}\n\nexport function onBecomeUnobserved(\n    value:\n        | IObservable\n        | IComputedValue<any>\n        | IObservableArray<any>\n        | ObservableMap<any, any>\n        | ObservableSet<any>\n        | IObservableValue<any>,\n    listener: Lambda\n): Lambda\nexport function onBecomeUnobserved<K, V = any>(\n    value: ObservableMap<K, V> | Object,\n    property: K,\n    listener: Lambda\n): Lambda\nexport function onBecomeUnobserved(thing, arg2, arg3?): Lambda {\n    return interceptHook(ON_BECOME_UNOBSERVED, thing, arg2, arg3)\n}\n\nfunction interceptHook(hook: \"onBO\" | \"onBUO\", thing, arg2, arg3) {\n    const atom: IObservable =\n        typeof arg3 === \"function\" ? getAtom(thing, arg2) : (getAtom(thing) as any)\n    const cb = isFunction(arg3) ? arg3 : arg2\n    const listenersKey = `${hook}L` as \"onBOL\" | \"onBUOL\"\n\n    if (atom[listenersKey]) {\n        atom[listenersKey]!.add(cb)\n    } else {\n        atom[listenersKey] = new Set<Lambda>([cb])\n    }\n\n    return function () {\n        const hookListeners = atom[listenersKey]\n        if (hookListeners) {\n            hookListeners.delete(cb)\n            if (hookListeners.size === 0) {\n                delete atom[listenersKey]\n            }\n        }\n    }\n}\n","import { deepEqual } from \"../internal\"\n\nexport interface IEqualsComparer<T> {\n    (a: T, b: T): boolean\n}\n\nfunction identityComparer(a: any, b: any): boolean {\n    return a === b\n}\n\nfunction structuralComparer(a: any, b: any): boolean {\n    return deepEqual(a, b)\n}\n\nfunction shallowComparer(a: any, b: any): boolean {\n    return deepEqual(a, b, 1)\n}\n\nfunction defaultComparer(a: any, b: any): boolean {\n    if (Object.is) {\n        return Object.is(a, b)\n    }\n\n    return a === b ? a !== 0 || 1 / a === 1 / b : a !== a && b !== b\n}\n\nexport const comparer = {\n    identity: identityComparer,\n    structural: structuralComparer,\n    default: defaultComparer,\n    shallow: shallowComparer\n}\n","import {\n    deepEqual,\n    isES6Map,\n    isES6Set,\n    isObservable,\n    isObservableArray,\n    isObservableMap,\n    isObservableSet,\n    isObservableObject,\n    isPlainObject,\n    observable,\n    die,\n    isAction,\n    autoAction,\n    flow,\n    isFlow,\n    isGenerator\n} from \"../internal\"\n\nexport interface IEnhancer<T> {\n    (newValue: T, oldValue: T | undefined, name: string): T\n}\n\nexport function deepEnhancer(v, _, name) {\n    // it is an observable already, done\n    if (isObservable(v)) {\n        return v\n    }\n\n    // something that can be converted and mutated?\n    if (Array.isArray(v)) {\n        return observable.array(v, { name })\n    }\n    if (isPlainObject(v)) {\n        return observable.object(v, undefined, { name })\n    }\n    if (isES6Map(v)) {\n        return observable.map(v, { name })\n    }\n    if (isES6Set(v)) {\n        return observable.set(v, { name })\n    }\n    if (typeof v === \"function\" && !isAction(v) && !isFlow(v)) {\n        if (isGenerator(v)) {\n            return flow(v)\n        } else {\n            return autoAction(name, v)\n        }\n    }\n    return v\n}\n\nexport function shallowEnhancer(v, _, name): any {\n    if (v === undefined || v === null) {\n        return v\n    }\n    if (isObservableObject(v) || isObservableArray(v) || isObservableMap(v) || isObservableSet(v)) {\n        return v\n    }\n    if (Array.isArray(v)) {\n        return observable.array(v, { name, deep: false })\n    }\n    if (isPlainObject(v)) {\n        return observable.object(v, undefined, { name, deep: false })\n    }\n    if (isES6Map(v)) {\n        return observable.map(v, { name, deep: false })\n    }\n    if (isES6Set(v)) {\n        return observable.set(v, { name, deep: false })\n    }\n\n    if (__DEV__) {\n        die(\n            \"The shallow modifier / decorator can only used in combination with arrays, objects, maps and sets\"\n        )\n    }\n}\n\nexport function referenceEnhancer(newValue?) {\n    // never turn into an observable\n    return newValue\n}\n\nexport function refStructEnhancer(v, oldValue): any {\n    if (__DEV__ && isObservable(v)) {\n        die(`observable.struct should not be used with observable values`)\n    }\n    if (deepEqual(v, oldValue)) {\n        return oldValue\n    }\n    return v\n}\n","import {\n    ObservableObjectAdministration,\n    createAction,\n    isAction,\n    defineProperty,\n    die,\n    isFunction,\n    Annotation,\n    globalState,\n    MakeResult\n} from \"../internal\"\n\nexport function createActionAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    source: object\n): MakeResult {\n    // bound\n    if (this.options_?.bound) {\n        return this.extend_(adm, key, descriptor, false) === null\n            ? MakeResult.Cancel\n            : MakeResult.Break\n    }\n    // own\n    if (source === adm.target_) {\n        return this.extend_(adm, key, descriptor, false) === null\n            ? MakeResult.Cancel\n            : MakeResult.Continue\n    }\n    // prototype\n    if (isAction(descriptor.value)) {\n        // A prototype could have been annotated already by other constructor,\n        // rest of the proto chain must be annotated already\n        return MakeResult.Break\n    }\n    const actionDescriptor = createActionDescriptor(adm, this, key, descriptor, false)\n    defineProperty(source, key, actionDescriptor)\n    return MakeResult.Continue\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    const actionDescriptor = createActionDescriptor(adm, this, key, descriptor)\n    return adm.defineProperty_(key, actionDescriptor, proxyTrap)\n}\n\nfunction assertActionDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    { value }: PropertyDescriptor\n) {\n    if (__DEV__ && !isFunction(value)) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${annotationType_}' can only be used on properties with a function value.`\n        )\n    }\n}\n\nexport function createActionDescriptor(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    // provides ability to disable safeDescriptors for prototypes\n    safeDescriptors: boolean = globalState.safeDescriptors\n) {\n    assertActionDescriptor(adm, annotation, key, descriptor)\n    let { value } = descriptor\n    if (annotation.options_?.bound) {\n        value = value.bind(adm.proxy_ ?? adm.target_)\n    }\n    return {\n        value: createAction(\n            annotation.options_?.name ?? key.toString(),\n            value,\n            annotation.options_?.autoAction ?? false,\n            // https://github.com/mobxjs/mobx/discussions/3140\n            annotation.options_?.bound ? adm.proxy_ ?? adm.target_ : undefined\n        ),\n        // Non-configurable for classes\n        // prevents accidental field redefinition in subclass\n        configurable: safeDescriptors ? adm.isPlainObject_ : true,\n        // https://github.com/mobxjs/mobx/pull/2641#issuecomment-737292058\n        enumerable: false,\n        // Non-obsevable, therefore non-writable\n        // Also prevents rewriting in subclass constructor\n        writable: safeDescriptors ? false : true\n    }\n}\n","import {\n    ObservableObjectAdministration,\n    Annotation,\n    defineProperty,\n    die,\n    flow,\n    isFlow,\n    isFunction,\n    globalState,\n    MakeResult,\n    hasProp\n} from \"../internal\"\n\nexport function createFlowAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    source: object\n): MakeResult {\n    // own\n    if (source === adm.target_) {\n        return this.extend_(adm, key, descriptor, false) === null\n            ? MakeResult.Cancel\n            : MakeResult.Continue\n    }\n    // prototype\n    // bound - must annotate protos to support super.flow()\n    if (this.options_?.bound && (!hasProp(adm.target_, key) || !isFlow(adm.target_[key]))) {\n        if (this.extend_(adm, key, descriptor, false) === null) {\n            return MakeResult.Cancel\n        }\n    }\n    if (isFlow(descriptor.value)) {\n        // A prototype could have been annotated already by other constructor,\n        // rest of the proto chain must be annotated already\n        return MakeResult.Break\n    }\n    const flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, false, false)\n    defineProperty(source, key, flowDescriptor)\n    return MakeResult.Continue\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    const flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, this.options_?.bound)\n    return adm.defineProperty_(key, flowDescriptor, proxyTrap)\n}\n\nfunction assertFlowDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    { value }: PropertyDescriptor\n) {\n    if (__DEV__ && !isFunction(value)) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${annotationType_}' can only be used on properties with a generator function value.`\n        )\n    }\n}\n\nfunction createFlowDescriptor(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    bound: boolean,\n    // provides ability to disable safeDescriptors for prototypes\n    safeDescriptors: boolean = globalState.safeDescriptors\n): PropertyDescriptor {\n    assertFlowDescriptor(adm, annotation, key, descriptor)\n    let { value } = descriptor\n    // In case of flow.bound, the descriptor can be from already annotated prototype\n    if (!isFlow(value)) {\n        value = flow(value)\n    }\n    if (bound) {\n        // We do not keep original function around, so we bind the existing flow\n        value = value.bind(adm.proxy_ ?? adm.target_)\n        // This is normally set by `flow`, but `bind` returns new function...\n        value.isMobXFlow = true\n    }\n    return {\n        value,\n        // Non-configurable for classes\n        // prevents accidental field redefinition in subclass\n        configurable: safeDescriptors ? adm.isPlainObject_ : true,\n        // https://github.com/mobxjs/mobx/pull/2641#issuecomment-737292058\n        enumerable: false,\n        // Non-obsevable, therefore non-writable\n        // Also prevents rewriting in subclass constructor\n        writable: safeDescriptors ? false : true\n    }\n}\n","import { ObservableObjectAdministration, die, Annotation, MakeResult } from \"../internal\"\n\nexport function createComputedAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor\n): MakeResult {\n    return this.extend_(adm, key, descriptor, false) === null ? MakeResult.Cancel : MakeResult.Break\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    assertComputedDescriptor(adm, this, key, descriptor)\n    return adm.defineComputedProperty_(\n        key,\n        {\n            ...this.options_,\n            get: descriptor.get,\n            set: descriptor.set\n        },\n        proxyTrap\n    )\n}\n\nfunction assertComputedDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    { get }: PropertyDescriptor\n) {\n    if (__DEV__ && !get) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${annotationType_}' can only be used on getter(+setter) properties.`\n        )\n    }\n}\n","import {\n    ObservableObjectAdministration,\n    deepEnhancer,\n    die,\n    Annotation,\n    MakeResult\n} from \"../internal\"\n\nexport function createObservableAnnotation(name: string, options?: object): Annotation {\n    return {\n        annotationType_: name,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor\n): MakeResult {\n    return this.extend_(adm, key, descriptor, false) === null ? MakeResult.Cancel : MakeResult.Break\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    assertObservableDescriptor(adm, this, key, descriptor)\n    return adm.defineObservableProperty_(\n        key,\n        descriptor.value,\n        this.options_?.enhancer ?? deepEnhancer,\n        proxyTrap\n    )\n}\n\nfunction assertObservableDescriptor(\n    adm: ObservableObjectAdministration,\n    { annotationType_ }: Annotation,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor\n) {\n    if (__DEV__ && !(\"value\" in descriptor)) {\n        die(\n            `Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\n                `\\n'${annotationType_}' cannot be used on getter/setter properties`\n        )\n    }\n}\n","import {\n    ObservableObjectAdministration,\n    observable,\n    Annotation,\n    defineProperty,\n    createAction,\n    globalState,\n    flow,\n    computed,\n    autoAction,\n    isGenerator,\n    MakeResult\n} from \"../internal\"\n\nconst AUTO = \"true\"\n\nexport const autoAnnotation: Annotation = createAutoAnnotation()\n\nexport function createAutoAnnotation(options?: object): Annotation {\n    return {\n        annotationType_: AUTO,\n        options_: options,\n        make_,\n        extend_\n    }\n}\n\nfunction make_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    source: object\n): MakeResult {\n    // getter -> computed\n    if (descriptor.get) {\n        return computed.make_(adm, key, descriptor, source)\n    }\n    // lone setter -> action setter\n    if (descriptor.set) {\n        // TODO make action applicable to setter and delegate to action.make_\n        const set = createAction(key.toString(), descriptor.set) as (v: any) => void\n        // own\n        if (source === adm.target_) {\n            return adm.defineProperty_(key, {\n                configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,\n                set\n            }) === null\n                ? MakeResult.Cancel\n                : MakeResult.Continue\n        }\n        // proto\n        defineProperty(source, key, {\n            configurable: true,\n            set\n        })\n        return MakeResult.Continue\n    }\n    // function on proto -> autoAction/flow\n    if (source !== adm.target_ && typeof descriptor.value === \"function\") {\n        if (isGenerator(descriptor.value)) {\n            const flowAnnotation = this.options_?.autoBind ? flow.bound : flow\n            return flowAnnotation.make_(adm, key, descriptor, source)\n        }\n        const actionAnnotation = this.options_?.autoBind ? autoAction.bound : autoAction\n        return actionAnnotation.make_(adm, key, descriptor, source)\n    }\n    // other -> observable\n    // Copy props from proto as well, see test:\n    // \"decorate should work with Object.create\"\n    let observableAnnotation = this.options_?.deep === false ? observable.ref : observable\n    // if function respect autoBind option\n    if (typeof descriptor.value === \"function\" && this.options_?.autoBind) {\n        descriptor.value = descriptor.value.bind(adm.proxy_ ?? adm.target_)\n    }\n    return observableAnnotation.make_(adm, key, descriptor, source)\n}\n\nfunction extend_(\n    adm: ObservableObjectAdministration,\n    key: PropertyKey,\n    descriptor: PropertyDescriptor,\n    proxyTrap: boolean\n): boolean | null {\n    // getter -> computed\n    if (descriptor.get) {\n        return computed.extend_(adm, key, descriptor, proxyTrap)\n    }\n    // lone setter -> action setter\n    if (descriptor.set) {\n        // TODO make action applicable to setter and delegate to action.extend_\n        return adm.defineProperty_(\n            key,\n            {\n                configurable: globalState.safeDescriptors ? adm.isPlainObject_ : true,\n                set: createAction(key.toString(), descriptor.set) as (v: any) => void\n            },\n            proxyTrap\n        )\n    }\n    // other -> observable\n    // if function respect autoBind option\n    if (typeof descriptor.value === \"function\" && this.options_?.autoBind) {\n        descriptor.value = descriptor.value.bind(adm.proxy_ ?? adm.target_)\n    }\n    let observableAnnotation = this.options_?.deep === false ? observable.ref : observable\n    return observableAnnotation.extend_(adm, key, descriptor, proxyTrap)\n}\n","import {\n    IEnhancer,\n    IEqualsComparer,\n    IObservableArray,\n    IObservableMapInitialValues,\n    IObservableSetInitialValues,\n    IObservableValue,\n    ObservableMap,\n    ObservableSet,\n    ObservableValue,\n    asDynamicObservableObject,\n    createObservableArray,\n    deepEnhancer,\n    extendObservable,\n    isES6Map,\n    isES6Set,\n    isObservable,\n    isPlainObject,\n    referenceEnhancer,\n    Annotation,\n    shallowEnhancer,\n    refStructEnhancer,\n    AnnotationsMap,\n    asObservableObject,\n    storeAnnotation,\n    createDecoratorAnnotation,\n    createLegacyArray,\n    globalState,\n    assign,\n    isStringish,\n    createObservableAnnotation,\n    createAutoAnnotation\n} from \"../internal\"\n\nexport const OBSERVABLE = \"observable\"\nexport const OBSERVABLE_REF = \"observable.ref\"\nexport const OBSERVABLE_SHALLOW = \"observable.shallow\"\nexport const OBSERVABLE_STRUCT = \"observable.struct\"\n\nexport type CreateObservableOptions = {\n    name?: string\n    equals?: IEqualsComparer<any>\n    deep?: boolean\n    defaultDecorator?: Annotation\n    proxy?: boolean\n    autoBind?: boolean\n}\n\n// Predefined bags of create observable options, to avoid allocating temporarily option objects\n// in the majority of cases\nexport const defaultCreateObservableOptions: CreateObservableOptions = {\n    deep: true,\n    name: undefined,\n    defaultDecorator: undefined,\n    proxy: true\n}\nObject.freeze(defaultCreateObservableOptions)\n\nexport function asCreateObservableOptions(thing: any): CreateObservableOptions {\n    return thing || defaultCreateObservableOptions\n}\n\nconst observableAnnotation = createObservableAnnotation(OBSERVABLE)\nconst observableRefAnnotation = createObservableAnnotation(OBSERVABLE_REF, {\n    enhancer: referenceEnhancer\n})\nconst observableShallowAnnotation = createObservableAnnotation(OBSERVABLE_SHALLOW, {\n    enhancer: shallowEnhancer\n})\nconst observableStructAnnotation = createObservableAnnotation(OBSERVABLE_STRUCT, {\n    enhancer: refStructEnhancer\n})\nconst observableDecoratorAnnotation = createDecoratorAnnotation(observableAnnotation)\n\nexport function getEnhancerFromOptions(options: CreateObservableOptions): IEnhancer<any> {\n    return options.deep === true\n        ? deepEnhancer\n        : options.deep === false\n        ? referenceEnhancer\n        : getEnhancerFromAnnotation(options.defaultDecorator)\n}\n\nexport function getAnnotationFromOptions(\n    options?: CreateObservableOptions\n): Annotation | undefined {\n    return options ? options.defaultDecorator ?? createAutoAnnotation(options) : undefined\n}\n\nexport function getEnhancerFromAnnotation(annotation?: Annotation): IEnhancer<any> {\n    return !annotation ? deepEnhancer : annotation.options_?.enhancer ?? deepEnhancer\n}\n\n/**\n * Turns an object, array or function into a reactive structure.\n * @param v the value which should become observable.\n */\nfunction createObservable(v: any, arg2?: any, arg3?: any) {\n    // @observable someProp;\n    if (isStringish(arg2)) {\n        storeAnnotation(v, arg2, observableAnnotation)\n        return\n    }\n\n    // already observable - ignore\n    if (isObservable(v)) {\n        return v\n    }\n\n    // plain object\n    if (isPlainObject(v)) {\n        return observable.object(v, arg2, arg3)\n    }\n\n    // Array\n    if (Array.isArray(v)) {\n        return observable.array(v, arg2)\n    }\n\n    // Map\n    if (isES6Map(v)) {\n        return observable.map(v, arg2)\n    }\n\n    // Set\n    if (isES6Set(v)) {\n        return observable.set(v, arg2)\n    }\n\n    // other object - ignore\n    if (typeof v === \"object\" && v !== null) {\n        return v\n    }\n\n    // anything else\n    return observable.box(v, arg2)\n}\nObject.assign(createObservable, observableDecoratorAnnotation)\n\nexport interface IObservableValueFactory {\n    <T>(value: T, options?: CreateObservableOptions): IObservableValue<T>\n    <T>(value?: T, options?: CreateObservableOptions): IObservableValue<T | undefined>\n}\n\nexport interface IObservableFactory extends Annotation, PropertyDecorator {\n    <T = any>(value: T[], options?: CreateObservableOptions): IObservableArray<T>\n    <T = any>(value: Set<T>, options?: CreateObservableOptions): ObservableSet<T>\n    <K = any, V = any>(value: Map<K, V>, options?: CreateObservableOptions): ObservableMap<K, V>\n    <T extends object>(\n        value: T,\n        decorators?: AnnotationsMap<T, never>,\n        options?: CreateObservableOptions\n    ): T\n\n    box: IObservableValueFactory\n    array: <T = any>(initialValues?: T[], options?: CreateObservableOptions) => IObservableArray<T>\n    set: <T = any>(\n        initialValues?: IObservableSetInitialValues<T>,\n        options?: CreateObservableOptions\n    ) => ObservableSet<T>\n    map: <K = any, V = any>(\n        initialValues?: IObservableMapInitialValues<K, V>,\n        options?: CreateObservableOptions\n    ) => ObservableMap<K, V>\n    object: <T = any>(\n        props: T,\n        decorators?: AnnotationsMap<T, never>,\n        options?: CreateObservableOptions\n    ) => T\n\n    /**\n     * Decorator that creates an observable that only observes the references, but doesn't try to turn the assigned value into an observable.ts.\n     */\n    ref: Annotation & PropertyDecorator\n    /**\n     * Decorator that creates an observable converts its value (objects, maps or arrays) into a shallow observable structure\n     */\n    shallow: Annotation & PropertyDecorator\n    deep: Annotation & PropertyDecorator\n    struct: Annotation & PropertyDecorator\n}\n\nconst observableFactories: IObservableFactory = {\n    box<T = any>(value: T, options?: CreateObservableOptions): IObservableValue<T> {\n        const o = asCreateObservableOptions(options)\n        return new ObservableValue(value, getEnhancerFromOptions(o), o.name, true, o.equals)\n    },\n    array<T = any>(initialValues?: T[], options?: CreateObservableOptions): IObservableArray<T> {\n        const o = asCreateObservableOptions(options)\n        return (\n            globalState.useProxies === false || o.proxy === false\n                ? createLegacyArray\n                : createObservableArray\n        )(initialValues, getEnhancerFromOptions(o), o.name)\n    },\n    map<K = any, V = any>(\n        initialValues?: IObservableMapInitialValues<K, V>,\n        options?: CreateObservableOptions\n    ): ObservableMap<K, V> {\n        const o = asCreateObservableOptions(options)\n        return new ObservableMap<K, V>(initialValues, getEnhancerFromOptions(o), o.name)\n    },\n    set<T = any>(\n        initialValues?: IObservableSetInitialValues<T>,\n        options?: CreateObservableOptions\n    ): ObservableSet<T> {\n        const o = asCreateObservableOptions(options)\n        return new ObservableSet<T>(initialValues, getEnhancerFromOptions(o), o.name)\n    },\n    object<T extends object = any>(\n        props: T,\n        decorators?: AnnotationsMap<T, never>,\n        options?: CreateObservableOptions\n    ): T {\n        return extendObservable(\n            globalState.useProxies === false || options?.proxy === false\n                ? asObservableObject({}, options)\n                : asDynamicObservableObject({}, options),\n            props,\n            decorators\n        )\n    },\n    ref: createDecoratorAnnotation(observableRefAnnotation),\n    shallow: createDecoratorAnnotation(observableShallowAnnotation),\n    deep: observableDecoratorAnnotation,\n    struct: createDecoratorAnnotation(observableStructAnnotation)\n} as any\n\n// eslint-disable-next-line\nexport var observable: IObservableFactory = assign(createObservable, observableFactories)\n","import {\n    $mobx,\n    IIsObservableObject,\n    ObservableObjectAdministration,\n    warnAboutProxyRequirement,\n    assertProxies,\n    die,\n    isStringish,\n    globalState,\n    CreateObservableOptions,\n    asObservableObject\n} from \"../internal\"\n\nfunction getAdm(target): ObservableObjectAdministration {\n    return target[$mobx]\n}\n\n// Optimization: we don't need the intermediate objects and could have a completely custom administration for DynamicObjects,\n// and skip either the internal values map, or the base object with its property descriptors!\nconst objectProxyTraps: ProxyHandler<any> = {\n    has(target: IIsObservableObject, name: PropertyKey): boolean {\n        if (__DEV__ && globalState.trackingDerivation) {\n            warnAboutProxyRequirement(\n                \"detect new properties using the 'in' operator. Use 'has' from 'mobx' instead.\"\n            )\n        }\n        return getAdm(target).has_(name)\n    },\n    get(target: IIsObservableObject, name: PropertyKey): any {\n        return getAdm(target).get_(name)\n    },\n    set(target: IIsObservableObject, name: PropertyKey, value: any): boolean {\n        if (!isStringish(name)) {\n            return false\n        }\n        if (__DEV__ && !getAdm(target).values_.has(name)) {\n            warnAboutProxyRequirement(\n                \"add a new observable property through direct assignment. Use 'set' from 'mobx' instead.\"\n            )\n        }\n        // null (intercepted) -> true (success)\n        return getAdm(target).set_(name, value, true) ?? true\n    },\n    deleteProperty(target: IIsObservableObject, name: PropertyKey): boolean {\n        if (__DEV__) {\n            warnAboutProxyRequirement(\n                \"delete properties from an observable object. Use 'remove' from 'mobx' instead.\"\n            )\n        }\n        if (!isStringish(name)) {\n            return false\n        }\n        // null (intercepted) -> true (success)\n        return getAdm(target).delete_(name, true) ?? true\n    },\n    defineProperty(\n        target: IIsObservableObject,\n        name: PropertyKey,\n        descriptor: PropertyDescriptor\n    ): boolean {\n        if (__DEV__) {\n            warnAboutProxyRequirement(\n                \"define property on an observable object. Use 'defineProperty' from 'mobx' instead.\"\n            )\n        }\n        // null (intercepted) -> true (success)\n        return getAdm(target).defineProperty_(name, descriptor) ?? true\n    },\n    ownKeys(target: IIsObservableObject): ArrayLike<string | symbol> {\n        if (__DEV__ && globalState.trackingDerivation) {\n            warnAboutProxyRequirement(\n                \"iterate keys to detect added / removed properties. Use 'keys' from 'mobx' instead.\"\n            )\n        }\n        return getAdm(target).ownKeys_()\n    },\n    preventExtensions(target) {\n        die(13)\n    }\n}\n\nexport function asDynamicObservableObject(\n    target: any,\n    options?: CreateObservableOptions\n): IIsObservableObject {\n    assertProxies()\n    target = asObservableObject(target, options)\n    return (target[$mobx].proxy_ ??= new Proxy(target, objectProxyTraps))\n}\n","import {\n    ComputedValue,\n    IComputedValueOptions,\n    Annotation,\n    storeAnnotation,\n    createDecoratorAnnotation,\n    isStringish,\n    isPlainObject,\n    isFunction,\n    die,\n    IComputedValue,\n    createComputedAnnotation,\n    comparer\n} from \"../internal\"\n\nexport const COMPUTED = \"computed\"\nexport const COMPUTED_STRUCT = \"computed.struct\"\n\nexport interface IComputedFactory extends Annotation, PropertyDecorator {\n    // @computed(opts)\n    <T>(options: IComputedValueOptions<T>): Annotation & PropertyDecorator\n    // computed(fn, opts)\n    <T>(func: () => T, options?: IComputedValueOptions<T>): IComputedValue<T>\n\n    struct: Annotation & PropertyDecorator\n}\n\nconst computedAnnotation = createComputedAnnotation(COMPUTED)\nconst computedStructAnnotation = createComputedAnnotation(COMPUTED_STRUCT, {\n    equals: comparer.structural\n})\n\n/**\n * Decorator for class properties: @computed get value() { return expr; }.\n * For legacy purposes also invokable as ES5 observable created: `computed(() => expr)`;\n */\nexport const computed: IComputedFactory = function computed(arg1, arg2) {\n    if (isStringish(arg2)) {\n        // @computed\n        return storeAnnotation(arg1, arg2, computedAnnotation)\n    }\n    if (isPlainObject(arg1)) {\n        // @computed({ options })\n        return createDecoratorAnnotation(createComputedAnnotation(COMPUTED, arg1))\n    }\n\n    // computed(expr, options?)\n    if (__DEV__) {\n        if (!isFunction(arg1)) {\n            die(\"First argument to `computed` should be an expression.\")\n        }\n        if (isFunction(arg2)) {\n            die(\n                \"A setter as second argument is no longer supported, use `{ set: fn }` option instead\"\n            )\n        }\n    }\n    const opts: IComputedValueOptions<any> = isPlainObject(arg2) ? arg2 : {}\n    opts.get = arg1\n    opts.name ||= arg1.name || \"\" /* for generated name */\n\n    return new ComputedValue(opts)\n} as any\n\nObject.assign(computed, computedAnnotation)\n\ncomputed.struct = createDecoratorAnnotation(computedStructAnnotation)\n","import {\n    IDerivation,\n    endBatch,\n    globalState,\n    isSpyEnabled,\n    spyReportEnd,\n    spyReportStart,\n    startBatch,\n    untrackedEnd,\n    untrackedStart,\n    isFunction,\n    allowStateReadsStart,\n    allowStateReadsEnd,\n    ACTION,\n    EMPTY_ARRAY,\n    die,\n    getDescriptor\n} from \"../internal\"\n\n// we don't use globalState for these in order to avoid possible issues with multiple\n// mobx versions\nlet currentActionId = 0\nlet nextActionId = 1\nconst isFunctionNameConfigurable = getDescriptor(() => {}, \"name\")?.configurable ?? false\n\n// we can safely recycle this object\nconst tmpNameDescriptor: PropertyDescriptor = {\n    value: \"action\",\n    configurable: true,\n    writable: false,\n    enumerable: false\n}\n\nexport function createAction(\n    actionName: string,\n    fn: Function,\n    autoAction: boolean = false,\n    ref?: Object\n): Function {\n    if (__DEV__) {\n        if (!isFunction(fn)) {\n            die(\"`action` can only be invoked on functions\")\n        }\n        if (typeof actionName !== \"string\" || !actionName) {\n            die(`actions should have valid names, got: '${actionName}'`)\n        }\n    }\n    function res() {\n        return executeAction(actionName, autoAction, fn, ref || this, arguments)\n    }\n    res.isMobxAction = true\n    if (isFunctionNameConfigurable) {\n        tmpNameDescriptor.value = actionName\n        Object.defineProperty(res, \"name\", tmpNameDescriptor)\n    }\n    return res\n}\n\nexport function executeAction(\n    actionName: string,\n    canRunAsDerivation: boolean,\n    fn: Function,\n    scope?: any,\n    args?: IArguments\n) {\n    const runInfo = _startAction(actionName, canRunAsDerivation, scope, args)\n    try {\n        return fn.apply(scope, args)\n    } catch (err) {\n        runInfo.error_ = err\n        throw err\n    } finally {\n        _endAction(runInfo)\n    }\n}\n\nexport interface IActionRunInfo {\n    prevDerivation_: IDerivation | null\n    prevAllowStateChanges_: boolean\n    prevAllowStateReads_: boolean\n    notifySpy_: boolean\n    startTime_: number\n    error_?: any\n    parentActionId_: number\n    actionId_: number\n    runAsAction_?: boolean\n}\n\nexport function _startAction(\n    actionName: string,\n    canRunAsDerivation: boolean, // true for autoAction\n    scope: any,\n    args?: IArguments\n): IActionRunInfo {\n    const notifySpy_ = __DEV__ && isSpyEnabled() && !!actionName\n    let startTime_: number = 0\n    if (__DEV__ && notifySpy_) {\n        startTime_ = Date.now()\n        const flattenedArgs = args ? Array.from(args) : EMPTY_ARRAY\n        spyReportStart({\n            type: ACTION,\n            name: actionName,\n            object: scope,\n            arguments: flattenedArgs\n        })\n    }\n    const prevDerivation_ = globalState.trackingDerivation\n    const runAsAction = !canRunAsDerivation || !prevDerivation_\n    startBatch()\n    let prevAllowStateChanges_ = globalState.allowStateChanges // by default preserve previous allow\n    if (runAsAction) {\n        untrackedStart()\n        prevAllowStateChanges_ = allowStateChangesStart(true)\n    }\n    const prevAllowStateReads_ = allowStateReadsStart(true)\n    const runInfo = {\n        runAsAction_: runAsAction,\n        prevDerivation_,\n        prevAllowStateChanges_,\n        prevAllowStateReads_,\n        notifySpy_,\n        startTime_,\n        actionId_: nextActionId++,\n        parentActionId_: currentActionId\n    }\n    currentActionId = runInfo.actionId_\n    return runInfo\n}\n\nexport function _endAction(runInfo: IActionRunInfo) {\n    if (currentActionId !== runInfo.actionId_) {\n        die(30)\n    }\n    currentActionId = runInfo.parentActionId_\n\n    if (runInfo.error_ !== undefined) {\n        globalState.suppressReactionErrors = true\n    }\n    allowStateChangesEnd(runInfo.prevAllowStateChanges_)\n    allowStateReadsEnd(runInfo.prevAllowStateReads_)\n    endBatch()\n    if (runInfo.runAsAction_) {\n        untrackedEnd(runInfo.prevDerivation_)\n    }\n    if (__DEV__ && runInfo.notifySpy_) {\n        spyReportEnd({ time: Date.now() - runInfo.startTime_ })\n    }\n    globalState.suppressReactionErrors = false\n}\n\nexport function allowStateChanges<T>(allowStateChanges: boolean, func: () => T): T {\n    const prev = allowStateChangesStart(allowStateChanges)\n    try {\n        return func()\n    } finally {\n        allowStateChangesEnd(prev)\n    }\n}\n\nexport function allowStateChangesStart(allowStateChanges: boolean) {\n    const prev = globalState.allowStateChanges\n    globalState.allowStateChanges = allowStateChanges\n    return prev\n}\n\nexport function allowStateChangesEnd(prev: boolean) {\n    globalState.allowStateChanges = prev\n}\n","import {\n    Atom,\n    IEnhancer,\n    IInterceptable,\n    IEqualsComparer,\n    IInterceptor,\n    IListenable,\n    Lambda,\n    checkIfStateModificationsAreAllowed,\n    comparer,\n    createInstanceofPredicate,\n    getNextId,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isSpyEnabled,\n    notifyListeners,\n    registerInterceptor,\n    registerListener,\n    spyReport,\n    spyReportEnd,\n    spyReportStart,\n    toPrimitive,\n    globalState,\n    IUNCHANGED,\n    UPDATE\n} from \"../internal\"\n\nexport interface IValueWillChange<T> {\n    object: IObservableValue<T>\n    type: \"update\"\n    newValue: T\n}\n\nexport type IValueDidChange<T = any> = {\n    type: \"update\"\n    observableKind: \"value\"\n    object: IObservableValue<T>\n    debugObjectName: string\n    newValue: unknown\n    oldValue: unknown\n}\nexport type IBoxDidChange<T = any> =\n    | {\n          type: \"create\"\n          observableKind: \"value\"\n          object: IObservableValue<T>\n          debugObjectName: string\n          newValue: unknown\n      }\n    | IValueDidChange<T>\n\nexport interface IObservableValue<T> {\n    get(): T\n    set(value: T): void\n    intercept_(handler: IInterceptor<IValueWillChange<T>>): Lambda\n    observe_(listener: (change: IValueDidChange<T>) => void, fireImmediately?: boolean): Lambda\n}\n\nconst CREATE = \"create\"\n\nexport class ObservableValue<T>\n    extends Atom\n    implements IObservableValue<T>, IInterceptable<IValueWillChange<T>>, IListenable\n{\n    hasUnreportedChange_ = false\n    interceptors_\n    changeListeners_\n    value_\n    dehancer: any\n\n    constructor(\n        value: T,\n        public enhancer: IEnhancer<T>,\n        public name_ = __DEV__ ? \"ObservableValue@\" + getNextId() : \"ObservableValue\",\n        notifySpy = true,\n        private equals: IEqualsComparer<any> = comparer.default\n    ) {\n        super(name_)\n        this.value_ = enhancer(value, undefined, name_)\n        if (__DEV__ && notifySpy && isSpyEnabled()) {\n            // only notify spy if this is a stand-alone observable\n            spyReport({\n                type: CREATE,\n                object: this,\n                observableKind: \"value\",\n                debugObjectName: this.name_,\n                newValue: \"\" + this.value_\n            })\n        }\n    }\n\n    private dehanceValue(value: T): T {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value)\n        }\n        return value\n    }\n\n    public set(newValue: T) {\n        const oldValue = this.value_\n        newValue = this.prepareNewValue_(newValue) as any\n        if (newValue !== globalState.UNCHANGED) {\n            const notifySpy = isSpyEnabled()\n            if (__DEV__ && notifySpy) {\n                spyReportStart({\n                    type: UPDATE,\n                    object: this,\n                    observableKind: \"value\",\n                    debugObjectName: this.name_,\n                    newValue,\n                    oldValue\n                })\n            }\n            this.setNewValue_(newValue)\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n        }\n    }\n\n    private prepareNewValue_(newValue): T | IUNCHANGED {\n        checkIfStateModificationsAreAllowed(this)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IValueWillChange<T>>(this, {\n                object: this,\n                type: UPDATE,\n                newValue\n            })\n            if (!change) {\n                return globalState.UNCHANGED\n            }\n            newValue = change.newValue\n        }\n        // apply modifier\n        newValue = this.enhancer(newValue, this.value_, this.name_)\n        return this.equals(this.value_, newValue) ? globalState.UNCHANGED : newValue\n    }\n\n    setNewValue_(newValue: T) {\n        const oldValue = this.value_\n        this.value_ = newValue\n        this.reportChanged()\n        if (hasListeners(this)) {\n            notifyListeners(this, {\n                type: UPDATE,\n                object: this,\n                newValue,\n                oldValue\n            })\n        }\n    }\n\n    public get(): T {\n        this.reportObserved()\n        return this.dehanceValue(this.value_)\n    }\n\n    intercept_(handler: IInterceptor<IValueWillChange<T>>): Lambda {\n        return registerInterceptor(this, handler)\n    }\n\n    observe_(listener: (change: IValueDidChange<T>) => void, fireImmediately?: boolean): Lambda {\n        if (fireImmediately) {\n            listener({\n                observableKind: \"value\",\n                debugObjectName: this.name_,\n                object: this,\n                type: UPDATE,\n                newValue: this.value_,\n                oldValue: undefined\n            })\n        }\n        return registerListener(this, listener)\n    }\n\n    raw() {\n        // used by MST ot get undehanced value\n        return this.value_\n    }\n\n    toJSON() {\n        return this.get()\n    }\n\n    toString() {\n        return `${this.name_}[${this.value_}]`\n    }\n\n    valueOf(): T {\n        return toPrimitive(this.get())\n    }\n\n    [Symbol.toPrimitive]() {\n        return this.valueOf()\n    }\n}\n\nexport const isObservableValue = createInstanceofPredicate(\"ObservableValue\", ObservableValue) as (\n    x: any\n) => x is IObservableValue<any>\n","import {\n    CaughtException,\n    IDerivation,\n    IDerivationState_,\n    IEqualsComparer,\n    IObservable,\n    Lambda,\n    TraceMode,\n    autorun,\n    clearObserving,\n    comparer,\n    createAction,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    globalState,\n    isCaughtException,\n    isSpyEnabled,\n    propagateChangeConfirmed,\n    propagateMaybeChanged,\n    reportObserved,\n    shouldCompute,\n    spyReport,\n    startBatch,\n    toPrimitive,\n    trackDerivedFunction,\n    untrackedEnd,\n    untrackedStart,\n    UPDATE,\n    die,\n    allowStateChangesStart,\n    allowStateChangesEnd\n} from \"../internal\"\n\nexport interface IComputedValue<T> {\n    get(): T\n    set(value: T): void\n    observe_(listener: (change: IComputedDidChange<T>) => void, fireImmediately?: boolean): Lambda\n}\n\nexport interface IComputedValueOptions<T> {\n    get?: () => T\n    set?: (value: T) => void\n    name?: string\n    equals?: IEqualsComparer<T>\n    context?: any\n    requiresReaction?: boolean\n    keepAlive?: boolean\n}\n\nexport type IComputedDidChange<T = any> = {\n    type: \"update\"\n    observableKind: \"computed\"\n    object: unknown\n    debugObjectName: string\n    newValue: T\n    oldValue: T | undefined\n}\n\n/**\n * A node in the state dependency root that observes other nodes, and can be observed itself.\n *\n * ComputedValue will remember the result of the computation for the duration of the batch, or\n * while being observed.\n *\n * During this time it will recompute only when one of its direct dependencies changed,\n * but only when it is being accessed with `ComputedValue.get()`.\n *\n * Implementation description:\n * 1. First time it's being accessed it will compute and remember result\n *    give back remembered result until 2. happens\n * 2. First time any deep dependency change, propagate POSSIBLY_STALE to all observers, wait for 3.\n * 3. When it's being accessed, recompute if any shallow dependency changed.\n *    if result changed: propagate STALE to all observers, that were POSSIBLY_STALE from the last step.\n *    go to step 2. either way\n *\n * If at any point it's outside batch and it isn't observed: reset everything and go to 1.\n */\nexport class ComputedValue<T> implements IObservable, IComputedValue<T>, IDerivation {\n    dependenciesState_ = IDerivationState_.NOT_TRACKING_\n    observing_: IObservable[] = [] // nodes we are looking at. Our value depends on these nodes\n    newObserving_ = null // during tracking it's an array with new observed observers\n    isBeingObserved_ = false\n    isPendingUnobservation_: boolean = false\n    observers_ = new Set<IDerivation>()\n    diffValue_ = 0\n    runId_ = 0\n    lastAccessedBy_ = 0\n    lowestObserverState_ = IDerivationState_.UP_TO_DATE_\n    unboundDepsCount_ = 0\n    protected value_: T | undefined | CaughtException = new CaughtException(null)\n    name_: string\n    triggeredBy_?: string\n    isComputing_: boolean = false // to check for cycles\n    isRunningSetter_: boolean = false\n    derivation: () => T // N.B: unminified as it is used by MST\n    setter_?: (value: T) => void\n    isTracing_: TraceMode = TraceMode.NONE\n    scope_: Object | undefined\n    private equals_: IEqualsComparer<any>\n    private requiresReaction_: boolean | undefined\n    keepAlive_: boolean\n\n    /**\n     * Create a new computed value based on a function expression.\n     *\n     * The `name` property is for debug purposes only.\n     *\n     * The `equals` property specifies the comparer function to use to determine if a newly produced\n     * value differs from the previous value. Two comparers are provided in the library; `defaultComparer`\n     * compares based on identity comparison (===), and `structuralComparer` deeply compares the structure.\n     * Structural comparison can be convenient if you always produce a new aggregated object and\n     * don't want to notify observers if it is structurally the same.\n     * This is useful for working with vectors, mouse coordinates etc.\n     */\n    constructor(options: IComputedValueOptions<T>) {\n        if (!options.get) {\n            die(31)\n        }\n        this.derivation = options.get!\n        this.name_ = options.name || (__DEV__ ? \"ComputedValue@\" + getNextId() : \"ComputedValue\")\n        if (options.set) {\n            this.setter_ = createAction(\n                __DEV__ ? this.name_ + \"-setter\" : \"ComputedValue-setter\",\n                options.set\n            ) as any\n        }\n        this.equals_ =\n            options.equals ||\n            ((options as any).compareStructural || (options as any).struct\n                ? comparer.structural\n                : comparer.default)\n        this.scope_ = options.context\n        this.requiresReaction_ = options.requiresReaction\n        this.keepAlive_ = !!options.keepAlive\n    }\n\n    onBecomeStale_() {\n        propagateMaybeChanged(this)\n    }\n\n    public onBOL: Set<Lambda> | undefined\n    public onBUOL: Set<Lambda> | undefined\n\n    public onBO() {\n        if (this.onBOL) {\n            this.onBOL.forEach(listener => listener())\n        }\n    }\n\n    public onBUO() {\n        if (this.onBUOL) {\n            this.onBUOL.forEach(listener => listener())\n        }\n    }\n\n    /**\n     * Returns the current value of this computed value.\n     * Will evaluate its computation first if needed.\n     */\n    public get(): T {\n        if (this.isComputing_) {\n            die(32, this.name_, this.derivation)\n        }\n        if (\n            globalState.inBatch === 0 &&\n            // !globalState.trackingDerivatpion &&\n            this.observers_.size === 0 &&\n            !this.keepAlive_\n        ) {\n            if (shouldCompute(this)) {\n                this.warnAboutUntrackedRead_()\n                startBatch() // See perf test 'computed memoization'\n                this.value_ = this.computeValue_(false)\n                endBatch()\n            }\n        } else {\n            reportObserved(this)\n            if (shouldCompute(this)) {\n                let prevTrackingContext = globalState.trackingContext\n                if (this.keepAlive_ && !prevTrackingContext) {\n                    globalState.trackingContext = this\n                }\n                if (this.trackAndCompute()) {\n                    propagateChangeConfirmed(this)\n                }\n                globalState.trackingContext = prevTrackingContext\n            }\n        }\n        const result = this.value_!\n\n        if (isCaughtException(result)) {\n            throw result.cause\n        }\n        return result\n    }\n\n    public set(value: T) {\n        if (this.setter_) {\n            if (this.isRunningSetter_) {\n                die(33, this.name_)\n            }\n            this.isRunningSetter_ = true\n            try {\n                this.setter_.call(this.scope_, value)\n            } finally {\n                this.isRunningSetter_ = false\n            }\n        } else {\n            die(34, this.name_)\n        }\n    }\n\n    trackAndCompute(): boolean {\n        // N.B: unminified as it is used by MST\n        const oldValue = this.value_\n        const wasSuspended =\n            /* see #1208 */ this.dependenciesState_ === IDerivationState_.NOT_TRACKING_\n        const newValue = this.computeValue_(true)\n\n        const changed =\n            wasSuspended ||\n            isCaughtException(oldValue) ||\n            isCaughtException(newValue) ||\n            !this.equals_(oldValue, newValue)\n\n        if (changed) {\n            this.value_ = newValue\n\n            if (__DEV__ && isSpyEnabled()) {\n                spyReport({\n                    observableKind: \"computed\",\n                    debugObjectName: this.name_,\n                    object: this.scope_,\n                    type: \"update\",\n                    oldValue,\n                    newValue\n                } as IComputedDidChange)\n            }\n        }\n\n        return changed\n    }\n\n    computeValue_(track: boolean) {\n        this.isComputing_ = true\n        // don't allow state changes during computation\n        const prev = allowStateChangesStart(false)\n        let res: T | CaughtException\n        if (track) {\n            res = trackDerivedFunction(this, this.derivation, this.scope_)\n        } else {\n            if (globalState.disableErrorBoundaries === true) {\n                res = this.derivation.call(this.scope_)\n            } else {\n                try {\n                    res = this.derivation.call(this.scope_)\n                } catch (e) {\n                    res = new CaughtException(e)\n                }\n            }\n        }\n        allowStateChangesEnd(prev)\n        this.isComputing_ = false\n        return res\n    }\n\n    suspend_() {\n        if (!this.keepAlive_) {\n            clearObserving(this)\n            this.value_ = undefined // don't hold on to computed value!\n            if (__DEV__ && this.isTracing_ !== TraceMode.NONE) {\n                console.log(\n                    `[mobx.trace] Computed value '${this.name_}' was suspended and it will recompute on the next access.`\n                )\n            }\n        }\n    }\n\n    observe_(listener: (change: IComputedDidChange<T>) => void, fireImmediately?: boolean): Lambda {\n        let firstTime = true\n        let prevValue: T | undefined = undefined\n        return autorun(() => {\n            // TODO: why is this in a different place than the spyReport() function? in all other observables it's called in the same place\n            let newValue = this.get()\n            if (!firstTime || fireImmediately) {\n                const prevU = untrackedStart()\n                listener({\n                    observableKind: \"computed\",\n                    debugObjectName: this.name_,\n                    type: UPDATE,\n                    object: this,\n                    newValue,\n                    oldValue: prevValue\n                })\n                untrackedEnd(prevU)\n            }\n            firstTime = false\n            prevValue = newValue\n        })\n    }\n\n    warnAboutUntrackedRead_() {\n        if (!__DEV__) {\n            return\n        }\n        if (this.isTracing_ !== TraceMode.NONE) {\n            console.log(\n                `[mobx.trace] Computed value '${this.name_}' is being read outside a reactive context. Doing a full recompute.`\n            )\n        }\n        if (\n            typeof this.requiresReaction_ === \"boolean\"\n                ? this.requiresReaction_\n                : globalState.computedRequiresReaction\n        ) {\n            console.warn(\n                `[mobx] Computed value '${this.name_}' is being read outside a reactive context. Doing a full recompute.`\n            )\n        }\n    }\n\n    toString() {\n        return `${this.name_}[${this.derivation.toString()}]`\n    }\n\n    valueOf(): T {\n        return toPrimitive(this.get())\n    }\n\n    [Symbol.toPrimitive]() {\n        return this.valueOf()\n    }\n}\n\nexport const isComputedValue = createInstanceofPredicate(\"ComputedValue\", ComputedValue)\n","import {\n    IAtom,\n    IDepTreeNode,\n    IObservable,\n    addObserver,\n    globalState,\n    isComputedValue,\n    removeObserver\n} from \"../internal\"\n\nexport enum IDerivationState_ {\n    // before being run or (outside batch and not being observed)\n    // at this point derivation is not holding any data about dependency tree\n    NOT_TRACKING_ = -1,\n    // no shallow dependency changed since last computation\n    // won't recalculate derivation\n    // this is what makes mobx fast\n    UP_TO_DATE_ = 0,\n    // some deep dependency changed, but don't know if shallow dependency changed\n    // will require to check first if UP_TO_DATE or POSSIBLY_STALE\n    // currently only ComputedValue will propagate POSSIBLY_STALE\n    //\n    // having this state is second big optimization:\n    // don't have to recompute on every dependency change, but only when it's needed\n    POSSIBLY_STALE_ = 1,\n    // A shallow dependency has changed since last computation and the derivation\n    // will need to recompute when it's needed next.\n    STALE_ = 2\n}\n\nexport enum TraceMode {\n    NONE,\n    LOG,\n    BREAK\n}\n\n/**\n * A derivation is everything that can be derived from the state (all the atoms) in a pure manner.\n * See https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74\n */\nexport interface IDerivation extends IDepTreeNode {\n    observing_: IObservable[]\n    newObserving_: null | IObservable[]\n    dependenciesState_: IDerivationState_\n    /**\n     * Id of the current run of a derivation. Each time the derivation is tracked\n     * this number is increased by one. This number is globally unique\n     */\n    runId_: number\n    /**\n     * amount of dependencies used by the derivation in this run, which has not been bound yet.\n     */\n    unboundDepsCount_: number\n    onBecomeStale_(): void\n    isTracing_: TraceMode\n\n    /**\n     *  warn if the derivation has no dependencies after creation/update\n     */\n    requiresObservable_?: boolean\n}\n\nexport class CaughtException {\n    constructor(public cause: any) {\n        // Empty\n    }\n}\n\nexport function isCaughtException(e: any): e is CaughtException {\n    return e instanceof CaughtException\n}\n\n/**\n * Finds out whether any dependency of the derivation has actually changed.\n * If dependenciesState is 1 then it will recalculate dependencies,\n * if any dependency changed it will propagate it by changing dependenciesState to 2.\n *\n * By iterating over the dependencies in the same order that they were reported and\n * stopping on the first change, all the recalculations are only called for ComputedValues\n * that will be tracked by derivation. That is because we assume that if the first x\n * dependencies of the derivation doesn't change then the derivation should run the same way\n * up until accessing x-th dependency.\n */\nexport function shouldCompute(derivation: IDerivation): boolean {\n    switch (derivation.dependenciesState_) {\n        case IDerivationState_.UP_TO_DATE_:\n            return false\n        case IDerivationState_.NOT_TRACKING_:\n        case IDerivationState_.STALE_:\n            return true\n        case IDerivationState_.POSSIBLY_STALE_: {\n            // state propagation can occur outside of action/reactive context #2195\n            const prevAllowStateReads = allowStateReadsStart(true)\n            const prevUntracked = untrackedStart() // no need for those computeds to be reported, they will be picked up in trackDerivedFunction.\n            const obs = derivation.observing_,\n                l = obs.length\n            for (let i = 0; i < l; i++) {\n                const obj = obs[i]\n                if (isComputedValue(obj)) {\n                    if (globalState.disableErrorBoundaries) {\n                        obj.get()\n                    } else {\n                        try {\n                            obj.get()\n                        } catch (e) {\n                            // we are not interested in the value *or* exception at this moment, but if there is one, notify all\n                            untrackedEnd(prevUntracked)\n                            allowStateReadsEnd(prevAllowStateReads)\n                            return true\n                        }\n                    }\n                    // if ComputedValue `obj` actually changed it will be computed and propagated to its observers.\n                    // and `derivation` is an observer of `obj`\n                    // invariantShouldCompute(derivation)\n                    if ((derivation.dependenciesState_ as any) === IDerivationState_.STALE_) {\n                        untrackedEnd(prevUntracked)\n                        allowStateReadsEnd(prevAllowStateReads)\n                        return true\n                    }\n                }\n            }\n            changeDependenciesStateTo0(derivation)\n            untrackedEnd(prevUntracked)\n            allowStateReadsEnd(prevAllowStateReads)\n            return false\n        }\n    }\n}\n\nexport function isComputingDerivation() {\n    return globalState.trackingDerivation !== null // filter out actions inside computations\n}\n\nexport function checkIfStateModificationsAreAllowed(atom: IAtom) {\n    if (!__DEV__) {\n        return\n    }\n    const hasObservers = atom.observers_.size > 0\n    // Should not be possible to change observed state outside strict mode, except during initialization, see #563\n    if (\n        !globalState.allowStateChanges &&\n        (hasObservers || globalState.enforceActions === \"always\")\n    ) {\n        console.warn(\n            \"[MobX] \" +\n                (globalState.enforceActions\n                    ? \"Since strict-mode is enabled, changing (observed) observable values without using an action is not allowed. Tried to modify: \"\n                    : \"Side effects like changing state are not allowed at this point. Are you trying to modify state from, for example, a computed value or the render function of a React component? You can wrap side effects in 'runInAction' (or decorate functions with 'action') if needed. Tried to modify: \") +\n                atom.name_\n        )\n    }\n}\n\nexport function checkIfStateReadsAreAllowed(observable: IObservable) {\n    if (__DEV__ && !globalState.allowStateReads && globalState.observableRequiresReaction) {\n        console.warn(\n            `[mobx] Observable '${observable.name_}' being read outside a reactive context.`\n        )\n    }\n}\n\n/**\n * Executes the provided function `f` and tracks which observables are being accessed.\n * The tracking information is stored on the `derivation` object and the derivation is registered\n * as observer of any of the accessed observables.\n */\nexport function trackDerivedFunction<T>(derivation: IDerivation, f: () => T, context: any) {\n    const prevAllowStateReads = allowStateReadsStart(true)\n    // pre allocate array allocation + room for variation in deps\n    // array will be trimmed by bindDependencies\n    changeDependenciesStateTo0(derivation)\n    derivation.newObserving_ = new Array(derivation.observing_.length + 100)\n    derivation.unboundDepsCount_ = 0\n    derivation.runId_ = ++globalState.runId\n    const prevTracking = globalState.trackingDerivation\n    globalState.trackingDerivation = derivation\n    globalState.inBatch++\n    let result\n    if (globalState.disableErrorBoundaries === true) {\n        result = f.call(context)\n    } else {\n        try {\n            result = f.call(context)\n        } catch (e) {\n            result = new CaughtException(e)\n        }\n    }\n    globalState.inBatch--\n    globalState.trackingDerivation = prevTracking\n    bindDependencies(derivation)\n\n    warnAboutDerivationWithoutDependencies(derivation)\n    allowStateReadsEnd(prevAllowStateReads)\n    return result\n}\n\nfunction warnAboutDerivationWithoutDependencies(derivation: IDerivation) {\n    if (!__DEV__) {\n        return\n    }\n\n    if (derivation.observing_.length !== 0) {\n        return\n    }\n\n    if (\n        typeof derivation.requiresObservable_ === \"boolean\"\n            ? derivation.requiresObservable_\n            : globalState.reactionRequiresObservable\n    ) {\n        console.warn(\n            `[mobx] Derivation '${derivation.name_}' is created/updated without reading any observable value.`\n        )\n    }\n}\n\n/**\n * diffs newObserving with observing.\n * update observing to be newObserving with unique observables\n * notify observers that become observed/unobserved\n */\nfunction bindDependencies(derivation: IDerivation) {\n    // invariant(derivation.dependenciesState !== IDerivationState.NOT_TRACKING, \"INTERNAL ERROR bindDependencies expects derivation.dependenciesState !== -1\");\n    const prevObserving = derivation.observing_\n    const observing = (derivation.observing_ = derivation.newObserving_!)\n    let lowestNewObservingDerivationState = IDerivationState_.UP_TO_DATE_\n\n    // Go through all new observables and check diffValue: (this list can contain duplicates):\n    //   0: first occurrence, change to 1 and keep it\n    //   1: extra occurrence, drop it\n    let i0 = 0,\n        l = derivation.unboundDepsCount_\n    for (let i = 0; i < l; i++) {\n        const dep = observing[i]\n        if (dep.diffValue_ === 0) {\n            dep.diffValue_ = 1\n            if (i0 !== i) {\n                observing[i0] = dep\n            }\n            i0++\n        }\n\n        // Upcast is 'safe' here, because if dep is IObservable, `dependenciesState` will be undefined,\n        // not hitting the condition\n        if ((dep as any as IDerivation).dependenciesState_ > lowestNewObservingDerivationState) {\n            lowestNewObservingDerivationState = (dep as any as IDerivation).dependenciesState_\n        }\n    }\n    observing.length = i0\n\n    derivation.newObserving_ = null // newObserving shouldn't be needed outside tracking (statement moved down to work around FF bug, see #614)\n\n    // Go through all old observables and check diffValue: (it is unique after last bindDependencies)\n    //   0: it's not in new observables, unobserve it\n    //   1: it keeps being observed, don't want to notify it. change to 0\n    l = prevObserving.length\n    while (l--) {\n        const dep = prevObserving[l]\n        if (dep.diffValue_ === 0) {\n            removeObserver(dep, derivation)\n        }\n        dep.diffValue_ = 0\n    }\n\n    // Go through all new observables and check diffValue: (now it should be unique)\n    //   0: it was set to 0 in last loop. don't need to do anything.\n    //   1: it wasn't observed, let's observe it. set back to 0\n    while (i0--) {\n        const dep = observing[i0]\n        if (dep.diffValue_ === 1) {\n            dep.diffValue_ = 0\n            addObserver(dep, derivation)\n        }\n    }\n\n    // Some new observed derivations may become stale during this derivation computation\n    // so they have had no chance to propagate staleness (#916)\n    if (lowestNewObservingDerivationState !== IDerivationState_.UP_TO_DATE_) {\n        derivation.dependenciesState_ = lowestNewObservingDerivationState\n        derivation.onBecomeStale_()\n    }\n}\n\nexport function clearObserving(derivation: IDerivation) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR clearObserving should be called only inside batch\");\n    const obs = derivation.observing_\n    derivation.observing_ = []\n    let i = obs.length\n    while (i--) {\n        removeObserver(obs[i], derivation)\n    }\n\n    derivation.dependenciesState_ = IDerivationState_.NOT_TRACKING_\n}\n\nexport function untracked<T>(action: () => T): T {\n    const prev = untrackedStart()\n    try {\n        return action()\n    } finally {\n        untrackedEnd(prev)\n    }\n}\n\nexport function untrackedStart(): IDerivation | null {\n    const prev = globalState.trackingDerivation\n    globalState.trackingDerivation = null\n    return prev\n}\n\nexport function untrackedEnd(prev: IDerivation | null) {\n    globalState.trackingDerivation = prev\n}\n\nexport function allowStateReadsStart(allowStateReads: boolean) {\n    const prev = globalState.allowStateReads\n    globalState.allowStateReads = allowStateReads\n    return prev\n}\n\nexport function allowStateReadsEnd(prev: boolean) {\n    globalState.allowStateReads = prev\n}\n\n/**\n * needed to keep `lowestObserverState` correct. when changing from (2 or 1) to 0\n *\n */\nexport function changeDependenciesStateTo0(derivation: IDerivation) {\n    if (derivation.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {\n        return\n    }\n    derivation.dependenciesState_ = IDerivationState_.UP_TO_DATE_\n\n    const obs = derivation.observing_\n    let i = obs.length\n    while (i--) {\n        obs[i].lowestObserverState_ = IDerivationState_.UP_TO_DATE_\n    }\n}\n","import {\n    Lambda,\n    ComputedValue,\n    IDependencyTree,\n    IDerivation,\n    IDerivationState_,\n    TraceMode,\n    getDependencyTree,\n    globalState,\n    runReactions,\n    checkIfStateReadsAreAllowed\n} from \"../internal\"\n\nexport interface IDepTreeNode {\n    name_: string\n    observing_?: IObservable[]\n}\n\nexport interface IObservable extends IDepTreeNode {\n    diffValue_: number\n    /**\n     * Id of the derivation *run* that last accessed this observable.\n     * If this id equals the *run* id of the current derivation,\n     * the dependency is already established\n     */\n    lastAccessedBy_: number\n    isBeingObserved_: boolean\n\n    lowestObserverState_: IDerivationState_ // Used to avoid redundant propagations\n    isPendingUnobservation_: boolean // Used to push itself to global.pendingUnobservations at most once per batch.\n\n    observers_: Set<IDerivation>\n\n    onBUO(): void\n    onBO(): void\n\n    onBUOL: Set<Lambda> | undefined\n    onBOL: Set<Lambda> | undefined\n}\n\nexport function hasObservers(observable: IObservable): boolean {\n    return observable.observers_ && observable.observers_.size > 0\n}\n\nexport function getObservers(observable: IObservable): Set<IDerivation> {\n    return observable.observers_\n}\n\n// function invariantObservers(observable: IObservable) {\n//     const list = observable.observers\n//     const map = observable.observersIndexes\n//     const l = list.length\n//     for (let i = 0; i < l; i++) {\n//         const id = list[i].__mapid\n//         if (i) {\n//             invariant(map[id] === i, \"INTERNAL ERROR maps derivation.__mapid to index in list\") // for performance\n//         } else {\n//             invariant(!(id in map), \"INTERNAL ERROR observer on index 0 shouldn't be held in map.\") // for performance\n//         }\n//     }\n//     invariant(\n//         list.length === 0 || Object.keys(map).length === list.length - 1,\n//         \"INTERNAL ERROR there is no junk in map\"\n//     )\n// }\nexport function addObserver(observable: IObservable, node: IDerivation) {\n    // invariant(node.dependenciesState !== -1, \"INTERNAL ERROR, can add only dependenciesState !== -1\");\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR add already added node\");\n    // invariantObservers(observable);\n\n    observable.observers_.add(node)\n    if (observable.lowestObserverState_ > node.dependenciesState_) {\n        observable.lowestObserverState_ = node.dependenciesState_\n    }\n\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR didn't add node\");\n}\n\nexport function removeObserver(observable: IObservable, node: IDerivation) {\n    // invariant(globalState.inBatch > 0, \"INTERNAL ERROR, remove should be called only inside batch\");\n    // invariant(observable._observers.indexOf(node) !== -1, \"INTERNAL ERROR remove already removed node\");\n    // invariantObservers(observable);\n    observable.observers_.delete(node)\n    if (observable.observers_.size === 0) {\n        // deleting last observer\n        queueForUnobservation(observable)\n    }\n    // invariantObservers(observable);\n    // invariant(observable._observers.indexOf(node) === -1, \"INTERNAL ERROR remove already removed node2\");\n}\n\nexport function queueForUnobservation(observable: IObservable) {\n    if (observable.isPendingUnobservation_ === false) {\n        // invariant(observable._observers.length === 0, \"INTERNAL ERROR, should only queue for unobservation unobserved observables\");\n        observable.isPendingUnobservation_ = true\n        globalState.pendingUnobservations.push(observable)\n    }\n}\n\n/**\n * Batch starts a transaction, at least for purposes of memoizing ComputedValues when nothing else does.\n * During a batch `onBecomeUnobserved` will be called at most once per observable.\n * Avoids unnecessary recalculations.\n */\nexport function startBatch() {\n    globalState.inBatch++\n}\n\nexport function endBatch() {\n    if (--globalState.inBatch === 0) {\n        runReactions()\n        // the batch is actually about to finish, all unobserving should happen here.\n        const list = globalState.pendingUnobservations\n        for (let i = 0; i < list.length; i++) {\n            const observable = list[i]\n            observable.isPendingUnobservation_ = false\n            if (observable.observers_.size === 0) {\n                if (observable.isBeingObserved_) {\n                    // if this observable had reactive observers, trigger the hooks\n                    observable.isBeingObserved_ = false\n                    observable.onBUO()\n                }\n                if (observable instanceof ComputedValue) {\n                    // computed values are automatically teared down when the last observer leaves\n                    // this process happens recursively, this computed might be the last observabe of another, etc..\n                    observable.suspend_()\n                }\n            }\n        }\n        globalState.pendingUnobservations = []\n    }\n}\n\nexport function reportObserved(observable: IObservable): boolean {\n    checkIfStateReadsAreAllowed(observable)\n\n    const derivation = globalState.trackingDerivation\n    if (derivation !== null) {\n        /**\n         * Simple optimization, give each derivation run an unique id (runId)\n         * Check if last time this observable was accessed the same runId is used\n         * if this is the case, the relation is already known\n         */\n        if (derivation.runId_ !== observable.lastAccessedBy_) {\n            observable.lastAccessedBy_ = derivation.runId_\n            // Tried storing newObserving, or observing, or both as Set, but performance didn't come close...\n            derivation.newObserving_![derivation.unboundDepsCount_++] = observable\n            if (!observable.isBeingObserved_ && globalState.trackingContext) {\n                observable.isBeingObserved_ = true\n                observable.onBO()\n            }\n        }\n        return true\n    } else if (observable.observers_.size === 0 && globalState.inBatch > 0) {\n        queueForUnobservation(observable)\n    }\n\n    return false\n}\n\n// function invariantLOS(observable: IObservable, msg: string) {\n//     // it's expensive so better not run it in produciton. but temporarily helpful for testing\n//     const min = getObservers(observable).reduce((a, b) => Math.min(a, b.dependenciesState), 2)\n//     if (min >= observable.lowestObserverState) return // <- the only assumption about `lowestObserverState`\n//     throw new Error(\n//         \"lowestObserverState is wrong for \" +\n//             msg +\n//             \" because \" +\n//             min +\n//             \" < \" +\n//             observable.lowestObserverState\n//     )\n// }\n\n/**\n * NOTE: current propagation mechanism will in case of self reruning autoruns behave unexpectedly\n * It will propagate changes to observers from previous run\n * It's hard or maybe impossible (with reasonable perf) to get it right with current approach\n * Hopefully self reruning autoruns aren't a feature people should depend on\n * Also most basic use cases should be ok\n */\n\n// Called by Atom when its value changes\nexport function propagateChanged(observable: IObservable) {\n    // invariantLOS(observable, \"changed start\");\n    if (observable.lowestObserverState_ === IDerivationState_.STALE_) {\n        return\n    }\n    observable.lowestObserverState_ = IDerivationState_.STALE_\n\n    // Ideally we use for..of here, but the downcompiled version is really slow...\n    observable.observers_.forEach(d => {\n        if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {\n            if (__DEV__ && d.isTracing_ !== TraceMode.NONE) {\n                logTraceInfo(d, observable)\n            }\n            d.onBecomeStale_()\n        }\n        d.dependenciesState_ = IDerivationState_.STALE_\n    })\n    // invariantLOS(observable, \"changed end\");\n}\n\n// Called by ComputedValue when it recalculate and its value changed\nexport function propagateChangeConfirmed(observable: IObservable) {\n    // invariantLOS(observable, \"confirmed start\");\n    if (observable.lowestObserverState_ === IDerivationState_.STALE_) {\n        return\n    }\n    observable.lowestObserverState_ = IDerivationState_.STALE_\n\n    observable.observers_.forEach(d => {\n        if (d.dependenciesState_ === IDerivationState_.POSSIBLY_STALE_) {\n            d.dependenciesState_ = IDerivationState_.STALE_\n            if (__DEV__ && d.isTracing_ !== TraceMode.NONE) {\n                logTraceInfo(d, observable)\n            }\n        } else if (\n            d.dependenciesState_ === IDerivationState_.UP_TO_DATE_ // this happens during computing of `d`, just keep lowestObserverState up to date.\n        ) {\n            observable.lowestObserverState_ = IDerivationState_.UP_TO_DATE_\n        }\n    })\n    // invariantLOS(observable, \"confirmed end\");\n}\n\n// Used by computed when its dependency changed, but we don't wan't to immediately recompute.\nexport function propagateMaybeChanged(observable: IObservable) {\n    // invariantLOS(observable, \"maybe start\");\n    if (observable.lowestObserverState_ !== IDerivationState_.UP_TO_DATE_) {\n        return\n    }\n    observable.lowestObserverState_ = IDerivationState_.POSSIBLY_STALE_\n\n    observable.observers_.forEach(d => {\n        if (d.dependenciesState_ === IDerivationState_.UP_TO_DATE_) {\n            d.dependenciesState_ = IDerivationState_.POSSIBLY_STALE_\n            d.onBecomeStale_()\n        }\n    })\n    // invariantLOS(observable, \"maybe end\");\n}\n\nfunction logTraceInfo(derivation: IDerivation, observable: IObservable) {\n    console.log(\n        `[mobx.trace] '${derivation.name_}' is invalidated due to a change in: '${observable.name_}'`\n    )\n    if (derivation.isTracing_ === TraceMode.BREAK) {\n        const lines = []\n        printDepTree(getDependencyTree(derivation), lines, 1)\n\n        // prettier-ignore\n        new Function(\n`debugger;\n/*\nTracing '${derivation.name_}'\n\nYou are entering this break point because derivation '${derivation.name_}' is being traced and '${observable.name_}' is now forcing it to update.\nJust follow the stacktrace you should now see in the devtools to see precisely what piece of your code is causing this update\nThe stackframe you are looking for is at least ~6-8 stack-frames up.\n\n${derivation instanceof ComputedValue ? derivation.derivation.toString().replace(/[*]\\//g, \"/\") : \"\"}\n\nThe dependencies for this derivation are:\n\n${lines.join(\"\\n\")}\n*/\n    `)()\n    }\n}\n\nfunction printDepTree(tree: IDependencyTree, lines: string[], depth: number) {\n    if (lines.length >= 1000) {\n        lines.push(\"(and many more)\")\n        return\n    }\n    lines.push(`${\"\\t\".repeat(depth - 1)}${tree.name}`)\n    if (tree.dependencies) {\n        tree.dependencies.forEach(child => printDepTree(child, lines, depth + 1))\n    }\n}\n","import { IDerivation, IObservable, Reaction, die, getGlobal } from \"../internal\"\nimport { ComputedValue } from \"./computedvalue\"\n\n/**\n * These values will persist if global state is reset\n */\nconst persistentKeys: (keyof MobXGlobals)[] = [\n    \"mobxGuid\",\n    \"spyListeners\",\n    \"enforceActions\",\n    \"computedRequiresReaction\",\n    \"reactionRequiresObservable\",\n    \"observableRequiresReaction\",\n    \"allowStateReads\",\n    \"disableErrorBoundaries\",\n    \"runId\",\n    \"UNCHANGED\",\n    \"useProxies\"\n]\n\nexport type IUNCHANGED = {}\n\nexport class MobXGlobals {\n    /**\n     * MobXGlobals version.\n     * MobX compatiblity with other versions loaded in memory as long as this version matches.\n     * It indicates that the global state still stores similar information\n     *\n     * N.B: this version is unrelated to the package version of MobX, and is only the version of the\n     * internal state storage of MobX, and can be the same across many different package versions\n     */\n    version = 6\n\n    /**\n     * globally unique token to signal unchanged\n     */\n    UNCHANGED: IUNCHANGED = {}\n\n    /**\n     * Currently running derivation\n     */\n    trackingDerivation: IDerivation | null = null\n\n    /**\n     * Currently running reaction. This determines if we currently have a reactive context.\n     * (Tracking derivation is also set for temporal tracking of computed values inside actions,\n     * but trackingReaction can only be set by a form of Reaction)\n     */\n    trackingContext: Reaction | ComputedValue<any> | null = null\n\n    /**\n     * Each time a derivation is tracked, it is assigned a unique run-id\n     */\n    runId = 0\n\n    /**\n     * 'guid' for general purpose. Will be persisted amongst resets.\n     */\n    mobxGuid = 0\n\n    /**\n     * Are we in a batch block? (and how many of them)\n     */\n    inBatch: number = 0\n\n    /**\n     * Observables that don't have observers anymore, and are about to be\n     * suspended, unless somebody else accesses it in the same batch\n     *\n     * @type {IObservable[]}\n     */\n    pendingUnobservations: IObservable[] = []\n\n    /**\n     * List of scheduled, not yet executed, reactions.\n     */\n    pendingReactions: Reaction[] = []\n\n    /**\n     * Are we currently processing reactions?\n     */\n    isRunningReactions = false\n\n    /**\n     * Is it allowed to change observables at this point?\n     * In general, MobX doesn't allow that when running computations and React.render.\n     * To ensure that those functions stay pure.\n     */\n    allowStateChanges = false\n\n    /**\n     * Is it allowed to read observables at this point?\n     * Used to hold the state needed for `observableRequiresReaction`\n     */\n    allowStateReads = true\n\n    /**\n     * If strict mode is enabled, state changes are by default not allowed\n     */\n    enforceActions: boolean | \"always\" = true\n\n    /**\n     * Spy callbacks\n     */\n    spyListeners: { (change: any): void }[] = []\n\n    /**\n     * Globally attached error handlers that react specifically to errors in reactions\n     */\n    globalReactionErrorHandlers: ((error: any, derivation: IDerivation) => void)[] = []\n\n    /**\n     * Warn if computed values are accessed outside a reactive context\n     */\n    computedRequiresReaction = false\n\n    /**\n     * (Experimental)\n     * Warn if you try to create to derivation / reactive context without accessing any observable.\n     */\n    reactionRequiresObservable = false\n\n    /**\n     * (Experimental)\n     * Warn if observables are accessed outside a reactive context\n     */\n    observableRequiresReaction = false\n\n    /*\n     * Don't catch and rethrow exceptions. This is useful for inspecting the state of\n     * the stack when an exception occurs while debugging.\n     */\n    disableErrorBoundaries = false\n\n    /*\n     * If true, we are already handling an exception in an action. Any errors in reactions should be suppressed, as\n     * they are not the cause, see: https://github.com/mobxjs/mobx/issues/1836\n     */\n    suppressReactionErrors = false\n\n    useProxies = true\n    /*\n     * print warnings about code that would fail if proxies weren't available\n     */\n    verifyProxies = false\n\n    /**\n     * False forces all object's descriptors to\n     * writable: true\n     * configurable: true\n     */\n    safeDescriptors = true\n}\n\nlet canMergeGlobalState = true\nlet isolateCalled = false\n\nexport let globalState: MobXGlobals = (function () {\n    let global = getGlobal()\n    if (global.__mobxInstanceCount > 0 && !global.__mobxGlobals) {\n        canMergeGlobalState = false\n    }\n    if (global.__mobxGlobals && global.__mobxGlobals.version !== new MobXGlobals().version) {\n        canMergeGlobalState = false\n    }\n\n    if (!canMergeGlobalState) {\n        // Because this is a IIFE we need to let isolateCalled a chance to change\n        // so we run it after the event loop completed at least 1 iteration\n        setTimeout(() => {\n            if (!isolateCalled) {\n                die(35)\n            }\n        }, 1)\n        return new MobXGlobals()\n    } else if (global.__mobxGlobals) {\n        global.__mobxInstanceCount += 1\n        if (!global.__mobxGlobals.UNCHANGED) {\n            global.__mobxGlobals.UNCHANGED = {}\n        } // make merge backward compatible\n        return global.__mobxGlobals\n    } else {\n        global.__mobxInstanceCount = 1\n        return (global.__mobxGlobals = new MobXGlobals())\n    }\n})()\n\nexport function isolateGlobalState() {\n    if (\n        globalState.pendingReactions.length ||\n        globalState.inBatch ||\n        globalState.isRunningReactions\n    ) {\n        die(36)\n    }\n    isolateCalled = true\n    if (canMergeGlobalState) {\n        let global = getGlobal()\n        if (--global.__mobxInstanceCount === 0) {\n            global.__mobxGlobals = undefined\n        }\n        globalState = new MobXGlobals()\n    }\n}\n\nexport function getGlobalState(): any {\n    return globalState\n}\n\n/**\n * For testing purposes only; this will break the internal state of existing observables,\n * but can be used to get back at a stable state after throwing errors\n */\nexport function resetGlobalState() {\n    const defaultGlobals = new MobXGlobals()\n    for (let key in defaultGlobals) {\n        if (persistentKeys.indexOf(key as any) === -1) {\n            globalState[key] = defaultGlobals[key]\n        }\n    }\n    globalState.allowStateChanges = !globalState.enforceActions\n}\n","import {\n    $mobx,\n    IDerivation,\n    IDerivationState_,\n    IObservable,\n    Lambda,\n    TraceMode,\n    clearObserving,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    globalState,\n    isCaughtException,\n    isSpyEnabled,\n    shouldCompute,\n    spyReport,\n    spyReportEnd,\n    spyReportStart,\n    startBatch,\n    trace,\n    trackDerivedFunction\n} from \"../internal\"\n\n/**\n * Reactions are a special kind of derivations. Several things distinguishes them from normal reactive computations\n *\n * 1) They will always run, whether they are used by other computations or not.\n * This means that they are very suitable for triggering side effects like logging, updating the DOM and making network requests.\n * 2) They are not observable themselves\n * 3) They will always run after any 'normal' derivations\n * 4) They are allowed to change the state and thereby triggering themselves again, as long as they make sure the state propagates to a stable state in a reasonable amount of iterations.\n *\n * The state machine of a Reaction is as follows:\n *\n * 1) after creating, the reaction should be started by calling `runReaction` or by scheduling it (see also `autorun`)\n * 2) the `onInvalidate` handler should somehow result in a call to `this.track(someFunction)`\n * 3) all observables accessed in `someFunction` will be observed by this reaction.\n * 4) as soon as some of the dependencies has changed the Reaction will be rescheduled for another run (after the current mutation or transaction). `isScheduled` will yield true once a dependency is stale and during this period\n * 5) `onInvalidate` will be called, and we are back at step 1.\n *\n */\n\nexport interface IReactionPublic {\n    dispose(): void\n    trace(enterBreakPoint?: boolean): void\n}\n\nexport interface IReactionDisposer {\n    (): void\n    $mobx: Reaction\n}\n\nexport class Reaction implements IDerivation, IReactionPublic {\n    observing_: IObservable[] = [] // nodes we are looking at. Our value depends on these nodes\n    newObserving_: IObservable[] = []\n    dependenciesState_ = IDerivationState_.NOT_TRACKING_\n    diffValue_ = 0\n    runId_ = 0\n    unboundDepsCount_ = 0\n    isDisposed_ = false\n    isScheduled_ = false\n    isTrackPending_ = false\n    isRunning_ = false\n    isTracing_: TraceMode = TraceMode.NONE\n\n    constructor(\n        public name_: string = __DEV__ ? \"Reaction@\" + getNextId() : \"Reaction\",\n        private onInvalidate_: () => void,\n        private errorHandler_?: (error: any, derivation: IDerivation) => void,\n        public requiresObservable_?\n    ) {}\n\n    onBecomeStale_() {\n        this.schedule_()\n    }\n\n    schedule_() {\n        if (!this.isScheduled_) {\n            this.isScheduled_ = true\n            globalState.pendingReactions.push(this)\n            runReactions()\n        }\n    }\n\n    isScheduled() {\n        return this.isScheduled_\n    }\n\n    /**\n     * internal, use schedule() if you intend to kick off a reaction\n     */\n    runReaction_() {\n        if (!this.isDisposed_) {\n            startBatch()\n            this.isScheduled_ = false\n            const prev = globalState.trackingContext\n            globalState.trackingContext = this\n            if (shouldCompute(this)) {\n                this.isTrackPending_ = true\n\n                try {\n                    this.onInvalidate_()\n                    if (__DEV__ && this.isTrackPending_ && isSpyEnabled()) {\n                        // onInvalidate didn't trigger track right away..\n                        spyReport({\n                            name: this.name_,\n                            type: \"scheduled-reaction\"\n                        })\n                    }\n                } catch (e) {\n                    this.reportExceptionInDerivation_(e)\n                }\n            }\n            globalState.trackingContext = prev\n            endBatch()\n        }\n    }\n\n    track(fn: () => void) {\n        if (this.isDisposed_) {\n            return\n            // console.warn(\"Reaction already disposed\") // Note: Not a warning / error in mobx 4 either\n        }\n        startBatch()\n        const notify = isSpyEnabled()\n        let startTime\n        if (__DEV__ && notify) {\n            startTime = Date.now()\n            spyReportStart({\n                name: this.name_,\n                type: \"reaction\"\n            })\n        }\n        this.isRunning_ = true\n        const prevReaction = globalState.trackingContext // reactions could create reactions...\n        globalState.trackingContext = this\n        const result = trackDerivedFunction(this, fn, undefined)\n        globalState.trackingContext = prevReaction\n        this.isRunning_ = false\n        this.isTrackPending_ = false\n        if (this.isDisposed_) {\n            // disposed during last run. Clean up everything that was bound after the dispose call.\n            clearObserving(this)\n        }\n        if (isCaughtException(result)) {\n            this.reportExceptionInDerivation_(result.cause)\n        }\n        if (__DEV__ && notify) {\n            spyReportEnd({\n                time: Date.now() - startTime\n            })\n        }\n        endBatch()\n    }\n\n    reportExceptionInDerivation_(error: any) {\n        if (this.errorHandler_) {\n            this.errorHandler_(error, this)\n            return\n        }\n\n        if (globalState.disableErrorBoundaries) {\n            throw error\n        }\n\n        const message = __DEV__\n            ? `[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '${this}'`\n            : `[mobx] uncaught error in '${this}'`\n        if (!globalState.suppressReactionErrors) {\n            console.error(message, error)\n            /** If debugging brought you here, please, read the above message :-). Tnx! */\n        } else if (__DEV__) { console.warn(`[mobx] (error in reaction '${this.name_}' suppressed, fix error of causing action below)`) } // prettier-ignore\n\n        if (__DEV__ && isSpyEnabled()) {\n            spyReport({\n                type: \"error\",\n                name: this.name_,\n                message,\n                error: \"\" + error\n            })\n        }\n\n        globalState.globalReactionErrorHandlers.forEach(f => f(error, this))\n    }\n\n    dispose() {\n        if (!this.isDisposed_) {\n            this.isDisposed_ = true\n            if (!this.isRunning_) {\n                // if disposed while running, clean up later. Maybe not optimal, but rare case\n                startBatch()\n                clearObserving(this)\n                endBatch()\n            }\n        }\n    }\n\n    getDisposer_(): IReactionDisposer {\n        const r = this.dispose.bind(this) as IReactionDisposer\n        r[$mobx] = this\n        return r\n    }\n\n    toString() {\n        return `Reaction[${this.name_}]`\n    }\n\n    trace(enterBreakPoint: boolean = false) {\n        trace(this, enterBreakPoint)\n    }\n}\n\nexport function onReactionError(handler: (error: any, derivation: IDerivation) => void): Lambda {\n    globalState.globalReactionErrorHandlers.push(handler)\n    return () => {\n        const idx = globalState.globalReactionErrorHandlers.indexOf(handler)\n        if (idx >= 0) {\n            globalState.globalReactionErrorHandlers.splice(idx, 1)\n        }\n    }\n}\n\n/**\n * Magic number alert!\n * Defines within how many times a reaction is allowed to re-trigger itself\n * until it is assumed that this is gonna be a never ending loop...\n */\nconst MAX_REACTION_ITERATIONS = 100\n\nlet reactionScheduler: (fn: () => void) => void = f => f()\n\nexport function runReactions() {\n    // Trampolining, if runReactions are already running, new reactions will be picked up\n    if (globalState.inBatch > 0 || globalState.isRunningReactions) {\n        return\n    }\n    reactionScheduler(runReactionsHelper)\n}\n\nfunction runReactionsHelper() {\n    globalState.isRunningReactions = true\n    const allReactions = globalState.pendingReactions\n    let iterations = 0\n\n    // While running reactions, new reactions might be triggered.\n    // Hence we work with two variables and check whether\n    // we converge to no remaining reactions after a while.\n    while (allReactions.length > 0) {\n        if (++iterations === MAX_REACTION_ITERATIONS) {\n            console.error(\n                __DEV__\n                    ? `Reaction doesn't converge to a stable state after ${MAX_REACTION_ITERATIONS} iterations.` +\n                          ` Probably there is a cycle in the reactive function: ${allReactions[0]}`\n                    : `[mobx] cycle in reaction: ${allReactions[0]}`\n            )\n            allReactions.splice(0) // clear reactions\n        }\n        let remainingReactions = allReactions.splice(0)\n        for (let i = 0, l = remainingReactions.length; i < l; i++) {\n            remainingReactions[i].runReaction_()\n        }\n    }\n    globalState.isRunningReactions = false\n}\n\nexport const isReaction = createInstanceofPredicate(\"Reaction\", Reaction)\n\nexport function setReactionScheduler(fn: (f: () => void) => void) {\n    const baseScheduler = reactionScheduler\n    reactionScheduler = f => fn(() => baseScheduler(f))\n}\n","import { TraceMode, die, getAtom, globalState } from \"../internal\"\n\nexport function trace(thing?: any, prop?: string, enterBreakPoint?: boolean): void\nexport function trace(thing?: any, enterBreakPoint?: boolean): void\nexport function trace(enterBreakPoint?: boolean): void\nexport function trace(...args: any[]): void {\n    if (!__DEV__) {\n        die(`trace() is not available in production builds`)\n    }\n    let enterBreakPoint = false\n    if (typeof args[args.length - 1] === \"boolean\") {\n        enterBreakPoint = args.pop()\n    }\n    const derivation = getAtomFromArgs(args)\n    if (!derivation) {\n        return die(\n            `'trace(break?)' can only be used inside a tracked computed value or a Reaction. Consider passing in the computed value or reaction explicitly`\n        )\n    }\n    if (derivation.isTracing_ === TraceMode.NONE) {\n        console.log(`[mobx.trace] '${derivation.name_}' tracing enabled`)\n    }\n    derivation.isTracing_ = enterBreakPoint ? TraceMode.BREAK : TraceMode.LOG\n}\n\nfunction getAtomFromArgs(args): any {\n    switch (args.length) {\n        case 0:\n            return globalState.trackingDerivation\n        case 1:\n            return getAtom(args[0])\n        case 2:\n            return getAtom(args[0], args[1])\n    }\n}\n","import {\n    createAction,\n    executeAction,\n    Annotation,\n    storeAnnotation,\n    die,\n    isFunction,\n    isStringish,\n    createDecoratorAnnotation,\n    createActionAnnotation\n} from \"../internal\"\n\nexport const ACTION = \"action\"\nexport const ACTION_BOUND = \"action.bound\"\nexport const AUTOACTION = \"autoAction\"\nexport const AUTOACTION_BOUND = \"autoAction.bound\"\n\nconst DEFAULT_ACTION_NAME = \"<unnamed action>\"\n\nconst actionAnnotation = createActionAnnotation(ACTION)\nconst actionBoundAnnotation = createActionAnnotation(ACTION_BOUND, {\n    bound: true\n})\nconst autoActionAnnotation = createActionAnnotation(AUTOACTION, {\n    autoAction: true\n})\nconst autoActionBoundAnnotation = createActionAnnotation(AUTOACTION_BOUND, {\n    autoAction: true,\n    bound: true\n})\n\nexport interface IActionFactory extends Annotation, PropertyDecorator {\n    // nameless actions\n    <T extends Function | undefined | null>(fn: T): T\n    // named actions\n    <T extends Function | undefined | null>(name: string, fn: T): T\n\n    // named decorator\n    (customName: string): PropertyDecorator & Annotation\n\n    // decorator (name no longer supported)\n    bound: Annotation & PropertyDecorator\n}\n\nfunction createActionFactory(autoAction: boolean): IActionFactory {\n    const res: IActionFactory = function action(arg1, arg2?): any {\n        // action(fn() {})\n        if (isFunction(arg1)) {\n            return createAction(arg1.name || DEFAULT_ACTION_NAME, arg1, autoAction)\n        }\n        // action(\"name\", fn() {})\n        if (isFunction(arg2)) {\n            return createAction(arg1, arg2, autoAction)\n        }\n        // @action\n        if (isStringish(arg2)) {\n            return storeAnnotation(arg1, arg2, autoAction ? autoActionAnnotation : actionAnnotation)\n        }\n        // action(\"name\") & @action(\"name\")\n        if (isStringish(arg1)) {\n            return createDecoratorAnnotation(\n                createActionAnnotation(autoAction ? AUTOACTION : ACTION, {\n                    name: arg1,\n                    autoAction\n                })\n            )\n        }\n\n        if (__DEV__) {\n            die(\"Invalid arguments for `action`\")\n        }\n    } as IActionFactory\n    return res\n}\n\nexport const action: IActionFactory = createActionFactory(false)\nObject.assign(action, actionAnnotation)\nexport const autoAction: IActionFactory = createActionFactory(true)\nObject.assign(autoAction, autoActionAnnotation)\n\naction.bound = createDecoratorAnnotation(actionBoundAnnotation)\nautoAction.bound = createDecoratorAnnotation(autoActionBoundAnnotation)\n\nexport function runInAction<T>(fn: () => T): T {\n    return executeAction(fn.name || DEFAULT_ACTION_NAME, false, fn, this, undefined)\n}\n\nexport function isAction(thing: any) {\n    return isFunction(thing) && thing.isMobxAction === true\n}\n","import {\n    EMPTY_OBJECT,\n    IEqualsComparer,\n    IReactionDisposer,\n    IReactionPublic,\n    Lambda,\n    Reaction,\n    action,\n    comparer,\n    getNextId,\n    isAction,\n    isFunction,\n    isPlainObject,\n    die,\n    allowStateChanges\n} from \"../internal\"\n\nexport interface IAutorunOptions {\n    delay?: number\n    name?: string\n    /**\n     * Experimental.\n     * Warns if the view doesn't track observables\n     */\n    requiresObservable?: boolean\n    scheduler?: (callback: () => void) => any\n    onError?: (error: any) => void\n}\n\n/**\n * Creates a named reactive view and keeps it alive, so that the view is always\n * updated if one of the dependencies changes, even when the view is not further used by something else.\n * @param view The reactive view\n * @returns disposer function, which can be used to stop the view from being updated in the future.\n */\nexport function autorun(\n    view: (r: IReactionPublic) => any,\n    opts: IAutorunOptions = EMPTY_OBJECT\n): IReactionDisposer {\n    if (__DEV__) {\n        if (!isFunction(view)) {\n            die(\"Autorun expects a function as first argument\")\n        }\n        if (isAction(view)) {\n            die(\"Autorun does not accept actions since actions are untrackable\")\n        }\n    }\n\n    const name: string =\n        opts?.name ?? (__DEV__ ? (view as any).name || \"Autorun@\" + getNextId() : \"Autorun\")\n    const runSync = !opts.scheduler && !opts.delay\n    let reaction: Reaction\n\n    if (runSync) {\n        // normal autorun\n        reaction = new Reaction(\n            name,\n            function (this: Reaction) {\n                this.track(reactionRunner)\n            },\n            opts.onError,\n            opts.requiresObservable\n        )\n    } else {\n        const scheduler = createSchedulerFromOptions(opts)\n        // debounced autorun\n        let isScheduled = false\n\n        reaction = new Reaction(\n            name,\n            () => {\n                if (!isScheduled) {\n                    isScheduled = true\n                    scheduler(() => {\n                        isScheduled = false\n                        if (!reaction.isDisposed_) {\n                            reaction.track(reactionRunner)\n                        }\n                    })\n                }\n            },\n            opts.onError,\n            opts.requiresObservable\n        )\n    }\n\n    function reactionRunner() {\n        view(reaction)\n    }\n\n    reaction.schedule_()\n    return reaction.getDisposer_()\n}\n\nexport type IReactionOptions<T, FireImmediately extends boolean> = IAutorunOptions & {\n    fireImmediately?: FireImmediately\n    equals?: IEqualsComparer<T>\n}\n\nconst run = (f: Lambda) => f()\n\nfunction createSchedulerFromOptions(opts: IAutorunOptions) {\n    return opts.scheduler\n        ? opts.scheduler\n        : opts.delay\n        ? (f: Lambda) => setTimeout(f, opts.delay!)\n        : run\n}\n\nexport function reaction<T, FireImmediately extends boolean = false>(\n    expression: (r: IReactionPublic) => T,\n    effect: (\n        arg: T,\n        prev: FireImmediately extends true ? T | undefined : T,\n        r: IReactionPublic\n    ) => void,\n    opts: IReactionOptions<T, FireImmediately> = EMPTY_OBJECT\n): IReactionDisposer {\n    if (__DEV__) {\n        if (!isFunction(expression) || !isFunction(effect)) {\n            die(\"First and second argument to reaction should be functions\")\n        }\n        if (!isPlainObject(opts)) {\n            die(\"Third argument of reactions should be an object\")\n        }\n    }\n    const name = opts.name ?? (__DEV__ ? \"Reaction@\" + getNextId() : \"Reaction\")\n    const effectAction = action(\n        name,\n        opts.onError ? wrapErrorHandler(opts.onError, effect) : effect\n    )\n    const runSync = !opts.scheduler && !opts.delay\n    const scheduler = createSchedulerFromOptions(opts)\n\n    let firstTime = true\n    let isScheduled = false\n    let value: T\n    let oldValue: T | undefined\n\n    const equals: IEqualsComparer<T> = (opts as any).compareStructural\n        ? comparer.structural\n        : opts.equals || comparer.default\n\n    const r = new Reaction(\n        name,\n        () => {\n            if (firstTime || runSync) {\n                reactionRunner()\n            } else if (!isScheduled) {\n                isScheduled = true\n                scheduler!(reactionRunner)\n            }\n        },\n        opts.onError,\n        opts.requiresObservable\n    )\n\n    function reactionRunner() {\n        isScheduled = false\n        if (r.isDisposed_) {\n            return\n        }\n        let changed: boolean = false\n        r.track(() => {\n            const nextValue = allowStateChanges(false, () => expression(r))\n            changed = firstTime || !equals(value, nextValue)\n            oldValue = value\n            value = nextValue\n        })\n\n        // This casting is nesessary as TS cannot infer proper type in current funciton implementation\n        type OldValue = FireImmediately extends true ? T | undefined : T\n        if (firstTime && opts.fireImmediately!) {\n            effectAction(value, oldValue as OldValue, r)\n        } else if (!firstTime && changed) {\n            effectAction(value, oldValue as OldValue, r)\n        }\n        firstTime = false\n    }\n\n    r.schedule_()\n    return r.getDisposer_()\n}\n\nfunction wrapErrorHandler(errorHandler, baseFn) {\n    return function () {\n        try {\n            return baseFn.apply(this, arguments)\n        } catch (e) {\n            errorHandler.call(this, e)\n        }\n    }\n}\n","import { globalState, isolateGlobalState, setReactionScheduler } from \"../internal\"\n\nconst NEVER = \"never\"\nconst ALWAYS = \"always\"\nconst OBSERVED = \"observed\"\n// const IF_AVAILABLE = \"ifavailable\"\n\nexport function configure(options: {\n    enforceActions?: \"never\" | \"always\" | \"observed\"\n    computedRequiresReaction?: boolean\n    /**\n     * Warn if you try to create to derivation / reactive context without accessing any observable.\n     */\n    reactionRequiresObservable?: boolean\n    /**\n     * Warn if observables are accessed outside a reactive context\n     */\n    observableRequiresReaction?: boolean\n    isolateGlobalState?: boolean\n    disableErrorBoundaries?: boolean\n    safeDescriptors?: boolean\n    reactionScheduler?: (f: () => void) => void\n    useProxies?: \"always\" | \"never\" | \"ifavailable\"\n}): void {\n    if (options.isolateGlobalState === true) {\n        isolateGlobalState()\n    }\n    const { useProxies, enforceActions } = options\n    if (useProxies !== undefined) {\n        globalState.useProxies =\n            useProxies === ALWAYS\n                ? true\n                : useProxies === NEVER\n                ? false\n                : typeof Proxy !== \"undefined\"\n    }\n    if (useProxies === \"ifavailable\") {\n        globalState.verifyProxies = true\n    }\n    if (enforceActions !== undefined) {\n        const ea = enforceActions === ALWAYS ? ALWAYS : enforceActions === OBSERVED\n        globalState.enforceActions = ea\n        globalState.allowStateChanges = ea === true || ea === ALWAYS ? false : true\n    }\n    ;[\n        \"computedRequiresReaction\",\n        \"reactionRequiresObservable\",\n        \"observableRequiresReaction\",\n        \"disableErrorBoundaries\",\n        \"safeDescriptors\"\n    ].forEach(key => {\n        if (key in options) {\n            globalState[key] = !!options[key]\n        }\n    })\n    globalState.allowStateReads = !globalState.observableRequiresReaction\n    if (__DEV__ && globalState.disableErrorBoundaries === true) {\n        console.warn(\n            \"WARNING: Debug feature only. MobX will NOT recover from errors when `disableErrorBoundaries` is enabled.\"\n        )\n    }\n    if (options.reactionScheduler) {\n        setReactionScheduler(options.reactionScheduler)\n    }\n}\n","import {\n    CreateObservableOptions,\n    isObservableMap,\n    AnnotationsMap,\n    startBatch,\n    endBatch,\n    asObservableObject,\n    isPlainObject,\n    ObservableObjectAdministration,\n    isObservable,\n    die,\n    getOwnPropertyDescriptors,\n    $mobx,\n    ownKeys\n} from \"../internal\"\n\nexport function extendObservable<A extends Object, B extends Object>(\n    target: A,\n    properties: B,\n    annotations?: AnnotationsMap<B, never>,\n    options?: CreateObservableOptions\n): A & B {\n    if (__DEV__) {\n        if (arguments.length > 4) {\n            die(\"'extendObservable' expected 2-4 arguments\")\n        }\n        if (typeof target !== \"object\") {\n            die(\"'extendObservable' expects an object as first argument\")\n        }\n        if (isObservableMap(target)) {\n            die(\"'extendObservable' should not be used on maps, use map.merge instead\")\n        }\n        if (!isPlainObject(properties)) {\n            die(`'extendObservable' only accepts plain objects as second argument`)\n        }\n        if (isObservable(properties) || isObservable(annotations)) {\n            die(`Extending an object with another observable (object) is not supported`)\n        }\n    }\n    // Pull descriptors first, so we don't have to deal with props added by administration ($mobx)\n    const descriptors = getOwnPropertyDescriptors(properties)\n\n    const adm: ObservableObjectAdministration = asObservableObject(target, options)[$mobx]\n    startBatch()\n    try {\n        ownKeys(descriptors).forEach(key => {\n            adm.extend_(\n                key,\n                descriptors[key as any],\n                // must pass \"undefined\" for { key: undefined }\n                !annotations ? true : key in annotations ? annotations[key] : true\n            )\n        })\n    } finally {\n        endBatch()\n    }\n    return target as any\n}\n","import { IDepTreeNode, getAtom, getObservers, hasObservers } from \"../internal\"\n\nexport interface IDependencyTree {\n    name: string\n    dependencies?: IDependencyTree[]\n}\n\nexport interface IObserverTree {\n    name: string\n    observers?: IObserverTree[]\n}\n\nexport function getDependencyTree(thing: any, property?: string): IDependencyTree {\n    return nodeToDependencyTree(getAtom(thing, property))\n}\n\nfunction nodeToDependencyTree(node: IDepTreeNode): IDependencyTree {\n    const result: IDependencyTree = {\n        name: node.name_\n    }\n    if (node.observing_ && node.observing_.length > 0) {\n        result.dependencies = unique(node.observing_).map(nodeToDependencyTree)\n    }\n    return result\n}\n\nexport function getObserverTree(thing: any, property?: string): IObserverTree {\n    return nodeToObserverTree(getAtom(thing, property))\n}\n\nfunction nodeToObserverTree(node: IDepTreeNode): IObserverTree {\n    const result: IObserverTree = {\n        name: node.name_\n    }\n    if (hasObservers(node as any)) {\n        result.observers = Array.from(<any>getObservers(node as any)).map(<any>nodeToObserverTree)\n    }\n    return result\n}\n\nfunction unique<T>(list: T[]): T[] {\n    return Array.from(new Set(list))\n}\n","import {\n    action,\n    noop,\n    die,\n    isFunction,\n    Annotation,\n    isStringish,\n    storeAnnotation,\n    createFlowAnnotation,\n    createDecoratorAnnotation\n} from \"../internal\"\n\nexport const FLOW = \"flow\"\n\nlet generatorId = 0\n\nexport function FlowCancellationError() {\n    this.message = \"FLOW_CANCELLED\"\n}\nFlowCancellationError.prototype = Object.create(Error.prototype)\n\nexport function isFlowCancellationError(error: Error) {\n    return error instanceof FlowCancellationError\n}\n\nexport type CancellablePromise<T> = Promise<T> & { cancel(): void }\n\ninterface Flow extends Annotation, PropertyDecorator {\n    <R, Args extends any[]>(\n        generator: (...args: Args) => Generator<any, R, any> | AsyncGenerator<any, R, any>\n    ): (...args: Args) => CancellablePromise<R>\n    bound: Annotation & PropertyDecorator\n}\n\nconst flowAnnotation = createFlowAnnotation(\"flow\")\nconst flowBoundAnnotation = createFlowAnnotation(\"flow.bound\", { bound: true })\n\nexport const flow: Flow = Object.assign(\n    function flow(arg1, arg2?) {\n        // @flow\n        if (isStringish(arg2)) {\n            return storeAnnotation(arg1, arg2, flowAnnotation)\n        }\n        // flow(fn)\n        if (__DEV__ && arguments.length !== 1) {\n            die(`Flow expects single argument with generator function`)\n        }\n        const generator = arg1\n        const name = generator.name || \"<unnamed flow>\"\n\n        // Implementation based on https://github.com/tj/co/blob/master/index.js\n        const res = function () {\n            const ctx = this\n            const args = arguments\n            const runId = ++generatorId\n            const gen = action(`${name} - runid: ${runId} - init`, generator).apply(ctx, args)\n            let rejector: (error: any) => void\n            let pendingPromise: CancellablePromise<any> | undefined = undefined\n\n            const promise = new Promise(function (resolve, reject) {\n                let stepId = 0\n                rejector = reject\n\n                function onFulfilled(res: any) {\n                    pendingPromise = undefined\n                    let ret\n                    try {\n                        ret = action(\n                            `${name} - runid: ${runId} - yield ${stepId++}`,\n                            gen.next\n                        ).call(gen, res)\n                    } catch (e) {\n                        return reject(e)\n                    }\n\n                    next(ret)\n                }\n\n                function onRejected(err: any) {\n                    pendingPromise = undefined\n                    let ret\n                    try {\n                        ret = action(\n                            `${name} - runid: ${runId} - yield ${stepId++}`,\n                            gen.throw!\n                        ).call(gen, err)\n                    } catch (e) {\n                        return reject(e)\n                    }\n                    next(ret)\n                }\n\n                function next(ret: any) {\n                    if (isFunction(ret?.then)) {\n                        // an async iterator\n                        ret.then(next, reject)\n                        return\n                    }\n                    if (ret.done) {\n                        return resolve(ret.value)\n                    }\n                    pendingPromise = Promise.resolve(ret.value) as any\n                    return pendingPromise!.then(onFulfilled, onRejected)\n                }\n\n                onFulfilled(undefined) // kick off the process\n            }) as any\n\n            promise.cancel = action(`${name} - runid: ${runId} - cancel`, function () {\n                try {\n                    if (pendingPromise) {\n                        cancelPromise(pendingPromise)\n                    }\n                    // Finally block can return (or yield) stuff..\n                    const res = gen.return!(undefined as any)\n                    // eat anything that promise would do, it's cancelled!\n                    const yieldedPromise = Promise.resolve(res.value)\n                    yieldedPromise.then(noop, noop)\n                    cancelPromise(yieldedPromise) // maybe it can be cancelled :)\n                    // reject our original promise\n                    rejector(new FlowCancellationError())\n                } catch (e) {\n                    rejector(e) // there could be a throwing finally block\n                }\n            })\n            return promise\n        }\n        res.isMobXFlow = true\n        return res\n    } as any,\n    flowAnnotation\n)\n\nflow.bound = createDecoratorAnnotation(flowBoundAnnotation)\n\nfunction cancelPromise(promise) {\n    if (isFunction(promise.cancel)) {\n        promise.cancel()\n    }\n}\n\nexport function flowResult<T>(\n    result: T\n): T extends Generator<any, infer R, any>\n    ? CancellablePromise<R>\n    : T extends CancellablePromise<any>\n    ? T\n    : never {\n    return result as any // just tricking TypeScript :)\n}\n\nexport function isFlow(fn: any): boolean {\n    return fn?.isMobXFlow === true\n}\n","import {\n    $mobx,\n    isAtom,\n    isComputedValue,\n    isObservableArray,\n    isObservableMap,\n    isObservableObject,\n    isReaction,\n    die,\n    isStringish\n} from \"../internal\"\n\nfunction _isObservable(value, property?: PropertyKey): boolean {\n    if (!value) {\n        return false\n    }\n    if (property !== undefined) {\n        if (__DEV__ && (isObservableMap(value) || isObservableArray(value))) {\n            return die(\n                \"isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.\"\n            )\n        }\n        if (isObservableObject(value)) {\n            return value[$mobx].values_.has(property)\n        }\n        return false\n    }\n    // For first check, see #701\n    return (\n        isObservableObject(value) ||\n        !!value[$mobx] ||\n        isAtom(value) ||\n        isReaction(value) ||\n        isComputedValue(value)\n    )\n}\n\nexport function isObservable(value: any): boolean {\n    if (__DEV__ && arguments.length !== 1) {\n        die(\n            `isObservable expects only 1 argument. Use isObservableProp to inspect the observability of a property`\n        )\n    }\n    return _isObservable(value)\n}\n\nexport function isObservableProp(value: any, propName: PropertyKey): boolean {\n    if (__DEV__ && !isStringish(propName)) {\n        return die(`expected a property name as second argument`)\n    }\n    return _isObservable(value, propName)\n}\n","import { endBatch, startBatch } from \"../internal\"\n\n/**\n * During a transaction no views are updated until the end of the transaction.\n * The transaction will be run synchronously nonetheless.\n *\n * @param action a function that updates some reactive state\n * @returns any value that was returned by the 'action' parameter.\n */\nexport function transaction<T>(action: () => T, thisArg = undefined): T {\n    startBatch()\n    try {\n        return action.apply(thisArg)\n    } finally {\n        endBatch()\n    }\n}\n","import { Lambda, once, untrackedEnd, untrackedStart, die } from \"../internal\"\n\nexport type IInterceptor<T> = (change: T) => T | null\n\nexport interface IInterceptable<T> {\n    interceptors_: IInterceptor<T>[] | undefined\n}\n\nexport function hasInterceptors(interceptable: IInterceptable<any>) {\n    return interceptable.interceptors_ !== undefined && interceptable.interceptors_.length > 0\n}\n\nexport function registerInterceptor<T>(\n    interceptable: IInterceptable<T>,\n    handler: IInterceptor<T>\n): Lambda {\n    const interceptors = interceptable.interceptors_ || (interceptable.interceptors_ = [])\n    interceptors.push(handler)\n    return once(() => {\n        const idx = interceptors.indexOf(handler)\n        if (idx !== -1) {\n            interceptors.splice(idx, 1)\n        }\n    })\n}\n\nexport function interceptChange<T>(\n    interceptable: IInterceptable<T | null>,\n    change: T | null\n): T | null {\n    const prevU = untrackedStart()\n    try {\n        // Interceptor can modify the array, copy it to avoid concurrent modification, see #1950\n        const interceptors = [...(interceptable.interceptors_ || [])]\n        for (let i = 0, l = interceptors.length; i < l; i++) {\n            change = interceptors[i](change)\n            if (change && !(change as any).type) {\n                die(14)\n            }\n            if (!change) {\n                break\n            }\n        }\n        return change\n    } finally {\n        untrackedEnd(prevU)\n    }\n}\n","import { Lambda, once, untrackedEnd, untrackedStart } from \"../internal\"\n\nexport interface IListenable {\n    changeListeners_: Function[] | undefined\n}\n\nexport function hasListeners(listenable: IListenable) {\n    return listenable.changeListeners_ !== undefined && listenable.changeListeners_.length > 0\n}\n\nexport function registerListener(listenable: IListenable, handler: Function): Lambda {\n    const listeners = listenable.changeListeners_ || (listenable.changeListeners_ = [])\n    listeners.push(handler)\n    return once(() => {\n        const idx = listeners.indexOf(handler)\n        if (idx !== -1) {\n            listeners.splice(idx, 1)\n        }\n    })\n}\n\nexport function notifyListeners<T>(listenable: IListenable, change: T) {\n    const prevU = untrackedStart()\n    let listeners = listenable.changeListeners_\n    if (!listeners) {\n        return\n    }\n    listeners = listeners.slice()\n    for (let i = 0, l = listeners.length; i < l; i++) {\n        listeners[i](change)\n    }\n    untrackedEnd(prevU)\n}\n","import {\n    $mobx,\n    asObservableObject,\n    AnnotationsMap,\n    endBatch,\n    startBatch,\n    CreateObservableOptions,\n    ObservableObjectAdministration,\n    collectStoredAnnotations,\n    isPlainObject,\n    isObservableObject,\n    die,\n    ownKeys,\n    extendObservable,\n    addHiddenProp,\n    storedAnnotationsSymbol\n} from \"../internal\"\n\n// Hack based on https://github.com/Microsoft/TypeScript/issues/14829#issuecomment-322267089\n// We need this, because otherwise, AdditionalKeys is going to be inferred to be any\n// set of superfluous keys. But, we rather want to get a compile error unless AdditionalKeys is\n// _explicity_ passed as generic argument\n// Fixes: https://github.com/mobxjs/mobx/issues/2325#issuecomment-691070022\ntype NoInfer<T> = [T][T extends any ? 0 : never]\n\nexport function makeObservable<T extends object, AdditionalKeys extends PropertyKey = never>(\n    target: T,\n    annotations?: AnnotationsMap<T, NoInfer<AdditionalKeys>>,\n    options?: CreateObservableOptions\n): T {\n    const adm: ObservableObjectAdministration = asObservableObject(target, options)[$mobx]\n    startBatch()\n    try {\n        if (__DEV__ && annotations && target[storedAnnotationsSymbol]) {\n            die(\n                `makeObservable second arg must be nullish when using decorators. Mixing @decorator syntax with annotations is not supported.`\n            )\n        }\n        // Default to decorators\n        annotations ??= collectStoredAnnotations(target)\n\n        // Annotate\n        ownKeys(annotations).forEach(key => adm.make_(key, annotations![key]))\n    } finally {\n        endBatch()\n    }\n    return target\n}\n\n// proto[keysSymbol] = new Set<PropertyKey>()\nconst keysSymbol = Symbol(\"mobx-keys\")\n\nexport function makeAutoObservable<T extends object, AdditionalKeys extends PropertyKey = never>(\n    target: T,\n    overrides?: AnnotationsMap<T, NoInfer<AdditionalKeys>>,\n    options?: CreateObservableOptions\n): T {\n    if (__DEV__) {\n        if (!isPlainObject(target) && !isPlainObject(Object.getPrototypeOf(target))) {\n            die(`'makeAutoObservable' can only be used for classes that don't have a superclass`)\n        }\n        if (isObservableObject(target)) {\n            die(`makeAutoObservable can only be used on objects not already made observable`)\n        }\n    }\n\n    // Optimization: avoid visiting protos\n    // Assumes that annotation.make_/.extend_ works the same for plain objects\n    if (isPlainObject(target)) {\n        return extendObservable(target, target, overrides, options)\n    }\n\n    const adm: ObservableObjectAdministration = asObservableObject(target, options)[$mobx]\n\n    // Optimization: cache keys on proto\n    // Assumes makeAutoObservable can be called only once per object and can't be used in subclass\n    if (!target[keysSymbol]) {\n        const proto = Object.getPrototypeOf(target)\n        const keys = new Set([...ownKeys(target), ...ownKeys(proto)])\n        keys.delete(\"constructor\")\n        keys.delete($mobx)\n        addHiddenProp(proto, keysSymbol, keys)\n    }\n\n    startBatch()\n    try {\n        target[keysSymbol].forEach(key =>\n            adm.make_(\n                key,\n                // must pass \"undefined\" for { key: undefined }\n                !overrides ? true : key in overrides ? overrides[key] : true\n            )\n        )\n    } finally {\n        endBatch()\n    }\n    return target\n}\n","import {\n    $mobx,\n    Atom,\n    EMPTY_ARRAY,\n    IAtom,\n    IEnhancer,\n    IInterceptable,\n    IInterceptor,\n    IListenable,\n    Lambda,\n    addHiddenFinalProp,\n    checkIfStateModificationsAreAllowed,\n    createInstanceofPredicate,\n    getNextId,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isObject,\n    isSpyEnabled,\n    notifyListeners,\n    registerInterceptor,\n    registerListener,\n    spyReportEnd,\n    spyReportStart,\n    allowStateChangesStart,\n    allowStateChangesEnd,\n    assertProxies,\n    reserveArrayBuffer,\n    hasProp,\n    die,\n    globalState\n} from \"../internal\"\n\nconst SPLICE = \"splice\"\nexport const UPDATE = \"update\"\nexport const MAX_SPLICE_SIZE = 10000 // See e.g. https://github.com/mobxjs/mobx/issues/859\n\nexport interface IObservableArray<T = any> extends Array<T> {\n    spliceWithArray(index: number, deleteCount?: number, newItems?: T[]): T[]\n    clear(): T[]\n    replace(newItems: T[]): T[]\n    remove(value: T): boolean\n    toJSON(): T[]\n}\n\ninterface IArrayBaseChange<T> {\n    object: IObservableArray<T>\n    observableKind: \"array\"\n    debugObjectName: string\n    index: number\n}\n\nexport type IArrayDidChange<T = any> = IArrayUpdate<T> | IArraySplice<T>\n\nexport interface IArrayUpdate<T = any> extends IArrayBaseChange<T> {\n    type: \"update\"\n    newValue: T\n    oldValue: T\n}\n\nexport interface IArraySplice<T = any> extends IArrayBaseChange<T> {\n    type: \"splice\"\n    added: T[]\n    addedCount: number\n    removed: T[]\n    removedCount: number\n}\n\nexport interface IArrayWillChange<T = any> {\n    object: IObservableArray<T>\n    index: number\n    type: \"update\"\n    newValue: T\n}\n\nexport interface IArrayWillSplice<T = any> {\n    object: IObservableArray<T>\n    index: number\n    type: \"splice\"\n    added: T[]\n    removedCount: number\n}\n\nconst arrayTraps = {\n    get(target, name) {\n        const adm: ObservableArrayAdministration = target[$mobx]\n        if (name === $mobx) {\n            return adm\n        }\n        if (name === \"length\") {\n            return adm.getArrayLength_()\n        }\n        if (typeof name === \"string\" && !isNaN(name as any)) {\n            return adm.get_(parseInt(name))\n        }\n        if (hasProp(arrayExtensions, name)) {\n            return arrayExtensions[name]\n        }\n        return target[name]\n    },\n    set(target, name, value): boolean {\n        const adm: ObservableArrayAdministration = target[$mobx]\n        if (name === \"length\") {\n            adm.setArrayLength_(value)\n        }\n        if (typeof name === \"symbol\" || isNaN(name)) {\n            target[name] = value\n        } else {\n            // numeric string\n            adm.set_(parseInt(name), value)\n        }\n        return true\n    },\n    preventExtensions() {\n        die(15)\n    }\n}\n\nexport class ObservableArrayAdministration\n    implements IInterceptable<IArrayWillChange<any> | IArrayWillSplice<any>>, IListenable\n{\n    atom_: IAtom\n    readonly values_: any[] = [] // this is the prop that gets proxied, so can't replace it!\n    interceptors_\n    changeListeners_\n    enhancer_: (newV: any, oldV: any | undefined) => any\n    dehancer: any\n    proxy_!: IObservableArray<any>\n    lastKnownLength_ = 0\n\n    constructor(\n        name = __DEV__ ? \"ObservableArray@\" + getNextId() : \"ObservableArray\",\n        enhancer: IEnhancer<any>,\n        public owned_: boolean,\n        public legacyMode_: boolean\n    ) {\n        this.atom_ = new Atom(name)\n        this.enhancer_ = (newV, oldV) =>\n            enhancer(newV, oldV, __DEV__ ? name + \"[..]\" : \"ObservableArray[..]\")\n    }\n\n    dehanceValue_(value: any): any {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value)\n        }\n        return value\n    }\n\n    dehanceValues_(values: any[]): any[] {\n        if (this.dehancer !== undefined && values.length > 0) {\n            return values.map(this.dehancer) as any\n        }\n        return values\n    }\n\n    intercept_(handler: IInterceptor<IArrayWillChange<any> | IArrayWillSplice<any>>): Lambda {\n        return registerInterceptor<IArrayWillChange<any> | IArrayWillSplice<any>>(this, handler)\n    }\n\n    observe_(\n        listener: (changeData: IArrayDidChange<any>) => void,\n        fireImmediately = false\n    ): Lambda {\n        if (fireImmediately) {\n            listener(<IArraySplice<any>>{\n                observableKind: \"array\",\n                object: this.proxy_ as any,\n                debugObjectName: this.atom_.name_,\n                type: \"splice\",\n                index: 0,\n                added: this.values_.slice(),\n                addedCount: this.values_.length,\n                removed: [],\n                removedCount: 0\n            })\n        }\n        return registerListener(this, listener)\n    }\n\n    getArrayLength_(): number {\n        this.atom_.reportObserved()\n        return this.values_.length\n    }\n\n    setArrayLength_(newLength: number) {\n        if (typeof newLength !== \"number\" || isNaN(newLength) || newLength < 0) {\n            die(\"Out of range: \" + newLength)\n        }\n        let currentLength = this.values_.length\n        if (newLength === currentLength) {\n            return\n        } else if (newLength > currentLength) {\n            const newItems = new Array(newLength - currentLength)\n            for (let i = 0; i < newLength - currentLength; i++) {\n                newItems[i] = undefined\n            } // No Array.fill everywhere...\n            this.spliceWithArray_(currentLength, 0, newItems)\n        } else {\n            this.spliceWithArray_(newLength, currentLength - newLength)\n        }\n    }\n\n    updateArrayLength_(oldLength: number, delta: number) {\n        if (oldLength !== this.lastKnownLength_) {\n            die(16)\n        }\n        this.lastKnownLength_ += delta\n        if (this.legacyMode_ && delta > 0) {\n            reserveArrayBuffer(oldLength + delta + 1)\n        }\n    }\n\n    spliceWithArray_(index: number, deleteCount?: number, newItems?: any[]): any[] {\n        checkIfStateModificationsAreAllowed(this.atom_)\n        const length = this.values_.length\n\n        if (index === undefined) {\n            index = 0\n        } else if (index > length) {\n            index = length\n        } else if (index < 0) {\n            index = Math.max(0, length + index)\n        }\n\n        if (arguments.length === 1) {\n            deleteCount = length - index\n        } else if (deleteCount === undefined || deleteCount === null) {\n            deleteCount = 0\n        } else {\n            deleteCount = Math.max(0, Math.min(deleteCount, length - index))\n        }\n\n        if (newItems === undefined) {\n            newItems = EMPTY_ARRAY\n        }\n\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IArrayWillSplice<any>>(this as any, {\n                object: this.proxy_ as any,\n                type: SPLICE,\n                index,\n                removedCount: deleteCount,\n                added: newItems\n            })\n            if (!change) {\n                return EMPTY_ARRAY\n            }\n            deleteCount = change.removedCount\n            newItems = change.added\n        }\n\n        newItems =\n            newItems.length === 0 ? newItems : newItems.map(v => this.enhancer_(v, undefined))\n        if (this.legacyMode_ || __DEV__) {\n            const lengthDelta = newItems.length - deleteCount\n            this.updateArrayLength_(length, lengthDelta) // checks if internal array wasn't modified\n        }\n        const res = this.spliceItemsIntoValues_(index, deleteCount, newItems)\n\n        if (deleteCount !== 0 || newItems.length !== 0) {\n            this.notifyArraySplice_(index, newItems, res)\n        }\n        return this.dehanceValues_(res)\n    }\n\n    spliceItemsIntoValues_(index: number, deleteCount: number, newItems: any[]): any[] {\n        if (newItems.length < MAX_SPLICE_SIZE) {\n            return this.values_.splice(index, deleteCount, ...newItems)\n        } else {\n            // The items removed by the splice\n            const res = this.values_.slice(index, index + deleteCount)\n            // The items that that should remain at the end of the array\n            let oldItems = this.values_.slice(index + deleteCount)\n            // New length is the previous length + addition count - deletion count\n            this.values_.length += newItems.length - deleteCount\n            for (let i = 0; i < newItems.length; i++) {\n                this.values_[index + i] = newItems[i]\n            }\n            for (let i = 0; i < oldItems.length; i++) {\n                this.values_[index + newItems.length + i] = oldItems[i]\n            }\n            return res\n        }\n    }\n\n    notifyArrayChildUpdate_(index: number, newValue: any, oldValue: any) {\n        const notifySpy = !this.owned_ && isSpyEnabled()\n        const notify = hasListeners(this)\n        const change: IArrayDidChange | null =\n            notify || notifySpy\n                ? ({\n                      observableKind: \"array\",\n                      object: this.proxy_,\n                      type: UPDATE,\n                      debugObjectName: this.atom_.name_,\n                      index,\n                      newValue,\n                      oldValue\n                  } as const)\n                : null\n\n        // The reason why this is on right hand side here (and not above), is this way the uglifier will drop it, but it won't\n        // cause any runtime overhead in development mode without NODE_ENV set, unless spying is enabled\n        if (__DEV__ && notifySpy) {\n            spyReportStart(change!)\n        }\n        this.atom_.reportChanged()\n        if (notify) {\n            notifyListeners(this, change)\n        }\n        if (__DEV__ && notifySpy) {\n            spyReportEnd()\n        }\n    }\n\n    notifyArraySplice_(index: number, added: any[], removed: any[]) {\n        const notifySpy = !this.owned_ && isSpyEnabled()\n        const notify = hasListeners(this)\n        const change: IArraySplice | null =\n            notify || notifySpy\n                ? ({\n                      observableKind: \"array\",\n                      object: this.proxy_,\n                      debugObjectName: this.atom_.name_,\n                      type: SPLICE,\n                      index,\n                      removed,\n                      added,\n                      removedCount: removed.length,\n                      addedCount: added.length\n                  } as const)\n                : null\n\n        if (__DEV__ && notifySpy) {\n            spyReportStart(change!)\n        }\n        this.atom_.reportChanged()\n        // conform: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/observe\n        if (notify) {\n            notifyListeners(this, change)\n        }\n        if (__DEV__ && notifySpy) {\n            spyReportEnd()\n        }\n    }\n\n    get_(index: number): any | undefined {\n        if (index < this.values_.length) {\n            this.atom_.reportObserved()\n            return this.dehanceValue_(this.values_[index])\n        }\n        console.warn(\n            __DEV__\n                ? `[mobx] Out of bounds read: ${index}`\n                : `[mobx.array] Attempt to read an array index (${index}) that is out of bounds (${this.values_.length}). Please check length first. Out of bound indices will not be tracked by MobX`\n        )\n    }\n\n    set_(index: number, newValue: any) {\n        const values = this.values_\n        if (index < values.length) {\n            // update at index in range\n            checkIfStateModificationsAreAllowed(this.atom_)\n            const oldValue = values[index]\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IArrayWillChange<any>>(this as any, {\n                    type: UPDATE,\n                    object: this.proxy_ as any, // since \"this\" is the real array we need to pass its proxy\n                    index,\n                    newValue\n                })\n                if (!change) {\n                    return\n                }\n                newValue = change.newValue\n            }\n            newValue = this.enhancer_(newValue, oldValue)\n            const changed = newValue !== oldValue\n            if (changed) {\n                values[index] = newValue\n                this.notifyArrayChildUpdate_(index, newValue, oldValue)\n            }\n        } else if (index === values.length) {\n            // add a new item\n            this.spliceWithArray_(index, 0, [newValue])\n        } else {\n            // out of bounds\n            die(17, index, values.length)\n        }\n    }\n}\n\nexport function createObservableArray<T>(\n    initialValues: T[] | undefined,\n    enhancer: IEnhancer<T>,\n    name = __DEV__ ? \"ObservableArray@\" + getNextId() : \"ObservableArray\",\n    owned = false\n): IObservableArray<T> {\n    assertProxies()\n    const adm = new ObservableArrayAdministration(name, enhancer, owned, false)\n    addHiddenFinalProp(adm.values_, $mobx, adm)\n    const proxy = new Proxy(adm.values_, arrayTraps) as any\n    adm.proxy_ = proxy\n    if (initialValues && initialValues.length) {\n        const prev = allowStateChangesStart(true)\n        adm.spliceWithArray_(0, 0, initialValues)\n        allowStateChangesEnd(prev)\n    }\n    return proxy\n}\n\n// eslint-disable-next-line\nexport var arrayExtensions = {\n    clear(): any[] {\n        return this.splice(0)\n    },\n\n    replace(newItems: any[]) {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        return adm.spliceWithArray_(0, adm.values_.length, newItems)\n    },\n\n    // Used by JSON.stringify\n    toJSON(): any[] {\n        return this.slice()\n    },\n\n    /*\n     * functions that do alter the internal structure of the array, (based on lib.es6.d.ts)\n     * since these functions alter the inner structure of the array, the have side effects.\n     * Because the have side effects, they should not be used in computed function,\n     * and for that reason the do not call dependencyState.notifyObserved\n     */\n    splice(index: number, deleteCount?: number, ...newItems: any[]): any[] {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        switch (arguments.length) {\n            case 0:\n                return []\n            case 1:\n                return adm.spliceWithArray_(index)\n            case 2:\n                return adm.spliceWithArray_(index, deleteCount)\n        }\n        return adm.spliceWithArray_(index, deleteCount, newItems)\n    },\n\n    spliceWithArray(index: number, deleteCount?: number, newItems?: any[]): any[] {\n        return (this[$mobx] as ObservableArrayAdministration).spliceWithArray_(\n            index,\n            deleteCount,\n            newItems\n        )\n    },\n\n    push(...items: any[]): number {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.spliceWithArray_(adm.values_.length, 0, items)\n        return adm.values_.length\n    },\n\n    pop() {\n        return this.splice(Math.max(this[$mobx].values_.length - 1, 0), 1)[0]\n    },\n\n    shift() {\n        return this.splice(0, 1)[0]\n    },\n\n    unshift(...items: any[]): number {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.spliceWithArray_(0, 0, items)\n        return adm.values_.length\n    },\n\n    reverse(): any[] {\n        // reverse by default mutates in place before returning the result\n        // which makes it both a 'derivation' and a 'mutation'.\n        if (globalState.trackingDerivation) {\n            die(37, \"reverse\")\n        }\n        this.replace(this.slice().reverse())\n        return this\n    },\n\n    sort(): any[] {\n        // sort by default mutates in place before returning the result\n        // which goes against all good practices. Let's not change the array in place!\n        if (globalState.trackingDerivation) {\n            die(37, \"sort\")\n        }\n        const copy = this.slice()\n        copy.sort.apply(copy, arguments)\n        this.replace(copy)\n        return this\n    },\n\n    remove(value: any): boolean {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        const idx = adm.dehanceValues_(adm.values_).indexOf(value)\n        if (idx > -1) {\n            this.splice(idx, 1)\n            return true\n        }\n        return false\n    }\n}\n\n/**\n * Wrap function from prototype\n * Without this, everything works as well, but this works\n * faster as everything works on unproxied values\n */\naddArrayExtension(\"concat\", simpleFunc)\naddArrayExtension(\"flat\", simpleFunc)\naddArrayExtension(\"includes\", simpleFunc)\naddArrayExtension(\"indexOf\", simpleFunc)\naddArrayExtension(\"join\", simpleFunc)\naddArrayExtension(\"lastIndexOf\", simpleFunc)\naddArrayExtension(\"slice\", simpleFunc)\naddArrayExtension(\"toString\", simpleFunc)\naddArrayExtension(\"toLocaleString\", simpleFunc)\n// map\naddArrayExtension(\"every\", mapLikeFunc)\naddArrayExtension(\"filter\", mapLikeFunc)\naddArrayExtension(\"find\", mapLikeFunc)\naddArrayExtension(\"findIndex\", mapLikeFunc)\naddArrayExtension(\"flatMap\", mapLikeFunc)\naddArrayExtension(\"forEach\", mapLikeFunc)\naddArrayExtension(\"map\", mapLikeFunc)\naddArrayExtension(\"some\", mapLikeFunc)\n// reduce\naddArrayExtension(\"reduce\", reduceLikeFunc)\naddArrayExtension(\"reduceRight\", reduceLikeFunc)\n\nfunction addArrayExtension(funcName, funcFactory) {\n    if (typeof Array.prototype[funcName] === \"function\") {\n        arrayExtensions[funcName] = funcFactory(funcName)\n    }\n}\n\n// Report and delegate to dehanced array\nfunction simpleFunc(funcName) {\n    return function () {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.atom_.reportObserved()\n        const dehancedValues = adm.dehanceValues_(adm.values_)\n        return dehancedValues[funcName].apply(dehancedValues, arguments)\n    }\n}\n\n// Make sure callbacks recieve correct array arg #2326\nfunction mapLikeFunc(funcName) {\n    return function (callback, thisArg) {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.atom_.reportObserved()\n        const dehancedValues = adm.dehanceValues_(adm.values_)\n        return dehancedValues[funcName]((element, index) => {\n            return callback.call(thisArg, element, index, this)\n        })\n    }\n}\n\n// Make sure callbacks recieve correct array arg #2326\nfunction reduceLikeFunc(funcName) {\n    return function () {\n        const adm: ObservableArrayAdministration = this[$mobx]\n        adm.atom_.reportObserved()\n        const dehancedValues = adm.dehanceValues_(adm.values_)\n        // #2432 - reduce behavior depends on arguments.length\n        const callback = arguments[0]\n        arguments[0] = (accumulator, currentValue, index) => {\n            return callback(accumulator, currentValue, index, this)\n        }\n        return dehancedValues[funcName].apply(dehancedValues, arguments)\n    }\n}\n\nconst isObservableArrayAdministration = createInstanceofPredicate(\n    \"ObservableArrayAdministration\",\n    ObservableArrayAdministration\n)\n\nexport function isObservableArray(thing): thing is IObservableArray<any> {\n    return isObject(thing) && isObservableArrayAdministration(thing[$mobx])\n}\n","import { IComputedDidChange } from \"./computedvalue\"\nimport { IValueDidChange, IBoxDidChange } from \"./../types/observablevalue\"\nimport { IObjectDidChange } from \"./../types/observableobject\"\nimport { IArrayDidChange } from \"./../types/observablearray\"\nimport { Lambda, globalState, once, ISetDidChange, IMapDidChange } from \"../internal\"\n\nexport function isSpyEnabled() {\n    return __DEV__ && !!globalState.spyListeners.length\n}\n\nexport type PureSpyEvent =\n    | { type: \"action\"; name: string; object: unknown; arguments: unknown[] }\n    | { type: \"scheduled-reaction\"; name: string }\n    | { type: \"reaction\"; name: string }\n    | { type: \"error\"; name: string; message: string; error: string }\n    | IComputedDidChange<unknown>\n    | IObjectDidChange<unknown>\n    | IArrayDidChange<unknown>\n    | IMapDidChange<unknown, unknown>\n    | ISetDidChange<unknown>\n    | IValueDidChange<unknown>\n    | IBoxDidChange<unknown>\n    | { type: \"report-end\"; spyReportEnd: true; time?: number }\n\ntype SpyEvent = PureSpyEvent & { spyReportStart?: true }\n\nexport function spyReport(event: SpyEvent) {\n    if (!__DEV__) {\n        return\n    } // dead code elimination can do the rest\n    if (!globalState.spyListeners.length) {\n        return\n    }\n    const listeners = globalState.spyListeners\n    for (let i = 0, l = listeners.length; i < l; i++) {\n        listeners[i](event)\n    }\n}\n\nexport function spyReportStart(event: PureSpyEvent) {\n    if (!__DEV__) {\n        return\n    }\n    const change = { ...event, spyReportStart: true as const }\n    spyReport(change)\n}\n\nconst END_EVENT: SpyEvent = { type: \"report-end\", spyReportEnd: true }\n\nexport function spyReportEnd(change?: { time?: number }) {\n    if (!__DEV__) {\n        return\n    }\n    if (change) {\n        spyReport({ ...change, type: \"report-end\", spyReportEnd: true })\n    } else {\n        spyReport(END_EVENT)\n    }\n}\n\nexport function spy(listener: (change: SpyEvent) => void): Lambda {\n    if (!__DEV__) {\n        console.warn(`[mobx.spy] Is a no-op in production builds`)\n        return function () {}\n    } else {\n        globalState.spyListeners.push(listener)\n        return once(() => {\n            globalState.spyListeners = globalState.spyListeners.filter(l => l !== listener)\n        })\n    }\n}\n","import {\n    $mobx,\n    IEnhancer,\n    IInterceptable,\n    IInterceptor,\n    IListenable,\n    Lambda,\n    ObservableValue,\n    checkIfStateModificationsAreAllowed,\n    createAtom,\n    createInstanceofPredicate,\n    deepEnhancer,\n    getNextId,\n    getPlainObjectKeys,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isES6Map,\n    isPlainObject,\n    isSpyEnabled,\n    makeIterable,\n    notifyListeners,\n    referenceEnhancer,\n    registerInterceptor,\n    registerListener,\n    spyReportEnd,\n    spyReportStart,\n    stringifyKey,\n    transaction,\n    untracked,\n    onBecomeUnobserved,\n    globalState,\n    die,\n    isFunction,\n    UPDATE,\n    IAtom,\n    PureSpyEvent,\n    allowStateChanges\n} from \"../internal\"\n\nexport interface IKeyValueMap<V = any> {\n    [key: string]: V\n}\n\nexport type IMapEntry<K = any, V = any> = [K, V]\nexport type IMapEntries<K = any, V = any> = IMapEntry<K, V>[]\n\nexport type IMapDidChange<K = any, V = any> = { observableKind: \"map\"; debugObjectName: string } & (\n    | {\n          object: ObservableMap<K, V>\n          name: K // actual the key or index, but this is based on the ancient .observe proposal for consistency\n          type: \"update\"\n          newValue: V\n          oldValue: V\n      }\n    | {\n          object: ObservableMap<K, V>\n          name: K\n          type: \"add\"\n          newValue: V\n      }\n    | {\n          object: ObservableMap<K, V>\n          name: K\n          type: \"delete\"\n          oldValue: V\n      }\n)\n\nexport interface IMapWillChange<K = any, V = any> {\n    object: ObservableMap<K, V>\n    type: \"update\" | \"add\" | \"delete\"\n    name: K\n    newValue?: V\n}\n\nconst ObservableMapMarker = {}\n\nexport const ADD = \"add\"\nexport const DELETE = \"delete\"\n\nexport type IObservableMapInitialValues<K = any, V = any> =\n    | IMapEntries<K, V>\n    | IKeyValueMap<V>\n    | Map<K, V>\n\n// just extend Map? See also https://gist.github.com/nestharus/13b4d74f2ef4a2f4357dbd3fc23c1e54\n// But: https://github.com/mobxjs/mobx/issues/1556\nexport class ObservableMap<K = any, V = any>\n    implements Map<K, V>, IInterceptable<IMapWillChange<K, V>>, IListenable\n{\n    [$mobx] = ObservableMapMarker\n    data_: Map<K, ObservableValue<V>>\n    hasMap_: Map<K, ObservableValue<boolean>> // hasMap, not hashMap >-).\n    keysAtom_: IAtom\n    interceptors_\n    changeListeners_\n    dehancer: any\n\n    constructor(\n        initialData?: IObservableMapInitialValues<K, V>,\n        public enhancer_: IEnhancer<V> = deepEnhancer,\n        public name_ = __DEV__ ? \"ObservableMap@\" + getNextId() : \"ObservableMap\"\n    ) {\n        if (!isFunction(Map)) {\n            die(18)\n        }\n        this.keysAtom_ = createAtom(__DEV__ ? `${this.name_}.keys()` : \"ObservableMap.keys()\")\n        this.data_ = new Map()\n        this.hasMap_ = new Map()\n        allowStateChanges(true, () => {\n            this.merge(initialData)\n        })\n    }\n\n    private has_(key: K): boolean {\n        return this.data_.has(key)\n    }\n\n    has(key: K): boolean {\n        if (!globalState.trackingDerivation) {\n            return this.has_(key)\n        }\n\n        let entry = this.hasMap_.get(key)\n        if (!entry) {\n            const newEntry = (entry = new ObservableValue(\n                this.has_(key),\n                referenceEnhancer,\n                __DEV__ ? `${this.name_}.${stringifyKey(key)}?` : \"ObservableMap.key?\",\n                false\n            ))\n            this.hasMap_.set(key, newEntry)\n            onBecomeUnobserved(newEntry, () => this.hasMap_.delete(key))\n        }\n\n        return entry.get()\n    }\n\n    set(key: K, value: V) {\n        const hasKey = this.has_(key)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IMapWillChange<K, V>>(this, {\n                type: hasKey ? UPDATE : ADD,\n                object: this,\n                newValue: value,\n                name: key\n            })\n            if (!change) {\n                return this\n            }\n            value = change.newValue!\n        }\n        if (hasKey) {\n            this.updateValue_(key, value)\n        } else {\n            this.addValue_(key, value)\n        }\n        return this\n    }\n\n    delete(key: K): boolean {\n        checkIfStateModificationsAreAllowed(this.keysAtom_)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IMapWillChange<K, V>>(this, {\n                type: DELETE,\n                object: this,\n                name: key\n            })\n            if (!change) {\n                return false\n            }\n        }\n        if (this.has_(key)) {\n            const notifySpy = isSpyEnabled()\n            const notify = hasListeners(this)\n            const change: IMapDidChange<K, V> | null =\n                notify || notifySpy\n                    ? {\n                          observableKind: \"map\",\n                          debugObjectName: this.name_,\n                          type: DELETE,\n                          object: this,\n                          oldValue: (<any>this.data_.get(key)).value_,\n                          name: key\n                      }\n                    : null\n\n            if (__DEV__ && notifySpy) {\n                spyReportStart(change! as PureSpyEvent)\n            } // TODO fix type\n            transaction(() => {\n                this.keysAtom_.reportChanged()\n                this.hasMap_.get(key)?.setNewValue_(false)\n                const observable = this.data_.get(key)!\n                observable.setNewValue_(undefined as any)\n                this.data_.delete(key)\n            })\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n            return true\n        }\n        return false\n    }\n\n    private updateValue_(key: K, newValue: V | undefined) {\n        const observable = this.data_.get(key)!\n        newValue = (observable as any).prepareNewValue_(newValue) as V\n        if (newValue !== globalState.UNCHANGED) {\n            const notifySpy = isSpyEnabled()\n            const notify = hasListeners(this)\n            const change: IMapDidChange<K, V> | null =\n                notify || notifySpy\n                    ? {\n                          observableKind: \"map\",\n                          debugObjectName: this.name_,\n                          type: UPDATE,\n                          object: this,\n                          oldValue: (observable as any).value_,\n                          name: key,\n                          newValue\n                      }\n                    : null\n            if (__DEV__ && notifySpy) {\n                spyReportStart(change! as PureSpyEvent)\n            } // TODO fix type\n            observable.setNewValue_(newValue as V)\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n        }\n    }\n\n    private addValue_(key: K, newValue: V) {\n        checkIfStateModificationsAreAllowed(this.keysAtom_)\n        transaction(() => {\n            const observable = new ObservableValue(\n                newValue,\n                this.enhancer_,\n                __DEV__ ? `${this.name_}.${stringifyKey(key)}` : \"ObservableMap.key\",\n                false\n            )\n            this.data_.set(key, observable)\n            newValue = (observable as any).value_ // value might have been changed\n            this.hasMap_.get(key)?.setNewValue_(true)\n            this.keysAtom_.reportChanged()\n        })\n        const notifySpy = isSpyEnabled()\n        const notify = hasListeners(this)\n        const change: IMapDidChange<K, V> | null =\n            notify || notifySpy\n                ? {\n                      observableKind: \"map\",\n                      debugObjectName: this.name_,\n                      type: ADD,\n                      object: this,\n                      name: key,\n                      newValue\n                  }\n                : null\n        if (__DEV__ && notifySpy) {\n            spyReportStart(change! as PureSpyEvent)\n        } // TODO fix type\n        if (notify) {\n            notifyListeners(this, change)\n        }\n        if (__DEV__ && notifySpy) {\n            spyReportEnd()\n        }\n    }\n\n    get(key: K): V | undefined {\n        if (this.has(key)) {\n            return this.dehanceValue_(this.data_.get(key)!.get())\n        }\n        return this.dehanceValue_(undefined)\n    }\n\n    private dehanceValue_<X extends V | undefined>(value: X): X {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value)\n        }\n        return value\n    }\n\n    keys(): IterableIterator<K> {\n        this.keysAtom_.reportObserved()\n        return this.data_.keys()\n    }\n\n    values(): IterableIterator<V> {\n        const self = this\n        const keys = this.keys()\n        return makeIterable({\n            next() {\n                const { done, value } = keys.next()\n                return {\n                    done,\n                    value: done ? (undefined as any) : self.get(value)\n                }\n            }\n        })\n    }\n\n    entries(): IterableIterator<IMapEntry<K, V>> {\n        const self = this\n        const keys = this.keys()\n        return makeIterable({\n            next() {\n                const { done, value } = keys.next()\n                return {\n                    done,\n                    value: done ? (undefined as any) : ([value, self.get(value)!] as [K, V])\n                }\n            }\n        })\n    }\n\n    [Symbol.iterator]() {\n        return this.entries()\n    }\n\n    forEach(callback: (value: V, key: K, object: Map<K, V>) => void, thisArg?) {\n        for (const [key, value] of this) {\n            callback.call(thisArg, value, key, this)\n        }\n    }\n\n    /** Merge another object into this object, returns this. */\n    merge(other?: IObservableMapInitialValues<K, V>): ObservableMap<K, V> {\n        if (isObservableMap(other)) {\n            other = new Map(other)\n        }\n        transaction(() => {\n            if (isPlainObject(other)) {\n                getPlainObjectKeys(other).forEach((key: any) =>\n                    this.set(key as K, (other as IKeyValueMap)[key])\n                )\n            } else if (Array.isArray(other)) {\n                other.forEach(([key, value]) => this.set(key, value))\n            } else if (isES6Map(other)) {\n                if (other.constructor !== Map) {\n                    die(19, other)\n                }\n                other.forEach((value, key) => this.set(key, value))\n            } else if (other !== null && other !== undefined) {\n                die(20, other)\n            }\n        })\n        return this\n    }\n\n    clear() {\n        transaction(() => {\n            untracked(() => {\n                for (const key of this.keys()) {\n                    this.delete(key)\n                }\n            })\n        })\n    }\n\n    replace(values: IObservableMapInitialValues<K, V>): ObservableMap<K, V> {\n        // Implementation requirements:\n        // - respect ordering of replacement map\n        // - allow interceptors to run and potentially prevent individual operations\n        // - don't recreate observables that already exist in original map (so we don't destroy existing subscriptions)\n        // - don't _keysAtom.reportChanged if the keys of resulting map are indentical (order matters!)\n        // - note that result map may differ from replacement map due to the interceptors\n        transaction(() => {\n            // Convert to map so we can do quick key lookups\n            const replacementMap = convertToMap(values)\n            const orderedData = new Map()\n            // Used for optimization\n            let keysReportChangedCalled = false\n            // Delete keys that don't exist in replacement map\n            // if the key deletion is prevented by interceptor\n            // add entry at the beginning of the result map\n            for (const key of this.data_.keys()) {\n                // Concurrently iterating/deleting keys\n                // iterator should handle this correctly\n                if (!replacementMap.has(key)) {\n                    const deleted = this.delete(key)\n                    // Was the key removed?\n                    if (deleted) {\n                        // _keysAtom.reportChanged() was already called\n                        keysReportChangedCalled = true\n                    } else {\n                        // Delete prevented by interceptor\n                        const value = this.data_.get(key)\n                        orderedData.set(key, value)\n                    }\n                }\n            }\n            // Merge entries\n            for (const [key, value] of replacementMap.entries()) {\n                // We will want to know whether a new key is added\n                const keyExisted = this.data_.has(key)\n                // Add or update value\n                this.set(key, value)\n                // The addition could have been prevent by interceptor\n                if (this.data_.has(key)) {\n                    // The update could have been prevented by interceptor\n                    // and also we want to preserve existing values\n                    // so use value from _data map (instead of replacement map)\n                    const value = this.data_.get(key)\n                    orderedData.set(key, value)\n                    // Was a new key added?\n                    if (!keyExisted) {\n                        // _keysAtom.reportChanged() was already called\n                        keysReportChangedCalled = true\n                    }\n                }\n            }\n            // Check for possible key order change\n            if (!keysReportChangedCalled) {\n                if (this.data_.size !== orderedData.size) {\n                    // If size differs, keys are definitely modified\n                    this.keysAtom_.reportChanged()\n                } else {\n                    const iter1 = this.data_.keys()\n                    const iter2 = orderedData.keys()\n                    let next1 = iter1.next()\n                    let next2 = iter2.next()\n                    while (!next1.done) {\n                        if (next1.value !== next2.value) {\n                            this.keysAtom_.reportChanged()\n                            break\n                        }\n                        next1 = iter1.next()\n                        next2 = iter2.next()\n                    }\n                }\n            }\n            // Use correctly ordered map\n            this.data_ = orderedData\n        })\n        return this\n    }\n\n    get size(): number {\n        this.keysAtom_.reportObserved()\n        return this.data_.size\n    }\n\n    toString(): string {\n        return \"[object ObservableMap]\"\n    }\n\n    toJSON(): [K, V][] {\n        return Array.from(this)\n    }\n\n    get [Symbol.toStringTag]() {\n        return \"Map\"\n    }\n\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    observe_(listener: (changes: IMapDidChange<K, V>) => void, fireImmediately?: boolean): Lambda {\n        if (__DEV__ && fireImmediately === true) {\n            die(\"`observe` doesn't support fireImmediately=true in combination with maps.\")\n        }\n        return registerListener(this, listener)\n    }\n\n    intercept_(handler: IInterceptor<IMapWillChange<K, V>>): Lambda {\n        return registerInterceptor(this, handler)\n    }\n}\n\n// eslint-disable-next-line\nexport var isObservableMap = createInstanceofPredicate(\"ObservableMap\", ObservableMap) as (\n    thing: any\n) => thing is ObservableMap<any, any>\n\nfunction convertToMap(dataStructure: any): Map<any, any> {\n    if (isES6Map(dataStructure) || isObservableMap(dataStructure)) {\n        return dataStructure\n    } else if (Array.isArray(dataStructure)) {\n        return new Map(dataStructure)\n    } else if (isPlainObject(dataStructure)) {\n        const map = new Map()\n        for (const key in dataStructure) {\n            map.set(key, dataStructure[key])\n        }\n        return map\n    } else {\n        return die(21, dataStructure)\n    }\n}\n","import {\n    $mobx,\n    createAtom,\n    deepEnhancer,\n    getNextId,\n    IEnhancer,\n    isSpyEnabled,\n    hasListeners,\n    IListenable,\n    registerListener,\n    Lambda,\n    spyReportStart,\n    notifyListeners,\n    spyReportEnd,\n    createInstanceofPredicate,\n    hasInterceptors,\n    interceptChange,\n    IInterceptable,\n    IInterceptor,\n    registerInterceptor,\n    checkIfStateModificationsAreAllowed,\n    untracked,\n    makeIterable,\n    transaction,\n    isES6Set,\n    IAtom,\n    DELETE,\n    ADD,\n    die,\n    isFunction\n} from \"../internal\"\n\nconst ObservableSetMarker = {}\n\nexport type IObservableSetInitialValues<T> = Set<T> | readonly T[]\n\nexport type ISetDidChange<T = any> =\n    | {\n          object: ObservableSet<T>\n          observableKind: \"set\"\n          debugObjectName: string\n          type: \"add\"\n          newValue: T\n      }\n    | {\n          object: ObservableSet<T>\n          observableKind: \"set\"\n          debugObjectName: string\n          type: \"delete\"\n          oldValue: T\n      }\n\nexport type ISetWillChange<T = any> =\n    | {\n          type: \"delete\"\n          object: ObservableSet<T>\n          oldValue: T\n      }\n    | {\n          type: \"add\"\n          object: ObservableSet<T>\n          newValue: T\n      }\n\nexport class ObservableSet<T = any> implements Set<T>, IInterceptable<ISetWillChange>, IListenable {\n    [$mobx] = ObservableSetMarker\n    private data_: Set<any> = new Set()\n    private atom_: IAtom\n    changeListeners_\n    interceptors_\n    dehancer: any\n    enhancer_: (newV: any, oldV: any | undefined) => any\n\n    constructor(\n        initialData?: IObservableSetInitialValues<T>,\n        enhancer: IEnhancer<T> = deepEnhancer,\n        public name_ = __DEV__ ? \"ObservableSet@\" + getNextId() : \"ObservableSet\"\n    ) {\n        if (!isFunction(Set)) {\n            die(22)\n        }\n        this.atom_ = createAtom(this.name_)\n        this.enhancer_ = (newV, oldV) => enhancer(newV, oldV, name_)\n        if (initialData) {\n            this.replace(initialData)\n        }\n    }\n\n    private dehanceValue_<X extends T | undefined>(value: X): X {\n        if (this.dehancer !== undefined) {\n            return this.dehancer(value)\n        }\n        return value\n    }\n\n    clear() {\n        transaction(() => {\n            untracked(() => {\n                for (const value of this.data_.values()) {\n                    this.delete(value)\n                }\n            })\n        })\n    }\n\n    forEach(callbackFn: (value: T, value2: T, set: Set<T>) => void, thisArg?: any) {\n        for (const value of this) {\n            callbackFn.call(thisArg, value, value, this)\n        }\n    }\n\n    get size() {\n        this.atom_.reportObserved()\n        return this.data_.size\n    }\n\n    add(value: T) {\n        checkIfStateModificationsAreAllowed(this.atom_)\n        if (hasInterceptors(this)) {\n            const change = interceptChange<ISetWillChange<T>>(this, {\n                type: ADD,\n                object: this,\n                newValue: value\n            })\n            if (!change) {\n                return this\n            }\n            // ideally, value = change.value would be done here, so that values can be\n            // changed by interceptor. Same applies for other Set and Map api's.\n        }\n        if (!this.has(value)) {\n            transaction(() => {\n                this.data_.add(this.enhancer_(value, undefined))\n                this.atom_.reportChanged()\n            })\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const notify = hasListeners(this)\n            const change =\n                notify || notifySpy\n                    ? <ISetDidChange<T>>{\n                          observableKind: \"set\",\n                          debugObjectName: this.name_,\n                          type: ADD,\n                          object: this,\n                          newValue: value\n                      }\n                    : null\n            if (notifySpy && __DEV__) {\n                spyReportStart(change!)\n            }\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (notifySpy && __DEV__) {\n                spyReportEnd()\n            }\n        }\n\n        return this\n    }\n\n    delete(value: T) {\n        if (hasInterceptors(this)) {\n            const change = interceptChange<ISetWillChange<T>>(this, {\n                type: DELETE,\n                object: this,\n                oldValue: value\n            })\n            if (!change) {\n                return false\n            }\n        }\n        if (this.has(value)) {\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const notify = hasListeners(this)\n            const change =\n                notify || notifySpy\n                    ? <ISetDidChange<T>>{\n                          observableKind: \"set\",\n                          debugObjectName: this.name_,\n                          type: DELETE,\n                          object: this,\n                          oldValue: value\n                      }\n                    : null\n\n            if (notifySpy && __DEV__) {\n                spyReportStart(change!)\n            }\n            transaction(() => {\n                this.atom_.reportChanged()\n                this.data_.delete(value)\n            })\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (notifySpy && __DEV__) {\n                spyReportEnd()\n            }\n            return true\n        }\n        return false\n    }\n\n    has(value: T) {\n        this.atom_.reportObserved()\n        return this.data_.has(this.dehanceValue_(value))\n    }\n\n    entries() {\n        let nextIndex = 0\n        const keys = Array.from(this.keys())\n        const values = Array.from(this.values())\n        return makeIterable<[T, T]>({\n            next() {\n                const index = nextIndex\n                nextIndex += 1\n                return index < values.length\n                    ? { value: [keys[index], values[index]], done: false }\n                    : { done: true }\n            }\n        } as any)\n    }\n\n    keys(): IterableIterator<T> {\n        return this.values()\n    }\n\n    values(): IterableIterator<T> {\n        this.atom_.reportObserved()\n        const self = this\n        let nextIndex = 0\n        const observableValues = Array.from(this.data_.values())\n        return makeIterable<T>({\n            next() {\n                return nextIndex < observableValues.length\n                    ? { value: self.dehanceValue_(observableValues[nextIndex++]), done: false }\n                    : { done: true }\n            }\n        } as any)\n    }\n\n    replace(other: ObservableSet<T> | IObservableSetInitialValues<T>): ObservableSet<T> {\n        if (isObservableSet(other)) {\n            other = new Set(other)\n        }\n\n        transaction(() => {\n            if (Array.isArray(other)) {\n                this.clear()\n                other.forEach(value => this.add(value))\n            } else if (isES6Set(other)) {\n                this.clear()\n                other.forEach(value => this.add(value))\n            } else if (other !== null && other !== undefined) {\n                die(\"Cannot initialize set from \" + other)\n            }\n        })\n\n        return this\n    }\n    observe_(listener: (changes: ISetDidChange<T>) => void, fireImmediately?: boolean): Lambda {\n        // ... 'fireImmediately' could also be true?\n        if (__DEV__ && fireImmediately === true) {\n            die(\"`observe` doesn't support fireImmediately=true in combination with sets.\")\n        }\n        return registerListener(this, listener)\n    }\n\n    intercept_(handler: IInterceptor<ISetWillChange<T>>): Lambda {\n        return registerInterceptor(this, handler)\n    }\n\n    toJSON(): T[] {\n        return Array.from(this)\n    }\n\n    toString(): string {\n        return \"[object ObservableSet]\"\n    }\n\n    [Symbol.iterator]() {\n        return this.values()\n    }\n\n    get [Symbol.toStringTag]() {\n        return \"Set\"\n    }\n}\n\n// eslint-disable-next-line\nexport var isObservableSet = createInstanceofPredicate(\"ObservableSet\", ObservableSet) as (\n    thing: any\n) => thing is ObservableSet<any>\n","import {\n    CreateObservableOptions,\n    getAnnotationFromOptions,\n    propagateChanged,\n    isAnnotation,\n    $mobx,\n    Atom,\n    Annotation,\n    ComputedValue,\n    IAtom,\n    IComputedValueOptions,\n    IEnhancer,\n    IInterceptable,\n    IListenable,\n    Lambda,\n    ObservableValue,\n    addHiddenProp,\n    createInstanceofPredicate,\n    endBatch,\n    getNextId,\n    hasInterceptors,\n    hasListeners,\n    interceptChange,\n    isObject,\n    isPlainObject,\n    isSpyEnabled,\n    notifyListeners,\n    referenceEnhancer,\n    registerInterceptor,\n    registerListener,\n    spyReportEnd,\n    spyReportStart,\n    startBatch,\n    stringifyKey,\n    globalState,\n    ADD,\n    UPDATE,\n    die,\n    hasProp,\n    getDescriptor,\n    storedAnnotationsSymbol,\n    ownKeys,\n    isOverride,\n    defineProperty,\n    autoAnnotation,\n    getAdministration,\n    getDebugName,\n    objectPrototype,\n    MakeResult\n} from \"../internal\"\n\nconst descriptorCache = Object.create(null)\n\nexport type IObjectDidChange<T = any> = {\n    observableKind: \"object\"\n    name: PropertyKey\n    object: T\n    debugObjectName: string\n} & (\n    | {\n          type: \"add\"\n          newValue: any\n      }\n    | {\n          type: \"update\"\n          oldValue: any\n          newValue: any\n      }\n    | {\n          type: \"remove\"\n          oldValue: any\n      }\n)\n\nexport type IObjectWillChange<T = any> =\n    | {\n          object: T\n          type: \"update\" | \"add\"\n          name: PropertyKey\n          newValue: any\n      }\n    | {\n          object: T\n          type: \"remove\"\n          name: PropertyKey\n      }\n\nconst REMOVE = \"remove\"\n\nexport class ObservableObjectAdministration\n    implements IInterceptable<IObjectWillChange>, IListenable\n{\n    keysAtom_: IAtom\n    changeListeners_\n    interceptors_\n    proxy_: any\n    isPlainObject_: boolean\n    appliedAnnotations_?: object\n    private pendingKeys_: undefined | Map<PropertyKey, ObservableValue<boolean>>\n\n    constructor(\n        public target_: any,\n        public values_ = new Map<PropertyKey, ObservableValue<any> | ComputedValue<any>>(),\n        public name_: string,\n        // Used anytime annotation is not explicitely provided\n        public defaultAnnotation_: Annotation = autoAnnotation\n    ) {\n        this.keysAtom_ = new Atom(__DEV__ ? `${this.name_}.keys` : \"ObservableObject.keys\")\n        // Optimization: we use this frequently\n        this.isPlainObject_ = isPlainObject(this.target_)\n        if (__DEV__ && !isAnnotation(this.defaultAnnotation_)) {\n            die(`defaultAnnotation must be valid annotation`)\n        }\n        if (__DEV__) {\n            // Prepare structure for tracking which fields were already annotated\n            this.appliedAnnotations_ = {}\n        }\n    }\n\n    getObservablePropValue_(key: PropertyKey): any {\n        return this.values_.get(key)!.get()\n    }\n\n    setObservablePropValue_(key: PropertyKey, newValue): boolean | null {\n        const observable = this.values_.get(key)\n        if (observable instanceof ComputedValue) {\n            observable.set(newValue)\n            return true\n        }\n\n        // intercept\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IObjectWillChange>(this, {\n                type: UPDATE,\n                object: this.proxy_ || this.target_,\n                name: key,\n                newValue\n            })\n            if (!change) {\n                return null\n            }\n            newValue = (change as any).newValue\n        }\n        newValue = (observable as any).prepareNewValue_(newValue)\n\n        // notify spy & observers\n        if (newValue !== globalState.UNCHANGED) {\n            const notify = hasListeners(this)\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const change: IObjectDidChange | null =\n                notify || notifySpy\n                    ? {\n                          type: UPDATE,\n                          observableKind: \"object\",\n                          debugObjectName: this.name_,\n                          object: this.proxy_ || this.target_,\n                          oldValue: (observable as any).value_,\n                          name: key,\n                          newValue\n                      }\n                    : null\n\n            if (__DEV__ && notifySpy) {\n                spyReportStart(change!)\n            }\n            ;(observable as ObservableValue<any>).setNewValue_(newValue)\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n        }\n        return true\n    }\n\n    get_(key: PropertyKey): any {\n        if (globalState.trackingDerivation && !hasProp(this.target_, key)) {\n            // Key doesn't exist yet, subscribe for it in case it's added later\n            this.has_(key)\n        }\n        return this.target_[key]\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {any} value\n     * @param {Annotation|boolean} annotation true - use default annotation, false - copy as is\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    set_(key: PropertyKey, value: any, proxyTrap: boolean = false): boolean | null {\n        // Don't use .has(key) - we care about own\n        if (hasProp(this.target_, key)) {\n            // Existing prop\n            if (this.values_.has(key)) {\n                // Observable (can be intercepted)\n                return this.setObservablePropValue_(key, value)\n            } else if (proxyTrap) {\n                // Non-observable - proxy\n                return Reflect.set(this.target_, key, value)\n            } else {\n                // Non-observable\n                this.target_[key] = value\n                return true\n            }\n        } else {\n            // New prop\n            return this.extend_(\n                key,\n                { value, enumerable: true, writable: true, configurable: true },\n                this.defaultAnnotation_,\n                proxyTrap\n            )\n        }\n    }\n\n    // Trap for \"in\"\n    has_(key: PropertyKey): boolean {\n        if (!globalState.trackingDerivation) {\n            // Skip key subscription outside derivation\n            return key in this.target_\n        }\n        this.pendingKeys_ ||= new Map()\n        let entry = this.pendingKeys_.get(key)\n        if (!entry) {\n            entry = new ObservableValue(\n                key in this.target_,\n                referenceEnhancer,\n                __DEV__ ? `${this.name_}.${stringifyKey(key)}?` : \"ObservableObject.key?\",\n                false\n            )\n            this.pendingKeys_.set(key, entry)\n        }\n        return entry.get()\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {Annotation|boolean} annotation true - use default annotation, false - ignore prop\n     */\n    make_(key: PropertyKey, annotation: Annotation | boolean): void {\n        if (annotation === true) {\n            annotation = this.defaultAnnotation_\n        }\n        if (annotation === false) {\n            return\n        }\n        assertAnnotable(this, annotation, key)\n        if (!(key in this.target_)) {\n            // Throw on missing key, except for decorators:\n            // Decorator annotations are collected from whole prototype chain.\n            // When called from super() some props may not exist yet.\n            // However we don't have to worry about missing prop,\n            // because the decorator must have been applied to something.\n            if (this.target_[storedAnnotationsSymbol]?.[key]) {\n                return // will be annotated by subclass constructor\n            } else {\n                die(1, annotation.annotationType_, `${this.name_}.${key.toString()}`)\n            }\n        }\n        let source = this.target_\n        while (source && source !== objectPrototype) {\n            const descriptor = getDescriptor(source, key)\n            if (descriptor) {\n                const outcome = annotation.make_(this, key, descriptor, source)\n                if (outcome === MakeResult.Cancel) {\n                    return\n                }\n                if (outcome === MakeResult.Break) {\n                    break\n                }\n            }\n            source = Object.getPrototypeOf(source)\n        }\n        recordAnnotationApplied(this, annotation, key)\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {PropertyDescriptor} descriptor\n     * @param {Annotation|boolean} annotation true - use default annotation, false - copy as is\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    extend_(\n        key: PropertyKey,\n        descriptor: PropertyDescriptor,\n        annotation: Annotation | boolean,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        if (annotation === true) {\n            annotation = this.defaultAnnotation_\n        }\n        if (annotation === false) {\n            return this.defineProperty_(key, descriptor, proxyTrap)\n        }\n        assertAnnotable(this, annotation, key)\n        const outcome = annotation.extend_(this, key, descriptor, proxyTrap)\n        if (outcome) {\n            recordAnnotationApplied(this, annotation, key)\n        }\n        return outcome\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {PropertyDescriptor} descriptor\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    defineProperty_(\n        key: PropertyKey,\n        descriptor: PropertyDescriptor,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        try {\n            startBatch()\n\n            // Delete\n            const deleteOutcome = this.delete_(key)\n            if (!deleteOutcome) {\n                // Failure or intercepted\n                return deleteOutcome\n            }\n\n            // ADD interceptor\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IObjectWillChange>(this, {\n                    object: this.proxy_ || this.target_,\n                    name: key,\n                    type: ADD,\n                    newValue: descriptor.value\n                })\n                if (!change) {\n                    return null\n                }\n                const { newValue } = change as any\n                if (descriptor.value !== newValue) {\n                    descriptor = {\n                        ...descriptor,\n                        value: newValue\n                    }\n                }\n            }\n\n            // Define\n            if (proxyTrap) {\n                if (!Reflect.defineProperty(this.target_, key, descriptor)) {\n                    return false\n                }\n            } else {\n                defineProperty(this.target_, key, descriptor)\n            }\n\n            // Notify\n            this.notifyPropertyAddition_(key, descriptor.value)\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    // If original descriptor becomes relevant, move this to annotation directly\n    defineObservableProperty_(\n        key: PropertyKey,\n        value: any,\n        enhancer: IEnhancer<any>,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        try {\n            startBatch()\n\n            // Delete\n            const deleteOutcome = this.delete_(key)\n            if (!deleteOutcome) {\n                // Failure or intercepted\n                return deleteOutcome\n            }\n\n            // ADD interceptor\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IObjectWillChange>(this, {\n                    object: this.proxy_ || this.target_,\n                    name: key,\n                    type: ADD,\n                    newValue: value\n                })\n                if (!change) {\n                    return null\n                }\n                value = (change as any).newValue\n            }\n\n            const cachedDescriptor = getCachedObservablePropDescriptor(key)\n            const descriptor = {\n                configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,\n                enumerable: true,\n                get: cachedDescriptor.get,\n                set: cachedDescriptor.set\n            }\n\n            // Define\n            if (proxyTrap) {\n                if (!Reflect.defineProperty(this.target_, key, descriptor)) {\n                    return false\n                }\n            } else {\n                defineProperty(this.target_, key, descriptor)\n            }\n\n            const observable = new ObservableValue(\n                value,\n                enhancer,\n                __DEV__ ? `${this.name_}.${key.toString()}` : \"ObservableObject.key\",\n                false\n            )\n\n            this.values_.set(key, observable)\n\n            // Notify (value possibly changed by ObservableValue)\n            this.notifyPropertyAddition_(key, observable.value_)\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    // If original descriptor becomes relevant, move this to annotation directly\n    defineComputedProperty_(\n        key: PropertyKey,\n        options: IComputedValueOptions<any>,\n        proxyTrap: boolean = false\n    ): boolean | null {\n        try {\n            startBatch()\n\n            // Delete\n            const deleteOutcome = this.delete_(key)\n            if (!deleteOutcome) {\n                // Failure or intercepted\n                return deleteOutcome\n            }\n\n            // ADD interceptor\n            if (hasInterceptors(this)) {\n                const change = interceptChange<IObjectWillChange>(this, {\n                    object: this.proxy_ || this.target_,\n                    name: key,\n                    type: ADD,\n                    newValue: undefined\n                })\n                if (!change) {\n                    return null\n                }\n            }\n            options.name ||= __DEV__ ? `${this.name_}.${key.toString()}` : \"ObservableObject.key\"\n            options.context = this.proxy_ || this.target_\n            const cachedDescriptor = getCachedObservablePropDescriptor(key)\n            const descriptor = {\n                configurable: globalState.safeDescriptors ? this.isPlainObject_ : true,\n                enumerable: false,\n                get: cachedDescriptor.get,\n                set: cachedDescriptor.set\n            }\n\n            // Define\n            if (proxyTrap) {\n                if (!Reflect.defineProperty(this.target_, key, descriptor)) {\n                    return false\n                }\n            } else {\n                defineProperty(this.target_, key, descriptor)\n            }\n\n            this.values_.set(key, new ComputedValue(options))\n\n            // Notify\n            this.notifyPropertyAddition_(key, undefined)\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    /**\n     * @param {PropertyKey} key\n     * @param {PropertyDescriptor} descriptor\n     * @param {boolean} proxyTrap whether it's called from proxy trap\n     * @returns {boolean|null} true on success, false on failure (proxyTrap + non-configurable), null when cancelled by interceptor\n     */\n    delete_(key: PropertyKey, proxyTrap: boolean = false): boolean | null {\n        // No such prop\n        if (!hasProp(this.target_, key)) {\n            return true\n        }\n\n        // Intercept\n        if (hasInterceptors(this)) {\n            const change = interceptChange<IObjectWillChange>(this, {\n                object: this.proxy_ || this.target_,\n                name: key,\n                type: REMOVE\n            })\n            // Cancelled\n            if (!change) {\n                return null\n            }\n        }\n\n        // Delete\n        try {\n            startBatch()\n            const notify = hasListeners(this)\n            const notifySpy = __DEV__ && isSpyEnabled()\n            const observable = this.values_.get(key)\n            // Value needed for spies/listeners\n            let value = undefined\n            // Optimization: don't pull the value unless we will need it\n            if (!observable && (notify || notifySpy)) {\n                value = getDescriptor(this.target_, key)?.value\n            }\n            // delete prop (do first, may fail)\n            if (proxyTrap) {\n                if (!Reflect.deleteProperty(this.target_, key)) {\n                    return false\n                }\n            } else {\n                delete this.target_[key]\n            }\n            // Allow re-annotating this field\n            if (__DEV__) {\n                delete this.appliedAnnotations_![key]\n            }\n            // Clear observable\n            if (observable) {\n                this.values_.delete(key)\n                // for computed, value is undefined\n                if (observable instanceof ObservableValue) {\n                    value = observable.value_\n                }\n                // Notify: autorun(() => obj[key]), see #1796\n                propagateChanged(observable)\n            }\n            // Notify \"keys/entries/values\" observers\n            this.keysAtom_.reportChanged()\n\n            // Notify \"has\" observers\n            // \"in\" as it may still exist in proto\n            this.pendingKeys_?.get(key)?.set(key in this.target_)\n\n            // Notify spies/listeners\n            if (notify || notifySpy) {\n                const change: IObjectDidChange = {\n                    type: REMOVE,\n                    observableKind: \"object\",\n                    object: this.proxy_ || this.target_,\n                    debugObjectName: this.name_,\n                    oldValue: value,\n                    name: key\n                }\n                if (__DEV__ && notifySpy) {\n                    spyReportStart(change!)\n                }\n                if (notify) {\n                    notifyListeners(this, change)\n                }\n                if (__DEV__ && notifySpy) {\n                    spyReportEnd()\n                }\n            }\n        } finally {\n            endBatch()\n        }\n        return true\n    }\n\n    /**\n     * Observes this object. Triggers for the events 'add', 'update' and 'delete'.\n     * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/observe\n     * for callback details\n     */\n    observe_(callback: (changes: IObjectDidChange) => void, fireImmediately?: boolean): Lambda {\n        if (__DEV__ && fireImmediately === true) {\n            die(\"`observe` doesn't support the fire immediately property for observable objects.\")\n        }\n        return registerListener(this, callback)\n    }\n\n    intercept_(handler): Lambda {\n        return registerInterceptor(this, handler)\n    }\n\n    notifyPropertyAddition_(key: PropertyKey, value: any) {\n        const notify = hasListeners(this)\n        const notifySpy = __DEV__ && isSpyEnabled()\n        if (notify || notifySpy) {\n            const change: IObjectDidChange | null =\n                notify || notifySpy\n                    ? ({\n                          type: ADD,\n                          observableKind: \"object\",\n                          debugObjectName: this.name_,\n                          object: this.proxy_ || this.target_,\n                          name: key,\n                          newValue: value\n                      } as const)\n                    : null\n\n            if (__DEV__ && notifySpy) {\n                spyReportStart(change!)\n            }\n            if (notify) {\n                notifyListeners(this, change)\n            }\n            if (__DEV__ && notifySpy) {\n                spyReportEnd()\n            }\n        }\n\n        this.pendingKeys_?.get(key)?.set(true)\n\n        // Notify \"keys/entries/values\" observers\n        this.keysAtom_.reportChanged()\n    }\n\n    ownKeys_(): ArrayLike<string | symbol> {\n        this.keysAtom_.reportObserved()\n        return ownKeys(this.target_)\n    }\n\n    keys_(): PropertyKey[] {\n        // Returns enumerable && own, but unfortunately keysAtom will report on ANY key change.\n        // There is no way to distinguish between Object.keys(object) and Reflect.ownKeys(object) - both are handled by ownKeys trap.\n        // We can either over-report in Object.keys(object) or under-report in Reflect.ownKeys(object)\n        // We choose to over-report in Object.keys(object), because:\n        // - typically it's used with simple data objects\n        // - when symbolic/non-enumerable keys are relevant Reflect.ownKeys works as expected\n        this.keysAtom_.reportObserved()\n        return Object.keys(this.target_)\n    }\n}\n\nexport interface IIsObservableObject {\n    $mobx: ObservableObjectAdministration\n}\n\nexport function asObservableObject(\n    target: any,\n    options?: CreateObservableOptions\n): IIsObservableObject {\n    if (__DEV__ && options && isObservableObject(target)) {\n        die(`Options can't be provided for already observable objects.`)\n    }\n\n    if (hasProp(target, $mobx)) {\n        if (__DEV__ && !(getAdministration(target) instanceof ObservableObjectAdministration)) {\n            die(\n                `Cannot convert '${getDebugName(target)}' into observable object:` +\n                    `\\nThe target is already observable of different type.` +\n                    `\\nExtending builtins is not supported.`\n            )\n        }\n        return target\n    }\n\n    if (__DEV__ && !Object.isExtensible(target)) {\n        die(\"Cannot make the designated object observable; it is not extensible\")\n    }\n\n    const name =\n        options?.name ??\n        (__DEV__\n            ? `${\n                  isPlainObject(target) ? \"ObservableObject\" : target.constructor.name\n              }@${getNextId()}`\n            : \"ObservableObject\")\n\n    const adm = new ObservableObjectAdministration(\n        target,\n        new Map(),\n        String(name),\n        getAnnotationFromOptions(options)\n    )\n\n    addHiddenProp(target, $mobx, adm)\n\n    return target\n}\n\nconst isObservableObjectAdministration = createInstanceofPredicate(\n    \"ObservableObjectAdministration\",\n    ObservableObjectAdministration\n)\n\nfunction getCachedObservablePropDescriptor(key) {\n    return (\n        descriptorCache[key] ||\n        (descriptorCache[key] = {\n            get() {\n                return this[$mobx].getObservablePropValue_(key)\n            },\n            set(value) {\n                return this[$mobx].setObservablePropValue_(key, value)\n            }\n        })\n    )\n}\n\nexport function isObservableObject(thing: any): boolean {\n    if (isObject(thing)) {\n        return isObservableObjectAdministration((thing as any)[$mobx])\n    }\n    return false\n}\n\nexport function recordAnnotationApplied(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey\n) {\n    if (__DEV__) {\n        adm.appliedAnnotations_![key] = annotation\n    }\n    // Remove applied decorator annotation so we don't try to apply it again in subclass constructor\n    delete adm.target_[storedAnnotationsSymbol]?.[key]\n}\n\nfunction assertAnnotable(\n    adm: ObservableObjectAdministration,\n    annotation: Annotation,\n    key: PropertyKey\n) {\n    // Valid annotation\n    if (__DEV__ && !isAnnotation(annotation)) {\n        die(`Cannot annotate '${adm.name_}.${key.toString()}': Invalid annotation.`)\n    }\n\n    /*\n    // Configurable, not sealed, not frozen\n    // Possibly not needed, just a little better error then the one thrown by engine.\n    // Cases where this would be useful the most (subclass field initializer) are not interceptable by this.\n    if (__DEV__) {\n        const configurable = getDescriptor(adm.target_, key)?.configurable\n        const frozen = Object.isFrozen(adm.target_)\n        const sealed = Object.isSealed(adm.target_)\n        if (!configurable || frozen || sealed) {\n            const fieldName = `${adm.name_}.${key.toString()}`\n            const requestedAnnotationType = annotation.annotationType_\n            let error = `Cannot apply '${requestedAnnotationType}' to '${fieldName}':`\n            if (frozen) {\n                error += `\\nObject is frozen.`\n            }\n            if (sealed) {\n                error += `\\nObject is sealed.`\n            }\n            if (!configurable) {\n                error += `\\nproperty is not configurable.`\n                // Mention only if caused by us to avoid confusion\n                if (hasProp(adm.appliedAnnotations!, key)) {\n                    error += `\\nTo prevent accidental re-definition of a field by a subclass, `\n                    error += `all annotated fields of non-plain objects (classes) are not configurable.`\n                }\n            }\n            die(error)\n        }\n    }\n    */\n\n    // Not annotated\n    if (__DEV__ && !isOverride(annotation) && hasProp(adm.appliedAnnotations_!, key)) {\n        const fieldName = `${adm.name_}.${key.toString()}`\n        const currentAnnotationType = adm.appliedAnnotations_![key].annotationType_\n        const requestedAnnotationType = annotation.annotationType_\n        die(\n            `Cannot apply '${requestedAnnotationType}' to '${fieldName}':` +\n                `\\nThe field is already annotated with '${currentAnnotationType}'.` +\n                `\\nRe-annotating fields is not allowed.` +\n                `\\nUse 'override' annotation for methods overriden by subclass.`\n        )\n    }\n}\n","import {\n    getNextId,\n    addHiddenFinalProp,\n    allowStateChangesStart,\n    allowStateChangesEnd,\n    makeIterable,\n    addHiddenProp,\n    ObservableArrayAdministration,\n    $mobx,\n    arrayExtensions,\n    IEnhancer,\n    isObservableArray,\n    IObservableArray,\n    defineProperty\n} from \"../internal\"\n\n/**\n * This array buffer contains two lists of properties, so that all arrays\n * can recycle their property definitions, which significantly improves performance of creating\n * properties on the fly.\n */\nlet OBSERVABLE_ARRAY_BUFFER_SIZE = 0\n\n// Typescript workaround to make sure ObservableArray extends Array\nclass StubArray {}\nfunction inherit(ctor, proto) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(ctor.prototype, proto)\n    } else if (ctor.prototype.__proto__ !== undefined) {\n        ctor.prototype.__proto__ = proto\n    } else {\n        ctor.prototype = proto\n    }\n}\ninherit(StubArray, Array.prototype)\n\n// Weex proto freeze protection was here,\n// but it is unclear why the hack is need as MobX never changed the prototype\n// anyway, so removed it in V6\n\nclass LegacyObservableArray<T> extends StubArray {\n    constructor(\n        initialValues: T[] | undefined,\n        enhancer: IEnhancer<T>,\n        name = __DEV__ ? \"ObservableArray@\" + getNextId() : \"ObservableArray\",\n        owned = false\n    ) {\n        super()\n\n        const adm = new ObservableArrayAdministration(name, enhancer, owned, true)\n        adm.proxy_ = this as any\n        addHiddenFinalProp(this, $mobx, adm)\n\n        if (initialValues && initialValues.length) {\n            const prev = allowStateChangesStart(true)\n            // @ts-ignore\n            this.spliceWithArray(0, 0, initialValues)\n            allowStateChangesEnd(prev)\n        }\n    }\n\n    concat(...arrays: T[][]): T[] {\n        ;(this[$mobx] as ObservableArrayAdministration).atom_.reportObserved()\n        return Array.prototype.concat.apply(\n            (this as any).slice(),\n            //@ts-ignore\n            arrays.map(a => (isObservableArray(a) ? a.slice() : a))\n        )\n    }\n\n    get length(): number {\n        return (this[$mobx] as ObservableArrayAdministration).getArrayLength_()\n    }\n\n    set length(newLength: number) {\n        ;(this[$mobx] as ObservableArrayAdministration).setArrayLength_(newLength)\n    }\n\n    get [Symbol.toStringTag]() {\n        return \"Array\"\n    }\n\n    [Symbol.iterator]() {\n        const self = this\n        let nextIndex = 0\n        return makeIterable({\n            next() {\n                return nextIndex < self.length\n                    ? { value: self[nextIndex++], done: false }\n                    : { done: true, value: undefined }\n            }\n        })\n    }\n}\n\nObject.entries(arrayExtensions).forEach(([prop, fn]) => {\n    if (prop !== \"concat\") {\n        addHiddenProp(LegacyObservableArray.prototype, prop, fn)\n    }\n})\n\nfunction createArrayEntryDescriptor(index: number) {\n    return {\n        enumerable: false,\n        configurable: true,\n        get: function () {\n            return this[$mobx].get_(index)\n        },\n        set: function (value) {\n            this[$mobx].set_(index, value)\n        }\n    }\n}\n\nfunction createArrayBufferItem(index: number) {\n    defineProperty(LegacyObservableArray.prototype, \"\" + index, createArrayEntryDescriptor(index))\n}\n\nexport function reserveArrayBuffer(max: number) {\n    if (max > OBSERVABLE_ARRAY_BUFFER_SIZE) {\n        for (let index = OBSERVABLE_ARRAY_BUFFER_SIZE; index < max + 100; index++) {\n            createArrayBufferItem(index)\n        }\n        OBSERVABLE_ARRAY_BUFFER_SIZE = max\n    }\n}\n\nreserveArrayBuffer(1000)\n\nexport function createLegacyArray<T>(\n    initialValues: T[] | undefined,\n    enhancer: IEnhancer<T>,\n    name?: string\n): IObservableArray<T> {\n    return new LegacyObservableArray(initialValues, enhancer, name) as any\n}\n","import { isAction } from \"../api/action\"\nimport {\n    $mobx,\n    IDepTreeNode,\n    isAtom,\n    isComputedValue,\n    isObservableArray,\n    isObservableMap,\n    isObservableObject,\n    isReaction,\n    isObservableSet,\n    die,\n    isFunction\n} from \"../internal\"\n\nexport function getAtom(thing: any, property?: PropertyKey): IDepTreeNode {\n    if (typeof thing === \"object\" && thing !== null) {\n        if (isObservableArray(thing)) {\n            if (property !== undefined) {\n                die(23)\n            }\n            return (thing as any)[$mobx].atom_\n        }\n        if (isObservableSet(thing)) {\n            return (thing as any)[$mobx]\n        }\n        if (isObservableMap(thing)) {\n            if (property === undefined) {\n                return thing.keysAtom_\n            }\n            const observable = thing.data_.get(property) || thing.hasMap_.get(property)\n            if (!observable) {\n                die(25, property, getDebugName(thing))\n            }\n            return observable\n        }\n        if (property && !thing[$mobx]) {\n            thing[property]\n        } // See #1072\n        if (isObservableObject(thing)) {\n            if (!property) {\n                return die(26)\n            }\n            const observable = (thing as any)[$mobx].values_.get(property)\n            if (!observable) {\n                die(27, property, getDebugName(thing))\n            }\n            return observable\n        }\n        if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {\n            return thing\n        }\n    } else if (isFunction(thing)) {\n        if (isReaction(thing[$mobx])) {\n            // disposer function\n            return thing[$mobx]\n        }\n    }\n    die(28)\n}\n\nexport function getAdministration(thing: any, property?: string) {\n    if (!thing) {\n        die(29)\n    }\n    if (property !== undefined) {\n        return getAdministration(getAtom(thing, property))\n    }\n    if (isAtom(thing) || isComputedValue(thing) || isReaction(thing)) {\n        return thing\n    }\n    if (isObservableMap(thing) || isObservableSet(thing)) {\n        return thing\n    }\n    if (thing[$mobx]) {\n        return thing[$mobx]\n    }\n    die(24, thing)\n}\n\nexport function getDebugName(thing: any, property?: string): string {\n    let named\n    if (property !== undefined) {\n        named = getAtom(thing, property)\n    } else if (isAction(thing)) {\n        return thing.name\n    } else if (isObservableObject(thing) || isObservableMap(thing) || isObservableSet(thing)) {\n        named = getAdministration(thing)\n    } else {\n        // valid for arrays as well\n        named = getAtom(thing)\n    }\n    return named.name_\n}\n","import {\n    isES6Map,\n    isObservableArray,\n    isObservableMap,\n    isES6Set,\n    isObservableSet,\n    hasProp,\n    isFunction,\n    objectPrototype\n} from \"../internal\"\n\ndeclare const Symbol\nconst toString = objectPrototype.toString\n\nexport function deepEqual(a: any, b: any, depth: number = -1): boolean {\n    return eq(a, b, depth)\n}\n\n// Copied from https://github.com/jashkenas/underscore/blob/5c237a7c682fb68fd5378203f0bf22dce1624854/underscore.js#L1186-L1289\n// Internal recursive comparison function for `isEqual`.\nfunction eq(a: any, b: any, depth: number, aStack?: any[], bStack?: any[]) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) {\n        return a !== 0 || 1 / a === 1 / b\n    }\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null) {\n        return false\n    }\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a) {\n        return b !== b\n    }\n    // Exhaust primitive checks\n    const type = typeof a\n    if (type !== \"function\" && type !== \"object\" && typeof b != \"object\") {\n        return false\n    }\n\n    // Compare `[[Class]]` names.\n    const className = toString.call(a)\n    if (className !== toString.call(b)) {\n        return false\n    }\n    switch (className) {\n        // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n        case \"[object RegExp]\":\n        // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n        case \"[object String]\":\n            // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n            // equivalent to `new String(\"5\")`.\n            return \"\" + a === \"\" + b\n        case \"[object Number]\":\n            // `NaN`s are equivalent, but non-reflexive.\n            // Object(NaN) is equivalent to NaN.\n            if (+a !== +a) {\n                return +b !== +b\n            }\n            // An `egal` comparison is performed for other numeric values.\n            return +a === 0 ? 1 / +a === 1 / b : +a === +b\n        case \"[object Date]\":\n        case \"[object Boolean]\":\n            // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n            // millisecond representations. Note that invalid dates with millisecond representations\n            // of `NaN` are not equivalent.\n            return +a === +b\n        case \"[object Symbol]\":\n            return (\n                typeof Symbol !== \"undefined\" && Symbol.valueOf.call(a) === Symbol.valueOf.call(b)\n            )\n        case \"[object Map]\":\n        case \"[object Set]\":\n            // Maps and Sets are unwrapped to arrays of entry-pairs, adding an incidental level.\n            // Hide this extra level by increasing the depth.\n            if (depth >= 0) {\n                depth++\n            }\n            break\n    }\n    // Unwrap any wrapped objects.\n    a = unwrap(a)\n    b = unwrap(b)\n\n    const areArrays = className === \"[object Array]\"\n    if (!areArrays) {\n        if (typeof a != \"object\" || typeof b != \"object\") {\n            return false\n        }\n\n        // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n        // from different frames are.\n        const aCtor = a.constructor,\n            bCtor = b.constructor\n        if (\n            aCtor !== bCtor &&\n            !(\n                isFunction(aCtor) &&\n                aCtor instanceof aCtor &&\n                isFunction(bCtor) &&\n                bCtor instanceof bCtor\n            ) &&\n            \"constructor\" in a &&\n            \"constructor\" in b\n        ) {\n            return false\n        }\n    }\n\n    if (depth === 0) {\n        return false\n    } else if (depth < 0) {\n        depth = -1\n    }\n\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || []\n    bStack = bStack || []\n    let length = aStack.length\n    while (length--) {\n        // Linear search. Performance is inversely proportional to the number of\n        // unique nested structures.\n        if (aStack[length] === a) {\n            return bStack[length] === b\n        }\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a)\n    bStack.push(b)\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n        // Compare array lengths to determine if a deep comparison is necessary.\n        length = a.length\n        if (length !== b.length) {\n            return false\n        }\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (length--) {\n            if (!eq(a[length], b[length], depth - 1, aStack, bStack)) {\n                return false\n            }\n        }\n    } else {\n        // Deep compare objects.\n        const keys = Object.keys(a)\n        let key\n        length = keys.length\n        // Ensure that both objects contain the same number of properties before comparing deep equality.\n        if (Object.keys(b).length !== length) {\n            return false\n        }\n        while (length--) {\n            // Deep compare each member\n            key = keys[length]\n            if (!(hasProp(b, key) && eq(a[key], b[key], depth - 1, aStack, bStack))) {\n                return false\n            }\n        }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop()\n    bStack.pop()\n    return true\n}\n\nfunction unwrap(a: any) {\n    if (isObservableArray(a)) {\n        return a.slice()\n    }\n    if (isES6Map(a) || isObservableMap(a)) {\n        return Array.from(a.entries())\n    }\n    if (isES6Set(a) || isObservableSet(a)) {\n        return Array.from(a.entries())\n    }\n    return a\n}\n","enum routes {\r\n  LOADING = 'loading',\r\n  INTROFIRST = 'introfirst',\r\n  INTROSECOND = 'introsecond',\r\n  HOME = 'home',\r\n  RATING = 'rating',\r\n  MYPROFILE = 'myprofile',\r\n  USERPROFILE = 'userprofile',\r\n  USERMEMES = 'usermemes',\r\n  ADMIN = 'admin',\r\n  RULES = 'rules'\r\n}\r\nenum modals {\r\n  RULES = 'rules',\r\n  REPORT = 'report',\r\n  REPORTINFO = 'reportinfo'\r\n}\r\nenum popouts {\r\n  COMMENTS = 'comments',\r\n  ALERT = 'alert',\r\n  LOADING = 'loading',\r\n  ACTION = 'action'\r\n}\r\nenum upload {\r\n  INPUT,\r\n  BUTTONS,\r\n  LOADING,\r\n  FINISH,\r\n  ERROR,\r\n  AD\r\n}\r\nenum memes {\r\n  TIME = 1,\r\n  TOP_ALL = 2,\r\n  TOP_WEEK = 3,\r\n  TOP_DAY = 4,\r\n  FAVORITE = 5,\r\n  MY = 6,\r\n  USER = 7,\r\n}\r\nenum ratings {\r\n  TOP_ALL = 1,\r\n  TOP_WEEK = 2,\r\n}\r\nenum admins {\r\n  MEMES = 1,\r\n  RATING = 2,\r\n  USERS = 3,\r\n  COMMENTS = 4\r\n}\r\nenum load {\r\n  LAZY,\r\n  LOADING,\r\n  END\r\n}\r\nenum reports {\r\n  SPAM = 1,\r\n  VIOLENCE = 2,\r\n  SCAM = 3,\r\n  FORBIDDEN = 4,\r\n  PORNO = 5,\r\n}\r\n\r\nexport {\r\n  routes,\r\n  upload,\r\n  memes,\r\n  ratings,\r\n  modals,\r\n  popouts,\r\n  load,\r\n  admins,\r\n  reports\r\n}","export function makeIterable<T>(iterator: Iterator<T>): IterableIterator<T> {\n    iterator[Symbol.iterator] = getSelf\n    return iterator as any\n}\n\nfunction getSelf() {\n    return this\n}\n","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","/**\n * (c) Michel Weststrate 2015 - 2020\n * MIT Licensed\n *\n * Welcome to the mobx sources! To get a global overview of how MobX internally works,\n * this is a good place to start:\n * https://medium.com/@mweststrate/becoming-fully-reactive-an-in-depth-explanation-of-mobservable-55995262a254#.xvbh6qd74\n *\n * Source folders:\n * ===============\n *\n * - api/     Most of the public static methods exposed by the module can be found here.\n * - core/    Implementation of the MobX algorithm; atoms, derivations, reactions, dependency trees, optimizations. Cool stuff can be found here.\n * - types/   All the magic that is need to have observable objects, arrays and values is in this folder. Including the modifiers like `asFlat`.\n * - utils/   Utility stuff.\n *\n */\nimport { die } from \"./errors\"\nimport { getGlobal } from \"./utils/global\"\n;[\"Symbol\", \"Map\", \"Set\"].forEach(m => {\n    let g = getGlobal()\n    if (typeof g[m] === \"undefined\") {\n        die(`MobX requires global '${m}' to be available or polyfilled`)\n    }\n})\n\nimport { spy, getDebugName, $mobx } from \"./internal\"\n\nexport {\n    IObservable,\n    IDepTreeNode,\n    Reaction,\n    IReactionPublic,\n    IReactionDisposer,\n    untracked,\n    IAtom,\n    createAtom,\n    spy,\n    IComputedValue,\n    IEqualsComparer,\n    comparer,\n    IEnhancer,\n    IInterceptable,\n    IInterceptor,\n    IListenable,\n    IObjectWillChange,\n    IObjectDidChange,\n    isObservableObject,\n    IValueDidChange,\n    IValueWillChange,\n    IObservableValue,\n    isObservableValue as isBoxedObservable,\n    IObservableArray,\n    IArrayWillChange,\n    IArrayWillSplice,\n    IArraySplice,\n    IArrayUpdate,\n    IArrayDidChange,\n    isObservableArray,\n    IKeyValueMap,\n    ObservableMap,\n    IMapEntries,\n    IMapEntry,\n    IMapWillChange,\n    IMapDidChange,\n    isObservableMap,\n    IObservableMapInitialValues,\n    ObservableSet,\n    isObservableSet,\n    ISetDidChange,\n    ISetWillChange,\n    IObservableSetInitialValues,\n    transaction,\n    observable,\n    IObservableFactory,\n    CreateObservableOptions,\n    computed,\n    IComputedFactory,\n    isObservable,\n    isObservableProp,\n    isComputed,\n    isComputedProp,\n    extendObservable,\n    observe,\n    intercept,\n    autorun,\n    IAutorunOptions,\n    reaction,\n    IReactionOptions,\n    when,\n    IWhenOptions,\n    action,\n    isAction,\n    runInAction,\n    IActionFactory,\n    keys,\n    values,\n    entries,\n    set,\n    remove,\n    has,\n    get,\n    apiOwnKeys as ownKeys,\n    apiDefineProperty as defineProperty,\n    configure,\n    onBecomeObserved,\n    onBecomeUnobserved,\n    flow,\n    isFlow,\n    flowResult,\n    FlowCancellationError,\n    isFlowCancellationError,\n    toJS,\n    trace,\n    IObserverTree,\n    IDependencyTree,\n    getDependencyTree,\n    getObserverTree,\n    resetGlobalState as _resetGlobalState,\n    getGlobalState as _getGlobalState,\n    getDebugName,\n    getAtom,\n    getAdministration as _getAdministration,\n    allowStateChanges as _allowStateChanges,\n    runInAction as _allowStateChangesInsideComputed, // This has become the default behavior in Mobx 6\n    Lambda,\n    $mobx,\n    isComputingDerivation as _isComputingDerivation,\n    onReactionError,\n    interceptReads as _interceptReads,\n    IComputedValueOptions,\n    IActionRunInfo,\n    _startAction,\n    _endAction,\n    allowStateReadsStart as _allowStateReadsStart,\n    allowStateReadsEnd as _allowStateReadsEnd,\n    makeObservable,\n    makeAutoObservable,\n    autoAction as _autoAction,\n    AnnotationsMap,\n    AnnotationMapEntry,\n    override\n} from \"./internal\"\n\n// Devtools support\ndeclare const __MOBX_DEVTOOLS_GLOBAL_HOOK__: { injectMobx: (any) => void }\nif (typeof __MOBX_DEVTOOLS_GLOBAL_HOOK__ === \"object\") {\n    // See: https://github.com/andykog/mobx-devtools/\n    __MOBX_DEVTOOLS_GLOBAL_HOOK__.injectMobx({\n        spy,\n        extras: {\n            getDebugName\n        },\n        $mobx\n    })\n}\n","import { makeAutoObservable } from 'mobx';\r\nimport { UserInfo } from '@vkontakte/vk-bridge';\r\n\r\nclass User {\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n  \r\n  private _user: UserInfo;\r\n  private _nickname: string;\r\n  private _useNickname: boolean;\r\n  private _notification: boolean = false;\r\n  private _subscribe: boolean = false;\r\n  private _memes: number = 0;\r\n  private _ban: boolean = false\r\n  private _member: boolean = false\r\n  \r\n  public getUser(): UserInfo {\r\n    return this._user;\r\n  }\r\n\r\n  public setUser(user: UserInfo): void {\r\n    this._user = user;\r\n  }\r\n\r\n  public setNickname(nickname: string): void {\r\n    this._nickname = nickname;\r\n  }\r\n\r\n  public getNickname(): string {\r\n    return this._nickname;\r\n  }\r\n\r\n  public setUseNickname(useNickname: boolean): void {\r\n    this._useNickname = useNickname;\r\n  }\r\n\r\n  public getUseNickname(): boolean {\r\n    return this._useNickname;\r\n  }\r\n\r\n  public setNotify(notify: boolean): void {\r\n    this._notification = notify;\r\n  }\r\n\r\n  public isNotify(): boolean {\r\n    return this._notification;\r\n  }\r\n\r\n  public setSubscribe(subscribe: boolean): void {\r\n    this._subscribe = subscribe;\r\n  }\r\n\r\n  public isSubscribe(): boolean {\r\n    return this._subscribe;\r\n  }\r\n\r\n  public setMemes(memes: number): void {\r\n    this._memes = memes;\r\n  }\r\n\r\n  public getMemes(): number {\r\n    return this._memes;\r\n  }\r\n\r\n  public setBan(ban: boolean): void {\r\n    this._ban = ban;\r\n  }\r\n\r\n  public getBan(): boolean {\r\n    return this._ban;\r\n  }\r\n\r\n  public setMember(member: boolean): void {\r\n    this._member = member;\r\n  }\r\n\r\n  public getMember(): boolean {\r\n    return this._member;\r\n  }\r\n}\r\n\r\nexport default new User();","import bridge, { EAdsFormats } from '@vkontakte/vk-bridge';\r\nimport State from './State';\r\nimport User from './User';\r\nimport { Alert, ScreenSpinner } from '@vkontakte/vkui';\r\nimport { memes, popouts, reports, routes } from '../types/enums';\r\nimport axios from 'axios';\r\nimport Amplitude from './Amplitude';\r\nimport Analytics from './Analytics';\r\n\r\nconst OFFER_SUBSCRIBE_DELAY: number = 30000\r\nconst INTERSTITIAL_DELAY: number = 1000\r\n\r\nclass Actions {\r\n\r\n  public async getData(): Promise<void> {\r\n    await bridge.send('VKWebAppGetUserInfo').then((data) => {\r\n      if (data.id) {\r\n        User.setUser(data);\r\n      }\r\n    }).catch((er) => {\r\n      State.setPopout(<ScreenSpinner state='error' aria-label='Ошибка' />, popouts.LOADING);\r\n      window.location.reload()\r\n    })\r\n\r\n    const res = await this.sendRequest('getData', {});\r\n\r\n    if (res.error) {\r\n      console.log('error', res)\r\n      State.setPopout(<ScreenSpinner state='error' aria-label='Ошибка' />, popouts.LOADING);\r\n    } else {\r\n      User.setNickname(res.data.user.name);\r\n      User.setUseNickname(res.data.user.nickname);\r\n      User.setNotify(res.data.user.notify);\r\n      User.setSubscribe(res.data.user.subscribe);\r\n      User.setBan(res.data.user.ban_comments);\r\n      User.setMemes(res.data.user.memes);\r\n      User.setMember(res.data.user.member)\r\n\r\n\r\n      State.setStories(res.data.stories)\r\n      State.setTimer(res.data.time);\r\n\r\n      const search: string = window.location.search\r\n      const params = new URLSearchParams(search)\r\n\r\n      if (res.data.user.member) {\r\n        State.setActivePanel(routes.HOME);\r\n        State.setHistory([routes.HOME])\r\n        //@ts-ignore\r\n        // State.setLauchParamsData({...State.getLauchParamsData(), vk_ref: 'third_party_profile_buttons', vk_profile_id: 276669821, vk_user_id: 276669821})\r\n        if (State.getLauchParamsData().vk_ref === 'third_party_profile_buttons' || params.get('vk_ref') === 'third_party_profile_buttons' ) {\r\n          //@ts-ignore\r\n          if (State.getLauchParamsData()?.vk_profile_id === State.getLauchParamsData().vk_user_id || params.get('vk_profile_id') === params.get('vk_user_id') ) {\r\n            State.setActivePanel(routes.HOME);\r\n            State.setHistory([routes.HOME])\r\n            State.setCategory(memes.MY)\r\n          } else {\r\n            //@ts-ignore\r\n            const id = State.getLauchParamsData()?.vk_profile_id ? State.getLauchParamsData()?.vk_profile_id : params.get('vk_profile_id')\r\n            await this.getDataUserProfile(id)\r\n            if (State.getUserProfile().id) {\r\n              State.setActivePanel(routes.USERMEMES);\r\n              State.setCategory(memes.USER)\r\n              State.setHistory([routes.HOME, routes.USERPROFILE, routes.USERMEMES])\r\n              State.getHistory().forEach(panel=> window.history.pushState({ panel: panel }, panel))\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        State.setActivePanel(routes.INTROFIRST);\r\n        State.setHistory([routes.INTROFIRST])\r\n      }\r\n      State.setAdmin(res.data.admin);\r\n      State.setPopout(null);\r\n      State.setInterstitial(res.data.interstitial)\r\n      State.startInterstitialADTimer()\r\n\r\n      this.subscribes();\r\n      this.notifyToSubscribe(res.data.subscribeOffer, res.data.user.subscribe)\r\n\r\n      State.setReward(res.data.rewarded);\r\n      console.log(JSON.parse(JSON.stringify((State.getHistory()))))\r\n\r\n\r\n    }\r\n  }\r\n\r\n  public setName(name: string, checked: boolean): void {\r\n    if (name !== User.getNickname() || checked !== User.getUseNickname()) {\r\n      User.setNickname(name);\r\n      User.setUseNickname(checked);\r\n      this.sendRequest('setName', {\r\n        name: name,\r\n        nickname: checked\r\n      });\r\n    }\r\n  }\r\n\r\n  private subscribes(): void {\r\n    bridge.subscribe(e => {\r\n      switch (e.detail.type) {\r\n        case 'VKWebAppDenyNotificationsResult':\r\n          User.setNotify(false);\r\n          break;\r\n        case 'VKWebAppAllowNotificationsResult':\r\n          User.setNotify(true);\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  public async sendRequest(route: string, data: object): Promise<IrequestRespons> {\r\n    const body = {\r\n      ...data,\r\n      id: User.getUser().id,\r\n      search: window.location.search\r\n    }\r\n    return await axios.post(process.env.REACT_APP_API + '/' + route, body).then(res => res.data);\r\n  }\r\n\r\n  public async getDataRatingUsers(): Promise<void> {\r\n    State.setLoading(true)\r\n    const response = await this.sendRequest('getRatings', {})\r\n    State.setRatingUsers(response.data)\r\n    State.setLoading(false)\r\n  }\r\n\r\n  public async getDataComments(memeId: number): Promise<void> {\r\n    const response = await this.sendRequest('getComments', { meme: memeId })\r\n    State.setComments(response.data)\r\n  }\r\n\r\n  public async sendComment(comment: IcommentSend): Promise<void> {\r\n    await this.sendRequest('sendComment', comment)\r\n    const responseComments = await this.sendRequest('getComments', { meme: State.getMemeOpen() })\r\n    State.setComments(responseComments.data)\r\n    State.memeComment(comment.meme)\r\n  }\r\n\r\n  public async notifyToSubscribe(subscribeOffer: boolean, userSubscribe: boolean): Promise<void> {\r\n    if (subscribeOffer && !userSubscribe) {\r\n      setTimeout(() => {\r\n        bridge.send('VKWebAppJoinGroup', { group_id: Number(process.env.REACT_APP_GROUP) }).then(data => {\r\n          if (data.result) {\r\n            User.setSubscribe(true);\r\n          }\r\n        });\r\n      }, OFFER_SUBSCRIBE_DELAY)\r\n    }\r\n  }\r\n\r\n  public async showInterstitialAd(): Promise<void> {\r\n    bridge.send('VKWebAppCheckNativeAds', { ad_format: EAdsFormats.INTERSTITIAL })\r\n      .then((data) => {\r\n\r\n        if (data.result) {\r\n          State.setPopout(<ScreenSpinner state='loading' />, popouts.LOADING)\r\n\r\n          setTimeout(() => {\r\n            State.setPopout(null)\r\n            bridge.send('VKWebAppShowNativeAds', { ad_format: EAdsFormats.INTERSTITIAL })\r\n              .then(() => { State.amplitude.track('interstitial') })\r\n              .catch(error => {\r\n                console.log(error);\r\n              });\r\n          }, INTERSTITIAL_DELAY)\r\n\r\n        }\r\n      })\r\n  }\r\n\r\n  public async deleteMeme(meme: Imeme): Promise<void> {\r\n    await this.sendRequest('deleteMeme', { meme: meme.id }).then(res => {\r\n      if (!res.error) {\r\n        State.deleteOneMeme(meme.id)\r\n      }\r\n    }).catch(() => {\r\n      State.setPopout(<Alert\r\n        actions={[{\r\n          title: 'Понятно',\r\n          autoclose: true,\r\n          mode: 'cancel'\r\n        }]}\r\n        onClose={() => State.setPopout(null)}\r\n      >\r\n        <p>Что-то пошло не так</p>\r\n      </Alert>, popouts.ALERT)\r\n    });\r\n  }\r\n\r\n  public async reportMeme(meme: Imeme, type: reports): Promise<void> {\r\n    await this.sendRequest('strikeMeme', { meme: meme.id, type: type })\r\n  }\r\n\r\n  public async deleteComment(comment: Icomment): Promise<void> {\r\n    const response = await this.sendRequest('deleteComment', { comment: comment.id })\r\n    if (!response.error) {\r\n      const responseComments = await this.sendRequest('getComments', { meme: State.getMemeOpen() })\r\n      State.setComments(responseComments.data)\r\n      State.memeCommentDelete(State.getMemeOpen())\r\n    };\r\n  }\r\n\r\n  public async reportComment(comment: Icomment, type: reports): Promise<void> {\r\n    await this.sendRequest('strikeComment', { comment: comment.id, type: type })\r\n  }\r\n\r\n  public async getDataUserProfile(id: number): Promise<void> {\r\n    State.setLoading(true)\r\n    const response = await this.sendRequest('getUserProfile', { user: id })\r\n    if (!response.error) {\r\n      State.setUserProfile(response.data)\r\n    };\r\n    State.setLoading(false)\r\n  }\r\n\r\n  public async banUser(user: IuserProfile, ban: boolean): Promise<void> {\r\n    await this.sendRequest('setBan', { user: user.id, ban_comments: ban })\r\n    const response = await this.sendRequest('getUserProfile', { user: user.id })\r\n    if (!response.error) {\r\n      State.setUserProfile(response.data)\r\n    };\r\n  }\r\n\r\n  public async getCommentsStrikes(): Promise<void> {\r\n    State.setLoading(true)\r\n    const response = await this.sendRequest('getCommentsStrikes', {})\r\n    if (!response.error) {\r\n      State.setCommentsStrikes(response.data)\r\n    };\r\n    State.setLoading(false)\r\n  }\r\n\r\n  public async getUsersStrikes(): Promise<void> {\r\n    State.setLoading(true)\r\n    const response = await this.sendRequest('getUsersStrikes', {})\r\n    if (!response.error) {\r\n      State.setUsersStrikes(response.data)\r\n    };\r\n    State.setLoading(false)\r\n  }\r\n\r\n}\r\n\r\nexport default new Actions();","import { makeAutoObservable, runInAction } from 'mobx';\r\nimport { ScreenSpinner } from '@vkontakte/vkui';\r\nimport { admins, load, memes, modals, popouts, ratings, routes, upload } from '../types/enums';\r\nimport bridge, { GetLaunchParamsResponse } from '@vkontakte/vk-bridge';\r\nimport Actions from './Actions';\r\nimport Amplitude from './Amplitude';\r\nimport User from './User';\r\n\r\nclass State {\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  private _tab: routes = routes.HOME;\r\n  private _admin: boolean = false;\r\n  private _popout: JSX.Element = <ScreenSpinner state='loading' />;\r\n  private _file: File = null;\r\n  private _uploadState: upload = upload.INPUT;\r\n  private _timer: number;\r\n  private _reward: boolean = false;\r\n  private _memes: string;\r\n  private _memesIteration: number = 0;\r\n  private _loadingMemes: load = load.LAZY;\r\n  private _category: memes = memes.TIME;\r\n  private _memeOpen: number;\r\n  private _comments: Icomment[] = [];\r\n  private _history: routes[] = []\r\n  private _historyPopouts: (modals | popouts)[] = []\r\n  private _activePanel: routes = routes.LOADING\r\n  private _ratingUsers: IratingUsers = { all: [], week: [] }\r\n  private _ratingCategory: ratings = ratings.TOP_ALL;\r\n  private _moderation: number = 1;\r\n  private _swipe: boolean = false;\r\n  private _stories: boolean = false;\r\n  private _snackbar: JSX.Element = null;\r\n  private _activeModal: string = null;\r\n  private _reportMeme: Imeme = null;\r\n  private _reportComment: Icomment = null;\r\n  private _platform: string = null;\r\n  private _reportInfo: Istrikes = null\r\n  private _userProfile: IuserProfile = null\r\n  private _loading: boolean = false\r\n  private _interstitial: boolean = false\r\n  private _interstitialADTimer: boolean = false\r\n  private _INTERSTITIAL_AD_DELAY: number = 60000\r\n  private _adminCategory: admins = admins.MEMES\r\n  private _commentsStrikes: Icomment[] = []\r\n  private _usersStrikes: IuserStrikes[] = []\r\n  private _activeSubscribesAlert: boolean = false\r\n  private _devUsersID: number[] = [276669821, 191781124]\r\n  private _rewardedButton: boolean = true\r\n  private _lauchParamsData: string = null\r\n  public amplitude: Amplitude = null\r\n\r\n\r\n  public getLauchParamsData(): GetLaunchParamsResponse {\r\n    return JSON.parse(this._lauchParamsData)\r\n  }\r\n\r\n  public setLauchParamsData(lauchParamsData: GetLaunchParamsResponse): void {\r\n     this._lauchParamsData =  JSON.stringify(lauchParamsData)\r\n  }\r\n\r\n  public getRewardedButton(): boolean {\r\n    return this._rewardedButton\r\n  }\r\n\r\n  public setRewardedButton(active: boolean): void {\r\n     this._rewardedButton = active\r\n  }\r\n\r\n  public goBack(): void {\r\n    if (this._historyPopouts.length !== 0) {\r\n      switch (this._historyPopouts[this._historyPopouts.length - 1]) {\r\n        case popouts.COMMENTS:\r\n          if (this._history[this._history.length - 1] === routes.USERPROFILE) {\r\n            this._history.pop()\r\n            const newPanel: routes = this._history[this._history.length - 1]\r\n            this._activePanel = newPanel\r\n            return\r\n          }\r\n          this.setMemeOpen(-1)\r\n          break;\r\n        case popouts.ALERT:\r\n        case popouts.ACTION:\r\n          this._popout = null\r\n          break;\r\n        case modals.REPORT:\r\n        case modals.REPORTINFO:\r\n        case modals.RULES:\r\n          this._activeModal = null\r\n          break;\r\n      }\r\n      this._historyPopouts.pop()\r\n    } else {\r\n      if (this._history.length === 1) {\r\n        bridge.send(\"VKWebAppClose\", { \"status\": \"success\" });\r\n      } else if (this._history.length > 1) {\r\n        this._history.pop()\r\n        const newPanel: routes = this._history[this._history.length - 1]\r\n        this._activePanel = newPanel\r\n        if (newPanel === routes.HOME || newPanel === routes.RATING || newPanel === routes.MYPROFILE || newPanel === routes.ADMIN) {\r\n          if (!this.getInterstitialADTimer()) {\r\n            Actions.showInterstitialAd()\r\n            this.startInterstitialADTimer()\r\n          }\r\n          this._tab = newPanel;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public goToPage = (panel: routes) => {\r\n    if (panel !== this._history[this._history.length - 1]) {\r\n      window.history.pushState({ panel: panel }, panel);\r\n      if (panel === routes.HOME || panel === routes.RATING || panel === routes.MYPROFILE || panel === routes.ADMIN) {\r\n        if (!this.getInterstitialADTimer()) {\r\n          Actions.showInterstitialAd()\r\n          this.startInterstitialADTimer()\r\n        }\r\n        this._tab = panel;\r\n      }\r\n      this._activePanel = panel;\r\n      this._history.push(panel);\r\n    }\r\n  };\r\n\r\n  public getTab(): routes {\r\n    return this._tab;\r\n  }\r\n\r\n  public setAdmin(admin: boolean): void {\r\n    this._admin = admin;\r\n  }\r\n\r\n  public isAdmin(): boolean {\r\n    return this._admin;\r\n  }\r\n\r\n  public setPopout(popout: JSX.Element, type?: popouts): void {\r\n    if (type !== popouts.LOADING && type) {\r\n      this._historyPopouts.push(type);\r\n      window.history.pushState({ modal: type }, type);\r\n    } else if (popout === null && !type) {\r\n      this._historyPopouts.pop()\r\n    }\r\n    this._popout = popout;\r\n  }\r\n\r\n  public getPopout(): JSX.Element {\r\n    return this._popout;\r\n  }\r\n\r\n  public setFile(file: File): void {\r\n    this._file = file;\r\n  }\r\n\r\n  public getFile(): File {\r\n    return this._file;\r\n  }\r\n\r\n  public getUploadState(): upload {\r\n    return this._uploadState;\r\n  }\r\n\r\n  public setUploadState(state: upload): void {\r\n    this._uploadState = state;\r\n  }\r\n\r\n  public setTimer(timer: number): void {\r\n    this._timer = timer;\r\n    setInterval((): void => {\r\n      runInAction(() => {\r\n        this._timer--;\r\n        this._timer <= 0 && window.location.reload();\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  public getTimer(): number {\r\n    return this._timer;\r\n  }\r\n\r\n  public setReward(reward: boolean): void {\r\n    this._reward = reward;\r\n  }\r\n\r\n  public getReward(): boolean {\r\n    return this._reward;\r\n  }\r\n\r\n  public getMemes(): Imeme[] {\r\n    try {\r\n      return JSON.parse(this._memes);\r\n    } catch (e) {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  public setMemes(memes: Imeme[]): void {\r\n    memes = this._boolOpinions(memes);\r\n    this._memes = JSON.stringify(memes);\r\n  }\r\n\r\n  public addMemes(memes: Imeme[]): void {\r\n    memes = this._boolOpinions(memes);\r\n    const oldArray = JSON.parse(this._memes);\r\n    const newArray = oldArray.concat(memes);\r\n    this._memes = JSON.stringify(newArray);\r\n  }\r\n\r\n  public memeOpinion(id: number): void {\r\n    const memes: Imeme[] = JSON.parse(this._memes);\r\n    const meme = memes.find(data => data.id === id);\r\n    meme.opinion = !meme.opinion;\r\n    meme.opinion ? meme.likes++ : meme.likes--;\r\n    this._memes = JSON.stringify(memes);\r\n  }\r\n\r\n  public memeShare(id: number): void {\r\n    const memes: Imeme[] = JSON.parse(this._memes);\r\n    const meme = memes.find(data => data.id === id);\r\n    meme.share++;\r\n    this._memes = JSON.stringify(memes);\r\n  }\r\n\r\n  public memeComment(id: number): void {\r\n    const memes: Imeme[] = JSON.parse(this._memes);\r\n    const meme = memes.find(data => data.id === id);\r\n    meme.comments++;\r\n    this._memes = JSON.stringify(memes);\r\n  }\r\n\r\n  public memeCommentDelete(id: number): void {\r\n    const memes: Imeme[] = JSON.parse(this._memes);\r\n    const meme = memes.find(data => data.id === id);\r\n    meme.comments--;\r\n    this._memes = JSON.stringify(memes);\r\n  }\r\n\r\n  private _boolOpinions(memes: Imeme[]): Imeme[] {\r\n    for (const meme of memes) meme.opinion = Boolean(meme.opinion);\r\n    return memes;\r\n  }\r\n\r\n  public getLoadMemes(): load {\r\n    return this._loadingMemes;\r\n  }\r\n\r\n  public setLoadMemes(load: load): void {\r\n    this._loadingMemes = load;\r\n  }\r\n\r\n  public setMemesIteration(i: number): void {\r\n    this._memesIteration = i;\r\n  }\r\n\r\n  public getMemesIteration(): number {\r\n    return this._memesIteration;\r\n  }\r\n\r\n  public setCategory(type: memes): void {\r\n    this._category = type;\r\n  }\r\n\r\n  public getCategory(): memes {\r\n    return this._category;\r\n  }\r\n\r\n  public markModeration(): void {\r\n    this._moderation++;\r\n  }\r\n\r\n  public getModeration(): number {\r\n    return this._moderation;\r\n  }\r\n\r\n  public setRatingCategory(type: ratings): void {\r\n    this._ratingCategory = type;\r\n  }\r\n\r\n  public getRatingCategory(): ratings {\r\n    return this._ratingCategory;\r\n  }\r\n\r\n  public setRatingUsers(users: IratingUsers): void {\r\n    this._ratingUsers = users;\r\n  }\r\n\r\n  public getRatingUsers(): IratingUsers {\r\n    return this._ratingUsers;\r\n  }\r\n\r\n  public setComments(comments: Icomment[]): void {\r\n\r\n    this._comments = comments;\r\n  }\r\n\r\n  public getComments(): Icomment[] {\r\n    return this._comments;\r\n  }\r\n\r\n  public setMemeOpen(memeId: number): void {\r\n    this._memeOpen = memeId;\r\n  }\r\n\r\n  public getMemeOpen(): number {\r\n    return this._memeOpen;\r\n  }\r\n\r\n  public setHistory(history: routes[]): void {\r\n    this._history = history\r\n  }\r\n\r\n  public getHistory(): routes[] {\r\n    return this._history;\r\n  }\r\n\r\n  public setActivePanel(route: routes) {\r\n    this._activePanel = route;\r\n  }\r\n\r\n  public getActivePanel(): routes {\r\n    return this._activePanel;\r\n  }\r\n\r\n  public setSwipe(swipe: boolean) {\r\n    this._swipe = swipe;\r\n  }\r\n\r\n  public getSwipe(): boolean {\r\n    return this._swipe;\r\n  }\r\n\r\n  public setStories(stories: boolean) {\r\n    this._stories = stories;\r\n  }\r\n\r\n  public getStories(): boolean {\r\n    return this._stories;\r\n  }\r\n\r\n  public deleteOneMeme(id: number): void {\r\n    const memes: Imeme[] = JSON.parse(this._memes);\r\n    const memeId = memes.findIndex(data => data.id === id);\r\n    memes.splice(memeId, 1)\r\n    this._memes = JSON.stringify(memes);\r\n  }\r\n\r\n  public getSnackbar(): JSX.Element {\r\n    return this._snackbar\r\n  }\r\n\r\n  public setActiveModal(modal: modals): void {\r\n    if (modal !== null) {\r\n      this._historyPopouts.push(modal);\r\n      window.history.pushState({ modal: modal }, modal);\r\n    } else {\r\n      this._historyPopouts.pop()\r\n    }\r\n    this._activeModal = modal\r\n  }\r\n\r\n  public getActiveModal(): string {\r\n    return this._activeModal\r\n  }\r\n\r\n  public setSnackbar(snackbar: JSX.Element): void {\r\n    this._snackbar = snackbar\r\n  }\r\n\r\n  public setReportMeme(meme: Imeme): void {\r\n    this._reportMeme = meme\r\n  }\r\n\r\n  public getReportMeme(): Imeme {\r\n    return this._reportMeme\r\n  }\r\n\r\n  public setPlatform(platform: string): void {\r\n    this._platform = platform\r\n  }\r\n\r\n  public getPlatform(): string {\r\n    return this._platform\r\n  }\r\n\r\n  public setReportComment(comment: Icomment): void {\r\n    this._reportComment = comment\r\n  }\r\n\r\n  public getReportComment(): Icomment {\r\n    return this._reportComment\r\n  }\r\n\r\n  public setReportInfo(info: Istrikes): void {\r\n    this._reportInfo = info\r\n  }\r\n\r\n  public getReportInfo(): Istrikes {\r\n    return this._reportInfo\r\n  }\r\n\r\n  public setUserProfile(info: IuserProfile): void {\r\n    this._userProfile = info\r\n  }\r\n\r\n  public getUserProfile(): IuserProfile {\r\n    return this._userProfile\r\n  }\r\n\r\n  public setLoading(loading: boolean): void {\r\n    this._loading = loading\r\n  }\r\n\r\n  public getLoading(): boolean {\r\n    return this._loading\r\n  }\r\n\r\n  public startInterstitialADTimer(): void {\r\n    if (this.getInterstitial()) {\r\n      this._interstitialADTimer = true\r\n      setTimeout(() => {\r\n        this._interstitialADTimer = false\r\n        this._INTERSTITIAL_AD_DELAY *= 2\r\n      }, this._INTERSTITIAL_AD_DELAY)\r\n    }\r\n  }\r\n\r\n  public getInterstitialADTimer(): boolean {\r\n    return this._interstitialADTimer\r\n  }\r\n\r\n  public setInterstitial(interstitial: boolean): void {\r\n    this._interstitial = interstitial\r\n  }\r\n\r\n  public getInterstitial(): boolean {\r\n    return this._interstitial\r\n  }\r\n\r\n  public setAdminCategory(category: admins): void {\r\n    this._adminCategory = category\r\n  }\r\n\r\n  public getAdminCategory(): admins {\r\n    return this._adminCategory\r\n  }\r\n\r\n  public setCommentsStrikes(comments: Icomment[]): void {\r\n    this._commentsStrikes = comments\r\n  }\r\n\r\n  public getCommentsStrikes(): Icomment[] {\r\n    return this._commentsStrikes\r\n  }\r\n\r\n  public setUsersStrikes(users: IuserStrikes[]): void {\r\n    this._usersStrikes = users\r\n  }\r\n\r\n  public getUsersStrikes(): IuserStrikes[] {\r\n    return this._usersStrikes\r\n  }\r\n\r\n  public setActiveSubscribesAlert(active: boolean): void {\r\n    this._activeSubscribesAlert = active\r\n  }\r\n\r\n  public getActiveSubscribesAlert(): boolean {\r\n    return this._activeSubscribesAlert\r\n  }\r\n\r\n  public isDev(): boolean {\r\n    const id = User?.getUser()?.id\r\n    return this._devUsersID?.indexOf(id) !== -1\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default new State();","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { makeObservable } from \"mobx\"\nimport { useState } from \"react\"\n\nif (!useState) {\n    throw new Error(\"mobx-react-lite requires React with Hooks support\")\n}\nif (!makeObservable) {\n    throw new Error(\"mobx-react-lite@3 requires mobx at least version 6 to be available\")\n}\n","import { configure } from \"mobx\"\n\nexport function defaultNoopBatch(callback: () => void) {\n    callback()\n}\n\nexport function observerBatching(reactionScheduler: any) {\n    if (!reactionScheduler) {\n        reactionScheduler = defaultNoopBatch\n        if (\"production\" !== process.env.NODE_ENV) {\n            console.warn(\n                \"[MobX] Failed to get unstable_batched updates from react-dom / react-native\"\n            )\n        }\n    }\n    configure({ reactionScheduler })\n}\n\nexport const isObserverBatched = () => {\n    if (\"production\" !== process.env.NODE_ENV) {\n        console.warn(\"[MobX] Deprecated\")\n    }\n\n    return true\n}\n","import { getDependencyTree, Reaction } from \"mobx\"\n\nexport function printDebugValue(v: Reaction) {\n    return getDependencyTree(v)\n}\n","declare class FinalizationRegistryType<T> {\n    constructor(cleanup: (cleanupToken: T) => void)\n    register(object: object, cleanupToken: T, unregisterToken?: object): void\n    unregister(unregisterToken: object): void\n}\n\ndeclare const FinalizationRegistry: typeof FinalizationRegistryType | undefined\n\nconst FinalizationRegistryLocal =\n    typeof FinalizationRegistry === \"undefined\" ? undefined : FinalizationRegistry\n\nexport { FinalizationRegistryLocal as FinalizationRegistry }\n","import { Reaction } from \"mobx\"\n\nexport function createTrackingData(reaction: Reaction) {\n    const trackingData: IReactionTracking = {\n        reaction,\n        mounted: false,\n        changedBeforeMount: false,\n        cleanAt: Date.now() + CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS\n    }\n    return trackingData\n}\n\n/**\n * Unified api for timers/Finalization registry cleanups\n * This abstraction make useObserver much simpler\n */\nexport interface ReactionCleanupTracking {\n    /**\n     *\n     * @param reaction The reaction to cleanup\n     * @param objectRetainedByReact This will be in actual use only when FinalizationRegister is in use\n     */\n    addReactionToTrack(\n        reactionTrackingRef: React.MutableRefObject<IReactionTracking | null>,\n        reaction: Reaction,\n        objectRetainedByReact: object\n    ): IReactionTracking\n    recordReactionAsCommitted(reactionRef: React.MutableRefObject<IReactionTracking | null>): void\n    forceCleanupTimerToRunNowForTests(): void\n    resetCleanupScheduleForTests(): void\n}\n\nexport interface IReactionTracking {\n    /** The Reaction created during first render, which may be leaked */\n    reaction: Reaction\n    /**\n     * The time (in ticks) at which point we should dispose of the reaction\n     * if this component hasn't yet been fully mounted.\n     */\n    cleanAt: number\n\n    /**\n     * Whether the component has yet completed mounting (for us, whether\n     * its useEffect has run)\n     */\n    mounted: boolean\n\n    /**\n     * Whether the observables that the component is tracking changed between\n     * the first render and the first useEffect.\n     */\n    changedBeforeMount: boolean\n\n    /**\n     * In case we are using finalization registry based cleanup,\n     * this will hold the cleanup token associated with this reaction\n     */\n    finalizationRegistryCleanupToken?: number\n}\n\n/**\n * The minimum time before we'll clean up a Reaction created in a render\n * for a component that hasn't managed to run its effects. This needs to\n * be big enough to ensure that a component won't turn up and have its\n * effects run without being re-rendered.\n */\nexport const CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS = 10_000\n\n/**\n * The frequency with which we'll check for leaked reactions.\n */\nexport const CLEANUP_TIMER_LOOP_MILLIS = 10_000\n","import { FinalizationRegistry as FinalizationRegistryMaybeUndefined } from \"./FinalizationRegistryWrapper\"\nimport { createReactionCleanupTrackingUsingFinalizationRegister } from \"./createReactionCleanupTrackingUsingFinalizationRegister\"\nimport { createTimerBasedReactionCleanupTracking } from \"./createTimerBasedReactionCleanupTracking\"\nexport { IReactionTracking } from \"./reactionCleanupTrackingCommon\"\n\nconst {\n    addReactionToTrack,\n    recordReactionAsCommitted,\n    resetCleanupScheduleForTests,\n    forceCleanupTimerToRunNowForTests\n} = FinalizationRegistryMaybeUndefined\n    ? createReactionCleanupTrackingUsingFinalizationRegister(FinalizationRegistryMaybeUndefined)\n    : createTimerBasedReactionCleanupTracking()\n\nexport {\n    addReactionToTrack,\n    recordReactionAsCommitted,\n    resetCleanupScheduleForTests,\n    forceCleanupTimerToRunNowForTests\n}\n","import { FinalizationRegistry as FinalizationRegistryMaybeUndefined } from \"./FinalizationRegistryWrapper\"\nimport { Reaction } from \"mobx\"\nimport {\n    ReactionCleanupTracking,\n    IReactionTracking,\n    createTrackingData\n} from \"./reactionCleanupTrackingCommon\"\n\n/**\n * FinalizationRegistry-based uncommitted reaction cleanup\n */\nexport function createReactionCleanupTrackingUsingFinalizationRegister(\n    FinalizationRegistry: NonNullable<typeof FinalizationRegistryMaybeUndefined>\n): ReactionCleanupTracking {\n    const cleanupTokenToReactionTrackingMap = new Map<number, IReactionTracking>()\n    let globalCleanupTokensCounter = 1\n\n    const registry = new FinalizationRegistry(function cleanupFunction(token: number) {\n        const trackedReaction = cleanupTokenToReactionTrackingMap.get(token)\n        if (trackedReaction) {\n            trackedReaction.reaction.dispose()\n            cleanupTokenToReactionTrackingMap.delete(token)\n        }\n    })\n\n    return {\n        addReactionToTrack(\n            reactionTrackingRef: React.MutableRefObject<IReactionTracking | null>,\n            reaction: Reaction,\n            objectRetainedByReact: object\n        ) {\n            const token = globalCleanupTokensCounter++\n\n            registry.register(objectRetainedByReact, token, reactionTrackingRef)\n            reactionTrackingRef.current = createTrackingData(reaction)\n            reactionTrackingRef.current.finalizationRegistryCleanupToken = token\n            cleanupTokenToReactionTrackingMap.set(token, reactionTrackingRef.current)\n\n            return reactionTrackingRef.current\n        },\n        recordReactionAsCommitted(reactionRef: React.MutableRefObject<IReactionTracking | null>) {\n            registry.unregister(reactionRef)\n\n            if (reactionRef.current && reactionRef.current.finalizationRegistryCleanupToken) {\n                cleanupTokenToReactionTrackingMap.delete(\n                    reactionRef.current.finalizationRegistryCleanupToken\n                )\n            }\n        },\n        forceCleanupTimerToRunNowForTests() {\n            // When FinalizationRegistry in use, this this is no-op\n        },\n        resetCleanupScheduleForTests() {\n            // When FinalizationRegistry in use, this this is no-op\n        }\n    }\n}\n","import { Reaction } from \"mobx\"\nimport {\n    ReactionCleanupTracking,\n    IReactionTracking,\n    CLEANUP_TIMER_LOOP_MILLIS,\n    createTrackingData\n} from \"./reactionCleanupTrackingCommon\"\n\n/**\n * timers, gc-style, uncommitted reaction cleanup\n */\nexport function createTimerBasedReactionCleanupTracking(): ReactionCleanupTracking {\n    /**\n     * Reactions created by components that have yet to be fully mounted.\n     */\n    const uncommittedReactionRefs: Set<React.MutableRefObject<IReactionTracking | null>> = new Set()\n\n    /**\n     * Latest 'uncommitted reactions' cleanup timer handle.\n     */\n    let reactionCleanupHandle: ReturnType<typeof setTimeout> | undefined\n\n    /* istanbul ignore next */\n    /**\n     * Only to be used by test functions; do not export outside of mobx-react-lite\n     */\n    function forceCleanupTimerToRunNowForTests() {\n        // This allows us to control the execution of the cleanup timer\n        // to force it to run at awkward times in unit tests.\n        if (reactionCleanupHandle) {\n            clearTimeout(reactionCleanupHandle)\n            cleanUncommittedReactions()\n        }\n    }\n\n    /* istanbul ignore next */\n    function resetCleanupScheduleForTests() {\n        if (uncommittedReactionRefs.size > 0) {\n            for (const ref of uncommittedReactionRefs) {\n                const tracking = ref.current\n                if (tracking) {\n                    tracking.reaction.dispose()\n                    ref.current = null\n                }\n            }\n            uncommittedReactionRefs.clear()\n        }\n\n        if (reactionCleanupHandle) {\n            clearTimeout(reactionCleanupHandle)\n            reactionCleanupHandle = undefined\n        }\n    }\n\n    function ensureCleanupTimerRunning() {\n        if (reactionCleanupHandle === undefined) {\n            reactionCleanupHandle = setTimeout(cleanUncommittedReactions, CLEANUP_TIMER_LOOP_MILLIS)\n        }\n    }\n\n    function scheduleCleanupOfReactionIfLeaked(\n        ref: React.MutableRefObject<IReactionTracking | null>\n    ) {\n        uncommittedReactionRefs.add(ref)\n\n        ensureCleanupTimerRunning()\n    }\n\n    function recordReactionAsCommitted(\n        reactionRef: React.MutableRefObject<IReactionTracking | null>\n    ) {\n        uncommittedReactionRefs.delete(reactionRef)\n    }\n\n    /**\n     * Run by the cleanup timer to dispose any outstanding reactions\n     */\n    function cleanUncommittedReactions() {\n        reactionCleanupHandle = undefined\n\n        // Loop through all the candidate leaked reactions; those older\n        // than CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS get tidied.\n\n        const now = Date.now()\n        uncommittedReactionRefs.forEach(ref => {\n            const tracking = ref.current\n            if (tracking) {\n                if (now >= tracking.cleanAt) {\n                    // It's time to tidy up this leaked reaction.\n                    tracking.reaction.dispose()\n                    ref.current = null\n                    uncommittedReactionRefs.delete(ref)\n                }\n            }\n        })\n\n        if (uncommittedReactionRefs.size > 0) {\n            // We've just finished a round of cleanups but there are still\n            // some leak candidates outstanding.\n            ensureCleanupTimerRunning()\n        }\n    }\n\n    return {\n        addReactionToTrack(\n            reactionTrackingRef: React.MutableRefObject<IReactionTracking | null>,\n            reaction: Reaction,\n            /**\n             * On timer based implementation we don't really need this object,\n             * but we keep the same api\n             */\n            objectRetainedByReact: unknown\n        ) {\n            reactionTrackingRef.current = createTrackingData(reaction)\n            scheduleCleanupOfReactionIfLeaked(reactionTrackingRef)\n            return reactionTrackingRef.current\n        },\n        recordReactionAsCommitted,\n        forceCleanupTimerToRunNowForTests,\n        resetCleanupScheduleForTests\n    }\n}\n","let globalIsUsingStaticRendering = false\n\nexport function enableStaticRendering(enable: boolean) {\n    globalIsUsingStaticRendering = enable\n}\n\nexport function isUsingStaticRendering(): boolean {\n    return globalIsUsingStaticRendering\n}\n","import { Reaction } from \"mobx\"\nimport React from \"react\"\nimport { printDebugValue } from \"./utils/printDebugValue\"\nimport {\n    addReactionToTrack,\n    IReactionTracking,\n    recordReactionAsCommitted\n} from \"./utils/reactionCleanupTracking\"\nimport { isUsingStaticRendering } from \"./staticRendering\"\n\nfunction observerComponentNameFor(baseComponentName: string) {\n    return `observer${baseComponentName}`\n}\n\n/**\n * We use class to make it easier to detect in heap snapshots by name\n */\nclass ObjectToBeRetainedByReact {}\n\nfunction objectToBeRetainedByReactFactory() {\n    return new ObjectToBeRetainedByReact()\n}\n\nexport function useObserver<T>(fn: () => T, baseComponentName: string = \"observed\"): T {\n    if (isUsingStaticRendering()) {\n        return fn()\n    }\n\n    const [objectRetainedByReact] = React.useState(objectToBeRetainedByReactFactory)\n    // Force update, see #2982\n    const [, setState] = React.useState()\n    const forceUpdate = () => setState([] as any)\n\n    // StrictMode/ConcurrentMode/Suspense may mean that our component is\n    // rendered and abandoned multiple times, so we need to track leaked\n    // Reactions.\n    const reactionTrackingRef = React.useRef<IReactionTracking | null>(null)\n\n    if (!reactionTrackingRef.current) {\n        // First render for this component (or first time since a previous\n        // reaction from an abandoned render was disposed).\n\n        const newReaction = new Reaction(observerComponentNameFor(baseComponentName), () => {\n            // Observable has changed, meaning we want to re-render\n            // BUT if we're a component that hasn't yet got to the useEffect()\n            // stage, we might be a component that _started_ to render, but\n            // got dropped, and we don't want to make state changes then.\n            // (It triggers warnings in StrictMode, for a start.)\n            if (trackingData.mounted) {\n                // We have reached useEffect(), so we're mounted, and can trigger an update\n                forceUpdate()\n            } else {\n                // We haven't yet reached useEffect(), so we'll need to trigger a re-render\n                // when (and if) useEffect() arrives.\n                trackingData.changedBeforeMount = true\n            }\n        })\n\n        const trackingData = addReactionToTrack(\n            reactionTrackingRef,\n            newReaction,\n            objectRetainedByReact\n        )\n    }\n\n    const { reaction } = reactionTrackingRef.current!\n    React.useDebugValue(reaction, printDebugValue)\n\n    React.useEffect(() => {\n        // Called on first mount only\n        recordReactionAsCommitted(reactionTrackingRef)\n\n        if (reactionTrackingRef.current) {\n            // Great. We've already got our reaction from our render;\n            // all we need to do is to record that it's now mounted,\n            // to allow future observable changes to trigger re-renders\n            reactionTrackingRef.current.mounted = true\n            // Got a change before first mount, force an update\n            if (reactionTrackingRef.current.changedBeforeMount) {\n                reactionTrackingRef.current.changedBeforeMount = false\n                forceUpdate()\n            }\n        } else {\n            // The reaction we set up in our render has been disposed.\n            // This can be due to bad timings of renderings, e.g. our\n            // component was paused for a _very_ long time, and our\n            // reaction got cleaned up\n\n            // Re-create the reaction\n            reactionTrackingRef.current = {\n                reaction: new Reaction(observerComponentNameFor(baseComponentName), () => {\n                    // We've definitely already been mounted at this point\n                    forceUpdate()\n                }),\n                mounted: true,\n                changedBeforeMount: false,\n                cleanAt: Infinity\n            }\n            forceUpdate()\n        }\n\n        return () => {\n            reactionTrackingRef.current!.reaction.dispose()\n            reactionTrackingRef.current = null\n        }\n    }, [])\n\n    // render the original component, but have the\n    // reaction track the observables, so that rendering\n    // can be invalidated (see above) once a dependency changes\n    let rendering!: T\n    let exception\n    reaction.track(() => {\n        try {\n            rendering = fn()\n        } catch (e) {\n            exception = e\n        }\n    })\n\n    if (exception) {\n        throw exception // re-throw any exceptions caught during rendering\n    }\n\n    return rendering\n}\n","import { forwardRef, memo } from \"react\"\n\nimport { isUsingStaticRendering } from \"./staticRendering\"\nimport { useObserver } from \"./useObserver\"\n\nlet warnObserverOptionsDeprecated = true\n\nconst hasSymbol = typeof Symbol === \"function\" && Symbol.for\n// Using react-is had some issues (and operates on elements, not on types), see #608 / #609\nconst ReactForwardRefSymbol = hasSymbol\n    ? Symbol.for(\"react.forward_ref\")\n    : typeof forwardRef === \"function\" && forwardRef((props: any) => null)[\"$$typeof\"]\n\nconst ReactMemoSymbol = hasSymbol\n    ? Symbol.for(\"react.memo\")\n    : typeof memo === \"function\" && memo((props: any) => null)[\"$$typeof\"]\n\nexport interface IObserverOptions {\n    readonly forwardRef?: boolean\n}\n\nexport function observer<P extends object, TRef = {}>(\n    baseComponent: React.ForwardRefRenderFunction<TRef, P>,\n    options: IObserverOptions & { forwardRef: true }\n): React.MemoExoticComponent<\n    React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>\n>\n\nexport function observer<P extends object, TRef = {}>(\n    baseComponent: React.ForwardRefExoticComponent<\n        React.PropsWithoutRef<P> & React.RefAttributes<TRef>\n    >\n): React.MemoExoticComponent<\n    React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>\n>\n\nexport function observer<P extends object>(\n    baseComponent: React.FunctionComponent<P>,\n    options?: IObserverOptions\n): React.FunctionComponent<P>\n\nexport function observer<\n    C extends React.FunctionComponent<any> | React.ForwardRefRenderFunction<any>,\n    Options extends IObserverOptions\n>(\n    baseComponent: C,\n    options?: Options\n): Options extends { forwardRef: true }\n    ? C extends React.ForwardRefRenderFunction<infer TRef, infer P>\n        ? C &\n              React.MemoExoticComponent<\n                  React.ForwardRefExoticComponent<\n                      React.PropsWithoutRef<P> & React.RefAttributes<TRef>\n                  >\n              >\n        : never /* forwardRef set for a non forwarding component */\n    : C & { displayName: string }\n\n// n.b. base case is not used for actual typings or exported in the typing files\nexport function observer<P extends object, TRef = {}>(\n    baseComponent:\n        | React.ForwardRefRenderFunction<TRef, P>\n        | React.FunctionComponent<P>\n        | React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>,\n    // TODO remove in next major\n    options?: IObserverOptions\n) {\n    if (process.env.NODE_ENV !== \"production\" && warnObserverOptionsDeprecated && options) {\n        warnObserverOptionsDeprecated = false\n        console.warn(\n            `[mobx-react-lite] \\`observer(fn, { forwardRef: true })\\` is deprecated, use \\`observer(React.forwardRef(fn))\\``\n        )\n    }\n\n    if (ReactMemoSymbol && baseComponent[\"$$typeof\"] === ReactMemoSymbol) {\n        throw new Error(\n            `[mobx-react-lite] You are trying to use \\`observer\\` on a function component wrapped in either another \\`observer\\` or \\`React.memo\\`. The observer already applies 'React.memo' for you.`\n        )\n    }\n\n    // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307\n    if (isUsingStaticRendering()) {\n        return baseComponent\n    }\n\n    let useForwardRef = options?.forwardRef ?? false\n    let render = baseComponent\n\n    const baseComponentName = baseComponent.displayName || baseComponent.name\n\n    // If already wrapped with forwardRef, unwrap,\n    // so we can patch render and apply memo\n    if (ReactForwardRefSymbol && baseComponent[\"$$typeof\"] === ReactForwardRefSymbol) {\n        useForwardRef = true\n        render = baseComponent[\"render\"]\n        if (typeof render !== \"function\") {\n            throw new Error(\n                `[mobx-react-lite] \\`render\\` property of ForwardRef was not a function`\n            )\n        }\n    }\n\n    let observerComponent = (props: any, ref: React.Ref<TRef>) => {\n        return useObserver(() => render(props, ref), baseComponentName)\n    }\n\n    // Don't set `displayName` for anonymous components,\n    // so the `displayName` can be customized by user, see #3192.\n    if (baseComponentName !== \"\") {\n        ;(observerComponent as React.FunctionComponent).displayName = baseComponentName\n    }\n\n    // Support legacy context: `contextTypes` must be applied before `memo`\n    if ((baseComponent as any).contextTypes) {\n        ;(observerComponent as React.FunctionComponent).contextTypes = (\n            baseComponent as any\n        ).contextTypes\n    }\n\n    if (useForwardRef) {\n        // `forwardRef` must be applied prior `memo`\n        // `forwardRef(observer(cmp))` throws:\n        // \"forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))\"\n        observerComponent = forwardRef(observerComponent)\n    }\n\n    // memo; we are not interested in deep updates\n    // in props; we assume that if deep objects are changed,\n    // this is in observables, which would have been tracked anyway\n    observerComponent = memo(observerComponent)\n\n    copyStaticProperties(baseComponent, observerComponent)\n\n    if (\"production\" !== process.env.NODE_ENV) {\n        Object.defineProperty(observerComponent, \"contextTypes\", {\n            set() {\n                throw new Error(\n                    `[mobx-react-lite] \\`${\n                        this.displayName || this.type?.displayName || \"Component\"\n                    }.contextTypes\\` must be set before applying \\`observer\\`.`\n                )\n            }\n        })\n    }\n\n    return observerComponent\n}\n\n// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\nconst hoistBlackList: any = {\n    $$typeof: true,\n    render: true,\n    compare: true,\n    type: true,\n    // Don't redefine `displayName`,\n    // it's defined as getter-setter pair on `memo` (see #3192).\n    displayName: true\n}\n\nfunction copyStaticProperties(base: any, target: any) {\n    Object.keys(base).forEach(key => {\n        if (!hoistBlackList[key]) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key)!)\n        }\n    })\n}\n","import { useObserver } from \"./useObserver\"\n\ninterface IObserverProps {\n    children?(): React.ReactElement | null\n    render?(): React.ReactElement | null\n}\n\nfunction ObserverComponent({ children, render }: IObserverProps) {\n    const component = children || render\n    if (typeof component !== \"function\") {\n        return null\n    }\n    return useObserver(component)\n}\nif (\"production\" !== process.env.NODE_ENV) {\n    ObserverComponent.propTypes = {\n        children: ObserverPropsCheck,\n        render: ObserverPropsCheck\n    }\n}\nObserverComponent.displayName = \"Observer\"\n\nexport { ObserverComponent as Observer }\n\nfunction ObserverPropsCheck(\n    props: { [k: string]: any },\n    key: string,\n    componentName: string,\n    location: any,\n    propFullName: string\n) {\n    const extraKey = key === \"children\" ? \"render\" : \"children\"\n    const hasProp = typeof props[key] === \"function\"\n    const hasExtraProp = typeof props[extraKey] === \"function\"\n    if (hasProp && hasExtraProp) {\n        return new Error(\n            \"MobX Observer: Do not use children and render in the same time in`\" + componentName\n        )\n    }\n\n    if (hasProp || hasExtraProp) {\n        return null\n    }\n    return new Error(\n        \"Invalid prop `\" +\n            propFullName +\n            \"` of type `\" +\n            typeof props[key] +\n            \"` supplied to\" +\n            \" `\" +\n            componentName +\n            \"`, expected `function`.\"\n    )\n}\n","import \"./utils/assertEnvironment\"\n\nimport { unstable_batchedUpdates as batch } from \"./utils/reactBatchedUpdates\"\nimport { observerBatching } from \"./utils/observerBatching\"\nimport { useDeprecated } from \"./utils/utils\"\nimport { useObserver as useObserverOriginal } from \"./useObserver\"\nimport { enableStaticRendering } from \"./staticRendering\"\n\nobserverBatching(batch)\n\nexport { isUsingStaticRendering, enableStaticRendering } from \"./staticRendering\"\nexport { observer, IObserverOptions } from \"./observer\"\nexport { Observer } from \"./ObserverComponent\"\nexport { useLocalObservable } from \"./useLocalObservable\"\nexport { useLocalStore } from \"./useLocalStore\"\nexport { useAsObservableSource } from \"./useAsObservableSource\"\nexport { resetCleanupScheduleForTests as clearTimers } from \"./utils/reactionCleanupTracking\"\n\nexport function useObserver<T>(fn: () => T, baseComponentName: string = \"observed\"): T {\n    if (\"production\" !== process.env.NODE_ENV) {\n        useDeprecated(\n            \"[mobx-react-lite] 'useObserver(fn)' is deprecated. Use `<Observer>{fn}</Observer>` instead, or wrap the entire component in `observer`.\"\n        )\n    }\n    return useObserverOriginal(fn, baseComponentName)\n}\n\nexport { isObserverBatched, observerBatching } from \"./utils/observerBatching\"\n\nexport function useStaticRendering(enable: boolean) {\n    if (\"production\" !== process.env.NODE_ENV) {\n        console.warn(\n            \"[mobx-react-lite] 'useStaticRendering' is deprecated, use 'enableStaticRendering' instead\"\n        )\n    }\n    enableStaticRendering(enable)\n}\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon28Smiles2Outline\", \"smiles_2_outline_28\", \"0 0 28 28\", '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 28 28\" id=\"smiles_2_outline_28\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10 7a7 7 0 1 0 0 14 7 7 0 0 0 0-14zm7.5 11.975a4.99 4.99 0 0 0 4.249-1.668 1 1 0 1 0-1.499-1.323 2.993 2.993 0 0 1-1.747.974A8.987 8.987 0 0 0 19 14a8.978 8.978 0 0 0-3.002-6.71 7 7 0 1 1 0 13.42 9.05 9.05 0 0 0 1.503-1.735zm-3.5 3.09A9 9 0 1 1 10 5a8.946 8.946 0 0 1 4 .935 9 9 0 1 1 0 16.129zm-7.662-6.169a1 1 0 0 1 1.412.088A2.99 2.99 0 0 0 10 17c.896 0 1.7-.391 2.25-1.016a1 1 0 1 1 1.5 1.324A4.99 4.99 0 0 1 10 19a4.99 4.99 0 0 1-3.75-1.692 1 1 0 0 1 .088-1.412zM6.75 11a1.25 1.25 0 1 0 0 2.5 1.25 1.25 0 0 0 0-2.5zM12 12.25a1.25 1.25 0 1 1 2.5 0 1.25 1.25 0 0 1-2.5 0zm8 0a1.25 1.25 0 1 1 2.5 0 1.25 1.25 0 0 1-2.5 0z\" fill=\"currentColor\" /></symbol>', 28, 28);\n","import { Text } from \"@vkontakte/vkui\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport State from \"../../store/State\";\r\nimport { modals } from \"../../types/enums\";\r\n\r\nexport enum ReportInfoType {\r\n  comment = 'comment',\r\n  meme = 'meme',\r\n  user = 'user'\r\n}\r\n\r\nexport const ReportInfo = observer(({ reports, type }: { reports: Istrikes, type: ReportInfoType }) => {\r\n  let styles\r\n\r\n  if (type === ReportInfoType.meme) {\r\n    styles = { cursor: 'pointer', marginLeft: '10px', color: 'red' }\r\n  } else if (type === ReportInfoType.comment) {\r\n    styles = { cursor: 'pointer', width: '120px', color: 'red', marginLeft: 'auto' }\r\n  } else if (type === ReportInfoType.user) {\r\n    styles = { cursor: 'pointer', color: 'red' }\r\n  }\r\n\r\n  const reportsCount: any = Object.values(reports).reduce((cur: number, acc: number) => cur + acc, 0)\r\n  const onClick = (e: React.MouseEvent<HTMLElement>) => {\r\n    State.setReportInfo(reports);\r\n    State.setActiveModal(modals.REPORTINFO);\r\n    e.stopPropagation()\r\n  }\r\n  return (\r\n    <>\r\n      {State.isAdmin() ?\r\n        <Text weight='2' style={styles} onClick={(e) => onClick(e)}>\r\n          Жалобы - {reportsCount}\r\n        </Text>\r\n        : null}\r\n    </>\r\n  )\r\n});\r\n\r\nexport default ReportInfo\r\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon28CupOutline\", \"cup_outline_28\", \"0 0 28 28\", '<symbol fill=\"none\" viewBox=\"0 0 28 28\" xmlns=\"http://www.w3.org/2000/svg\" id=\"cup_outline_28\"><path clip-rule=\"evenodd\" d=\"M17.043 2h-6.086c-.66 0-1.22 0-1.684.042-.49.044-.954.141-1.397.382a3.63 3.63 0 0 0-1.54 1.68c-.26.599-.29 1.232-.249 1.953a3.755 3.755 0 0 0-1.848.142C3.045 6.607 2 7.674 2 9.333c0 1.568.935 2.993 2.15 3.984a7.547 7.547 0 0 0 3.754 1.629c.17.402.351.785.545 1.147.72 1.345 1.645 2.452 2.785 3.14-.033.553-.114.93-.204 1.195-.111.327-.25.518-.4.685-.062.069-.114.123-.18.19l-.117.12a3.586 3.586 0 0 0-.385.46c-.288.421-.448.917-.448 1.567V25a1 1 0 0 0 1 1h7a1 1 0 0 0 1-1v-1.55c0-.65-.16-1.146-.448-1.567a3.578 3.578 0 0 0-.385-.46 14.49 14.49 0 0 0-.117-.12 5.319 5.319 0 0 1-.18-.19 1.847 1.847 0 0 1-.4-.685c-.09-.264-.171-.642-.204-1.195 1.14-.688 2.065-1.795 2.785-3.14.194-.362.375-.745.545-1.147a7.548 7.548 0 0 0 3.755-1.63C25.065 12.327 26 10.902 26 9.334c0-1.659-1.045-2.726-2.24-3.134a3.755 3.755 0 0 0-1.848-.142c.041-.72.013-1.354-.248-1.954a3.631 3.631 0 0 0-1.54-1.68c-.444-.24-.906-.337-1.397-.381C18.263 2 17.703 2 17.043 2zm-2.22 17.939a5.495 5.495 0 0 1-1.647 0 5.774 5.774 0 0 1-.253 1.135 3.84 3.84 0 0 1-.803 1.373c-.093.104-.197.21-.276.29a9.65 9.65 0 0 0-.07.073 1.658 1.658 0 0 0-.175.203c-.04.059-.099.153-.099.437V24h5v-.55c0-.284-.059-.378-.099-.437a1.65 1.65 0 0 0-.197-.226 13.36 13.36 0 0 0-.048-.05c-.079-.08-.183-.186-.276-.29a3.841 3.841 0 0 1-.803-1.373 5.773 5.773 0 0 1-.253-1.135zm7.764-8.172c-.502.409-1.094.74-1.725.955.377-1.351.657-2.843.845-4.432.25-.25.82-.398 1.407-.198.515.176.886.567.886 1.241 0 .766-.482 1.674-1.413 2.434zm-15.449.955c-.377-1.351-.657-2.843-.845-4.432-.25-.25-.82-.398-1.407-.198C4.37 8.268 4 8.66 4 9.333c0 .766.482 1.674 1.413 2.434.502.409 1.094.74 1.725.955zm1.692-8.54c.114-.062.278-.117.623-.148C9.816 4 10.285 4 11 4h6c.714 0 1.184.001 1.547.034.345.031.509.086.623.148.268.145.538.44.66.72.129.295.128.63.008 2.007-.298 3.431-1.001 6.28-2.05 8.24C16.744 17.098 15.463 18 14 18c-1.463 0-2.744-.901-3.788-2.852-1.05-1.958-1.752-4.808-2.05-8.239-.12-1.377-.12-1.712.008-2.008.122-.28.392-.574.66-.72z\" fill=\"currentColor\" fill-rule=\"evenodd\" /></symbol>', 28, 28);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon28UserCircleOutline\", \"user_circle_outline_28\", \"0 0 28 28\", '<symbol viewBox=\"0 0 28 28\" xmlns=\"http://www.w3.org/2000/svg\" id=\"user_circle_outline_28\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h28v28H0z\" /><path d=\"M14 2c6.627 0 12 5.373 12 12s-5.373 12-12 12S2 20.627 2 14 7.373 2 14 2Zm0 18.5c-2.086 0-4.08.582-5.797 1.649A9.952 9.952 0 0 0 14 24c2.16 0 4.161-.685 5.796-1.85A10.94 10.94 0 0 0 14 20.5ZM14 4C8.477 4 4 8.477 4 14a9.964 9.964 0 0 0 2.648 6.779A12.934 12.934 0 0 1 14 18.5c2.67 0 5.215.808 7.353 2.277A9.962 9.962 0 0 0 24 14c0-5.523-4.477-10-10-10Zm0 3.5a4.749 4.749 0 0 1 4.75 4.75A4.749 4.749 0 0 1 14 17a4.749 4.749 0 0 1-4.75-4.75A4.749 4.749 0 0 1 14 7.5Zm0 2c-1.52 0-2.75 1.23-2.75 2.75S12.48 15 14 15s2.75-1.23 2.75-2.75S15.52 9.5 14 9.5Z\" fill=\"currentColor\" fill-rule=\"nonzero\" /></g></symbol>', 28, 28);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon28CrownOutline\", \"crown_outline_28\", \"0 0 28 28\", '<symbol xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 28 28\" id=\"crown_outline_28\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M16.734 5.77c-1.064-2.352-4.404-2.352-5.468 0L9.535 9.6 6.481 7.915c-2.323-1.282-5.045.86-4.344 3.42L4 18.133v1.704c0 .528 0 .982.03 1.357.033.395.104.789.297 1.167a3 3 0 0 0 1.311 1.311c.378.193.772.264 1.167.296.375.031.83.031 1.357.031h11.676c.528 0 .982 0 1.357-.03.395-.033.789-.104 1.167-.297a3 3 0 0 0 1.311-1.311c.193-.378.264-.772.296-1.167.031-.375.031-.83.031-1.356v-1.704l1.863-6.802c.7-2.559-2.02-4.701-4.343-3.419l-3.055 1.687-1.731-3.83ZM22 19H6v.8c0 .577 0 .949.024 1.232.022.272.06.372.085.422a1 1 0 0 0 .437.437c.05.025.15.063.422.085C7.25 22 7.623 22 8.2 22h11.6c.577 0 .949 0 1.232-.024.272-.022.372-.06.422-.085a1 1 0 0 0 .437-.437c.025-.05.063-.15.085-.422C22 20.75 22 20.377 22 19.8V19ZM13.089 6.594c.354-.784 1.468-.784 1.822 0l2.178 4.818a1 1 0 0 0 1.394.463l4.003-2.21c.774-.427 1.682.287 1.448 1.14L22.237 17H5.763l-1.697-6.195c-.234-.853.674-1.567 1.448-1.14l4.003 2.21a1 1 0 0 0 1.394-.463l2.178-4.818Z\" clip-rule=\"evenodd\" /></symbol>', 28, 28);\n","import { makeAutoObservable } from 'mobx';\r\n\r\nclass Session {\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  private _memesNotif: boolean = true;\r\n\r\n  public getMemesNotif(): boolean {\r\n    return this._memesNotif;\r\n  }\r\n\r\n  public clearMemesNotif(): void {\r\n    this._memesNotif = false;\r\n  }\r\n}\r\n\r\nexport default new Session();","import {\r\n  Tabbar,\r\n  TabbarItem,\r\n  FixedLayout,\r\n  Counter\r\n} from '@vkontakte/vkui';\r\nimport {\r\n  Icon28Smiles2Outline,\r\n  Icon28UserCircleOutline,\r\n  Icon28CupOutline,\r\n  Icon28CrownOutline\r\n} from '@vkontakte/icons';\r\nimport State from '../../store/State';\r\nimport { routes } from '../../types/enums';\r\nimport User from '../../store/User';\r\nimport { observer } from 'mobx-react-lite';\r\nimport Session from '../../store/Session';\r\n\r\nexport default observer((): JSX.Element => (\r\n  <>\r\n    <div style={{ height: '50px' }} />\r\n    <FixedLayout vertical='bottom'>\r\n      <Tabbar style={{ position: 'static', margin: '10px 0', marginBottom: '10px' }} shadow={false}>\r\n        <TabbarItem\r\n          style={{ cursor: 'pointer' }}\r\n          selected={State.getTab() === routes.HOME}\r\n          onClick={() => State.goToPage(routes.HOME)}\r\n          text='Мемы'\r\n        ><Icon28Smiles2Outline /></TabbarItem>\r\n        <TabbarItem\r\n          style={{ cursor: 'pointer' }}\r\n          selected={State.getTab() === routes.RATING}\r\n          onClick={() => State.goToPage(routes.RATING)}\r\n          text='Рейтинг'\r\n        ><Icon28CupOutline /></TabbarItem>\r\n        <TabbarItem\r\n          style={{ cursor: 'pointer' }}\r\n          selected={State.getTab() === routes.MYPROFILE}\r\n          indicator={Session.getMemesNotif() && User.getMemes() > 0 && <Counter size='s' mode='prominent'>{User.getMemes()}</Counter>}\r\n          onClick={() => State.goToPage(routes.MYPROFILE)}\r\n          text='Профиль'\r\n        ><Icon28UserCircleOutline /></TabbarItem>\r\n        {State.isAdmin() &&\r\n          <TabbarItem\r\n            style={{ cursor: 'pointer' }}\r\n            selected={State.getTab() === routes.ADMIN}\r\n            onClick={() => State.goToPage(routes.ADMIN)}\r\n            text='Админ'\r\n          ><Icon28CrownOutline /></TabbarItem>\r\n        }\r\n      </Tabbar>\r\n    </FixedLayout>\r\n  </>\r\n));","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon28MoreHorizontal\", \"more_horizontal_28\", \"0 0 28 28\", '<symbol xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\" viewBox=\"0 0 28 28\" id=\"more_horizontal_28\"><path d=\"M8.5 14a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0Zm8 0a2.5 2.5 0 1 1-5 0 2.5 2.5 0 0 1 5 0Zm5.5 2.5a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5Z\" /></symbol>', 28, 28);\n","import { ActionSheet, ActionSheetItem, Alert, usePlatform } from \"@vkontakte/vkui\";\r\nimport Actions from \"../../store/Actions\";\r\nimport State from \"../../store/State\";\r\nimport User from \"../../store/User\";\r\nimport { modals, popouts } from \"../../types/enums\";\r\nimport { useCallback, useEffect } from 'react';\r\n\r\ninterface ImoreProps {\r\n  refMore: React.MutableRefObject<HTMLDivElement>\r\n  data: Imeme | Icomment\r\n}\r\n\r\nconst deleteAlert = (data: Imeme): JSX.Element => {\r\n  return (<Alert\r\n    actions={[\r\n      {\r\n        title: 'Отмена',\r\n        autoclose: true,\r\n        mode: 'cancel',\r\n      },\r\n      {\r\n        title: 'Удалить',\r\n        autoclose: true,\r\n        mode: 'destructive',\r\n        action: () => Actions.deleteMeme(data),\r\n      },\r\n    ]}\r\n    actionsLayout=\"horizontal\"\r\n    onClose={() => { State.setPopout(null) }}\r\n    header=\"Удаление записи\"\r\n    text=\"Вы уверены, что хотите удалить эту запись?\"\r\n  />\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\nexport const More = ({ refMore, data }: ImoreProps): JSX.Element => {\r\n\r\n  const platform = usePlatform()\r\n\r\n  const onDelete = useCallback(() => {\r\n    if ('message' in data) {\r\n      Actions.deleteComment(data)\r\n    } else if ('vk_url' in data) {\r\n      State.setPopout(deleteAlert(data), popouts.ALERT)\r\n    }\r\n  }, [data])\r\n\r\n  const onReport = useCallback(() => {\r\n    if ('message' in data) {\r\n      State.setReportComment(data);\r\n    } else if ('vk_url' in data) {\r\n      State.setReportMeme(data)\r\n    }\r\n    State.setActiveModal(modals.REPORT)\r\n  }, [data])\r\n\r\n  const onClose = useCallback(() => {\r\n    State.setPopout(null)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (platform === 'vkcom') {\r\n      window.addEventListener('scroll', onClose)\r\n    }\r\n\r\n    return () => {\r\n      if (platform === 'vkcom') {\r\n        window.removeEventListener('scroll', onClose)\r\n      }\r\n    }\r\n  }, [onClose, platform])\r\n\r\n  return (\r\n    <ActionSheet toggleRef={refMore} onClose={onClose}>\r\n      {data.user_id === User.getUser().id || State.isAdmin() ?\r\n        <ActionSheetItem autoclose mode=\"destructive\" onClick={onDelete}>\r\n          Удалить запись\r\n        </ActionSheetItem>\r\n        : null}\r\n      {data.user_id !== User.getUser().id ?\r\n        <ActionSheetItem autoclose onClick={onReport}>\r\n          Пожаловаться\r\n        </ActionSheetItem>\r\n        : null}\r\n    </ActionSheet>\r\n  );\r\n}","import { Button } from \"@vkontakte/vkui\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport '../../css/memes.css'\r\nimport Actions from \"../../store/Actions\";\r\nimport State from \"../../store/State\";\r\nimport { routes } from \"../../types/enums\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport { useMemo } from 'react';\r\n\r\ninterface IstatusBlockProps {\r\n  data: Imeme\r\n}\r\n\r\nconst moderation = async (meme: number, decision: boolean): Promise<void> => {\r\n  const moderation = await Actions.sendRequest('moderation', {\r\n    decision: decision,\r\n    meme: meme\r\n  }).then(res => res);\r\n\r\n  if (decision) {\r\n    const wall = await bridge.send('VKWebAppCallAPIMethod', {\r\n      method: 'wall.post', params: {\r\n        owner_id: -Number(process.env.REACT_APP_GROUP),\r\n        v: '5.131',\r\n        from_group: 1,\r\n        attachments: moderation.data.attachments,\r\n        close_comments: 0,\r\n        access_token: moderation.data.access_token,\r\n      }\r\n    }).then(res => res);\r\n\r\n    await Actions.sendRequest('updateAttachments', { post_id: wall.response.post_id, meme: meme });\r\n  }\r\n  State.markModeration();\r\n}\r\n\r\nexport const StatusBlock = observer(({data}: IstatusBlockProps): JSX.Element => {\r\n\r\n  const component = useMemo(() => {\r\n    if (data.status === 0 && State.getActivePanel() === routes.ADMIN) {\r\n      return (\r\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n          <Button size='l' onClick={() => moderation(data.id, true)} stretched>Принять</Button>\r\n          <Button size='l' onClick={() => moderation(data.id, false)} stretched mode='secondary'>Отклонить</Button>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    if (data.status === 2) {\r\n      return (<div className='rejection'>Отклонён</div>)\r\n    }\r\n\r\n    if (data.status === 0 && State.getActivePanel() !== routes.ADMIN) {\r\n      return (<div className='rejection in-moderation'>На модерации</div>)\r\n    }\r\n\r\n    return null\r\n  }, [data.id, data.status])\r\n\r\n  return component\r\n});\r\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon28ShareOutline\", \"share_outline_28\", \"0 0 28 28\", '<symbol fill=\"none\" viewBox=\"0 0 28 28\" xmlns=\"http://www.w3.org/2000/svg\" id=\"share_outline_28\"><path clip-rule=\"evenodd\" d=\"M13.476 6.513c0-.442.485-.651.797-.406l9.532 7.483a.52.52 0 0 1 0 .812l-9.532 7.484a.495.495 0 0 1-.797-.406v-4.485a1 1 0 0 0-1-1c-3.565 0-6.252 1.449-8.26 3.267.362-2.161 1.153-3.807 2.225-5.046 1.497-1.73 3.637-2.78 6.22-3.264a1 1 0 0 0 .815-.983zm2.032-1.979c-1.654-1.298-4.032-.093-4.032 1.979V9.16c-2.565.61-4.854 1.79-6.548 3.749C3.051 15.079 2 18.093 2 22.05a1 1 0 0 0 1.788.616c1.741-2.226 4.175-4.292 7.688-4.625v3.438c0 2.072 2.378 3.277 4.032 1.978l9.532-7.483a2.518 2.518 0 0 0 0-3.957z\" fill=\"currentColor\" fill-rule=\"evenodd\" /></symbol>', 28, 28);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon28StoryOutline\", \"story_outline_28\", \"0 0 28 28\", '<symbol viewBox=\"0 0 28 28\" xmlns=\"http://www.w3.org/2000/svg\" id=\"story_outline_28\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h28v28H0z\" /><path d=\"M17.926 3.002c1.958.02 2.954.231 3.988.784a5.543 5.543 0 0 1 2.3 2.3c.553 1.034.764 2.03.784 3.988v7.852c-.02 1.958-.231 2.954-.784 3.988a5.543 5.543 0 0 1-2.3 2.3c-1.034.553-2.03.764-3.988.784h-7.852c-1.958-.02-2.954-.231-3.988-.784a5.543 5.543 0 0 1-2.3-2.3c-.553-1.034-.764-2.03-.784-3.988v-7.852c.02-1.958.231-2.954.784-3.988a5.543 5.543 0 0 1 2.3-2.3c1.034-.553 2.03-.764 3.988-.784h7.852ZM17.59 5h-7.18l-.558.005c-1.479.028-2.141.18-2.823.545-.64.342-1.137.839-1.48 1.48-.364.68-.516 1.343-.544 2.822L5 10.41v7.18l.005.558c.028 1.479.18 2.141.545 2.823.342.64.839 1.137 1.48 1.48.68.364 1.343.516 2.822.544l.558.005h7.18l.558-.005c1.479-.028 2.141-.18 2.823-.545a3.543 3.543 0 0 0 1.48-1.48c.364-.68.516-1.343.544-2.822L23 17.59v-7.18l-.005-.558c-.028-1.479-.18-2.141-.545-2.823a3.543 3.543 0 0 0-1.48-1.48c-.68-.364-1.343-.516-2.822-.544L17.59 5ZM14 8.75a5.25 5.25 0 1 1 0 10.5 5.25 5.25 0 0 1 0-10.5Zm0 2a3.25 3.25 0 1 0 0 6.5 3.25 3.25 0 0 0 0-6.5Z\" fill=\"currentColor\" fill-rule=\"nonzero\" /></g></symbol>', 28, 28);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon28LikeFillRed\", \"like_fill_red_28\", \"0 0 28 28\", '<symbol fill=\"none\" viewBox=\"0 0 28 28\" xmlns=\"http://www.w3.org/2000/svg\" id=\"like_fill_red_28\"><path d=\"M9.026 4.88A6.526 6.526 0 0 0 2.5 11.406c0 3.613 1.445 5.421 7.493 10.126l2.78 2.16a2 2 0 0 0 2.455 0l2.779-2.16c6.048-4.705 7.493-6.513 7.493-10.126a6.526 6.526 0 0 0-6.526-6.526c-1.872 0-3.538.85-4.974 2.487C12.564 5.73 10.898 4.88 9.026 4.88z\" fill=\"#ff3347\" /></symbol>', 28, 28);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon28LikeOutline\", \"like_outline_28\", \"0 0 28 28\", '<symbol viewBox=\"0 0 28 28\" xmlns=\"http://www.w3.org/2000/svg\" id=\"like_outline_28\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h28v28H0z\" /><path d=\"M9.026 4.88A6.526 6.526 0 0 0 2.5 11.406c0 3.613 1.445 5.421 7.493 10.126l2.78 2.16a2 2 0 0 0 2.455 0l2.779-2.16c6.048-4.705 7.493-6.513 7.493-10.126a6.526 6.526 0 0 0-6.526-6.526c-1.872 0-3.538.85-4.974 2.487C12.564 5.73 10.898 4.88 9.026 4.88Zm0 2c1.52 0 2.889.858 4.152 2.683l.205.298a.75.75 0 0 0 1.234 0l.205-.298c1.263-1.825 2.633-2.683 4.152-2.683 2.5 0 4.526 2.027 4.526 4.526 0 2.78-1.137 4.204-6.721 8.547L14 22.114l-2.779-2.161C5.637 15.61 4.5 14.187 4.5 11.406c0-2.5 2.027-4.526 4.526-4.526Z\" fill=\"currentColor\" fill-rule=\"nonzero\" /></g></symbol>', 28, 28);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon28CommentOutline\", \"comment_outline_28\", \"0 0 28 28\", '<symbol viewBox=\"0 0 28 28\" xmlns=\"http://www.w3.org/2000/svg\" id=\"comment_outline_28\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h28v28H0z\" /><path d=\"M16.06 20.354c.298-.26.68-.404 1.076-.404h4.447c1.17 0 1.867-.697 1.867-1.867V8.75c0-1.17-.697-1.867-1.867-1.867h-14c-1.17 0-1.866.697-1.866 1.867v9.333c0 1.17.696 1.867 1.866 1.867H10.5c.816.235.816.235 1.051 1.051v3.3l4.51-3.947Zm-5.752 5.934c-.551-.413-.858-1.142-.858-1.788v-2.45H7.583c-2.33 0-3.966-1.637-3.966-3.967V8.75c0-2.33 1.636-3.967 3.966-3.967h14c2.33 0 3.967 1.637 3.967 3.967v9.333c0 2.33-1.637 3.967-3.967 3.967h-4.272l-4.345 3.802c-.855.839-1.854 1.04-2.659.436Z\" fill=\"currentColor\" fill-rule=\"nonzero\" /></g></symbol>', 28, 28);\n","import {\r\n  Icon28CommentOutline,\r\n  Icon28LikeFillRed,\r\n  Icon28LikeOutline,\r\n  Icon28ShareOutline,\r\n  Icon28StoryOutline\r\n} from \"@vkontakte/icons\";\r\nimport {\r\n  ActionSheet,\r\n  ActionSheetDefaultIosCloseItem,\r\n  ActionSheetItem,\r\n  Alert,\r\n  Text\r\n} from \"@vkontakte/vkui\";\r\nimport Actions from \"../../store/Actions\";\r\nimport State from \"../../store/State\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport { useCallback, useRef } from 'react';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { popouts } from \"../../types/enums\";\r\n\r\ninterface ImemeButtonsProps {\r\n  data: Imeme\r\n}\r\n\r\nconst sendOpinion = (meme: Imeme): void => {\r\n  Actions.sendRequest('like', { meme: meme.id, opinion: !meme.opinion });\r\n  State.memeOpinion(meme.id);\r\n}\r\n\r\nconst toStories = (meme: Imeme): void => {\r\n  const attachments = meme.attachments.split(/[-_]+/g)\r\n  const url = meme.url !== '' ? process.env.REACT_APP_API + '/uploads/' + meme.url : meme.vk_url;\r\n  bridge.send('VKWebAppShowStoryBox', {\r\n    background_type: 'image',\r\n    url: url,\r\n    attachment: {\r\n      text: 'open',\r\n      type: 'url',\r\n      url: 'https://vk.com/app' + process.env.REACT_APP_ID,\r\n      owner_id: Number(attachments[1]),\r\n      id: Number(attachments[2])\r\n    },\r\n  })\r\n}\r\n\r\nconst share = (ref: React.MutableRefObject<HTMLDivElement>, data: Imeme): JSX.Element => {\r\n  return (\r\n    <ActionSheet\r\n      toggleRef={ref}\r\n      onClose={() => State.setPopout(null)}\r\n      iosCloseItem={<ActionSheetDefaultIosCloseItem />}\r\n    >\r\n      <ActionSheetItem onClick={() => toWall(data)} autoclose before={<Icon28ShareOutline />}>\r\n        Поделиться на стене\r\n      </ActionSheetItem>\r\n      <ActionSheetItem onClick={() => toStories(data)} autoclose before={<Icon28StoryOutline />}>\r\n        Поделиться в истории\r\n      </ActionSheetItem>\r\n    </ActionSheet>\r\n  );\r\n}\r\n\r\nconst toWall = (data: Imeme): void => {\r\n  const message = 'Хочешь ржачных приколов?😜\\nЗаходи на фабрику мемов! С каждым лайком и репостом где-то улыбается наш админ😉\\n#мемы #приколы #ФабрикаМемов';\r\n  bridge.send('VKWebAppShowWallPostBox', {\r\n    message: message,\r\n    attachments: data.attachments + ',https://vk.com/app' + process.env.REACT_APP_ID\r\n  }).then(res => {\r\n    if (Number(res.post_id) > 0) {\r\n      Actions.sendRequest('share', { meme: data.id });\r\n      State.memeShare(data.id);\r\n      State.setPopout(<Alert\r\n        actions={[{\r\n          title: 'Понятно',\r\n          autoclose: true,\r\n          mode: 'cancel'\r\n        }]}\r\n        onClose={() => State.setPopout(null)}\r\n      >\r\n        <p>Пост был успешно опубликован на вашу страницу</p>\r\n      </Alert>, popouts.ALERT)\r\n    }\r\n  });\r\n}\r\n\r\nexport const MemeButtons = observer(({ data }: ImemeButtonsProps): JSX.Element => {\r\n\r\n  const like = data.opinion ? <Icon28LikeFillRed /> : <Icon28LikeOutline />;\r\n\r\n  const onShareClick = useCallback((ref: React.MutableRefObject<HTMLDivElement>, data: Imeme) => {\r\n    if (State.getStories() || State.isDev()) {\r\n      State.setPopout(share(ref, data), popouts.ACTION)\r\n    } else {\r\n      toWall(data)\r\n    }\r\n  }, [])\r\n\r\n  const refShare: React.MutableRefObject<HTMLDivElement> = useRef();\r\n\r\n  if (data.status === 1) {\r\n    return (<div className='meme-buttons'>\r\n      <div className='like' onClick={() => sendOpinion(data)}>\r\n        {like}\r\n        <Text weight='2' className='buttons-text'>\r\n          {data.likes}\r\n        </Text>\r\n      </div>\r\n      <div className='comments' onClick={() => { State.setMemeOpen(data.id); State.setPopout(null, popouts.COMMENTS) }}>\r\n        <Icon28CommentOutline />\r\n        <Text weight='2' className='buttons-text'>\r\n          {data.comments}\r\n        </Text>\r\n      </div>\r\n      <div className='share' onClick={() => onShareClick(refShare, data)}>\r\n        <Icon28ShareOutline getRootRef={refShare} />\r\n        <Text weight='2' className='buttons-text'>\r\n          {data.share}\r\n        </Text>\r\n      </div>\r\n    </div>)\r\n  }\r\n  return null\r\n\r\n});\r\n","import {\r\n  Card,\r\n  Text,\r\n  Spinner,\r\n  SimpleCell,\r\n  Avatar,\r\n  IconButton,\r\n} from '@vkontakte/vkui';\r\nimport '../../css/memes.css';\r\nimport Actions from '../../store/Actions';\r\nimport State from '../../store/State';\r\nimport { useCallback, useRef } from 'react';\r\nimport { Icon28MoreHorizontal } from '@vkontakte/icons';\r\nimport { popouts, routes } from '../../types/enums';\r\nimport ReportInfo, { ReportInfoType } from '../UI/ReportInfo';\r\nimport { More } from '../UI/More';\r\nimport { StatusBlock } from './StatusBlock';\r\nimport { MemeButtons } from './MemeButtons';\r\n\r\n\r\nexport const Meme = ({ data }: { data: Imeme }): JSX.Element => {\r\n\r\n  const url = data.url !== '' ? process.env.REACT_APP_API + '/uploads/' + data.url : data.vk_url;\r\n\r\n  const refMore: React.MutableRefObject<HTMLDivElement> = useRef();\r\n\r\n  const onProfileClick = useCallback(()=>{\r\n    State.goToPage(routes.USERPROFILE); \r\n    Actions.getDataUserProfile(data.user_id);\r\n  }, [data.user_id])\r\n\r\n  return (\r\n    <>\r\n      <SimpleCell\r\n        description={data.time}\r\n        disabled\r\n        before={<Avatar style={{ cursor: 'pointer' }} src={data.avatar} onClick={onProfileClick} />}\r\n        after={\r\n          data.status === 1 || data.status === 2 ?\r\n            <IconButton\r\n              onClick={() => State.setPopout(<More refMore={refMore} data={data}/>, popouts.ACTION)}\r\n            >\r\n              <Icon28MoreHorizontal getRootRef={refMore} />\r\n            </IconButton> : null\r\n        }\r\n      >\r\n        <div style={{ display: 'flex' }}>\r\n          <Text onClick={onProfileClick} style={{ display: 'inline-block', maxWidth: '100%', whiteSpace: 'nowrap', cursor: 'pointer', overflow: 'hidden', textOverflow: 'ellipsis' }}>{data.name}</Text>\r\n          <ReportInfo reports={data.strikes} type={ReportInfoType.meme}/>\r\n        </div>\r\n\r\n      </SimpleCell>\r\n      <Card mode='shadow' className='meme-card'>\r\n        <div id={'meme' + data.id} className='meme'>\r\n          {url ? <img src={url} alt='meme' className='meme-img' /> : <Spinner size='regular' />}\r\n        </div>\r\n        <MemeButtons data={data}/>\r\n        <StatusBlock data={data}/>\r\n      </Card>\r\n    </>\r\n  );\r\n}","import { Icon28MoreHorizontal } from \"@vkontakte/icons\";\r\nimport { Avatar, Div, Link, Separator, Spacing, Subhead, Text, usePlatform } from \"@vkontakte/vkui\"\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useRef, useState, useCallback } from \"react\";\r\nimport Actions from \"../../store/Actions\";\r\nimport State from \"../../store/State\";\r\nimport { popouts, routes } from \"../../types/enums\";\r\nimport { More } from \"../UI/More\";\r\n\r\nimport ReportInfo, { ReportInfoType } from \"../UI/ReportInfo\";\r\n\r\nfunction dateToISOLikeButLocal(date) {\r\n  const offsetMs = date.getTimezoneOffset() * 60 * 1000;\r\n  const msLocal = date.getTime() - offsetMs;\r\n  const dateLocal = new Date(msLocal);\r\n  const iso = dateLocal.toISOString();\r\n  const isoLocal = iso.slice(0, 19);\r\n  const isoLocalString = isoLocal.split('T')[0].replaceAll('-', '.').split('.').reverse().join('.') + ' ' + isoLocal.split('T')[1].slice(0, -3)\r\n  return isoLocalString;\r\n}\r\n\r\nexport const Comment = observer(({ data }: { data: Icomment }) => {\r\n\r\n  const platform = usePlatform()\r\n  const [isExpanded, setIsExpanded] = useState(false);\r\n\r\n  const textLength = data.message.length\r\n\r\n  const toggleText = () => {\r\n    setIsExpanded(prev => !prev);\r\n  };\r\n\r\n  const onProfileClick = useCallback(() => {\r\n    State.goToPage(routes.USERPROFILE);\r\n    Actions.getDataUserProfile(data.user_id);\r\n  }, [data.user_id])\r\n\r\n  const refMore: React.MutableRefObject<HTMLDivElement> = useRef();\r\n  const date = dateToISOLikeButLocal(new Date(data.time))\r\n\r\n  const onMoreClick = useCallback((e: React.MouseEvent<HTMLDivElement>) => {\r\n    e.stopPropagation()\r\n    if (State.getPopout()) {\r\n      State.setPopout(null)\r\n    } else {\r\n      State.setPopout(<More refMore={refMore} data={data} />, popouts.ACTION)\r\n    }\r\n  }, [data])\r\n  return (<>\r\n\r\n    <Div>\r\n      <div className=\"comments-block-comment-info\">\r\n        <div style={{ display: 'flex', width: '70%', gap: '18px', }}>\r\n          <Avatar src={data.avatar} style={{ cursor: 'pointer', display: 'inline-block' }} onClick={onProfileClick} />\r\n          <Text weight='2'\r\n            style=\r\n            {{\r\n              display: 'inline-block',\r\n              width: '82%',\r\n            }}\r\n          >\r\n            <span style={{ maxWidth: '100%', whiteSpace: 'nowrap', cursor: 'pointer', display: 'inline-block', overflow: 'hidden', textOverflow: 'ellipsis' }} onClick={onProfileClick}>\r\n              {data.name}\r\n            </span>\r\n          </Text>\r\n        </div>\r\n\r\n\r\n        <div style={{ display: 'flex', gap: '20px' }}>\r\n          {platform === 'vkcom' ?\r\n            <Subhead\r\n              className=\"comments-block-comment-info-time\"\r\n              weight='3'\r\n              style={{ textAlign: 'right', flexBasis: '100%' }}\r\n            >\r\n              {date}\r\n            </Subhead> : null}\r\n          <Icon28MoreHorizontal\r\n            style={{ flexBasis: '1%', cursor: 'pointer', marginTop: '-5px' }}\r\n            getRootRef={refMore}\r\n            onClick={(e) => onMoreClick(e)}\r\n          />\r\n        </div>\r\n      </div>\r\n      <Text weight='3' className=\"comments-block-comment-info-text\" style={{ overflow: 'hidden', marginLeft: '65px', marginTop: '-25px', width: '80%', wordBreak: 'break-word' }}>\r\n        {textLength > 120 ?\r\n          isExpanded ? data.message : `${data.message.slice(0, 120)}...`\r\n          : data.message}\r\n        {textLength > 120 && !isExpanded ?\r\n          <Link onClick={toggleText}>\r\n            Читать\r\n          </Link> : null\r\n        }\r\n      </Text>\r\n\r\n      {platform !== 'vkcom' ?\r\n        <Subhead\r\n          className=\"comments-block-comment-info-time\"\r\n          weight='3'\r\n          style={{ textAlign: 'right', flexBasis: '100%' }}\r\n        >\r\n          {date}\r\n        </Subhead> : null}\r\n      <ReportInfo reports={data.strikes} type={ReportInfoType.comment} />\r\n    </Div >\r\n    <Spacing size={8} />\r\n    <Separator />\r\n  </>\r\n  )\r\n});","import { Alert, FormItem, FormLayout, IconButton, Input } from \"@vkontakte/vkui\"\r\nimport { useEffect, useState } from \"react\";\r\nimport '../../css/comments.css';\r\nimport Actions from \"../../store/Actions\";\r\nimport State from \"../../store/State\";\r\nimport User from \"../../store/User\";\r\nimport { popouts } from \"../../types/enums\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst reg = /<script(.*?)>(.*?)<\\/script>/mg\r\n\r\nexport const CommentForm = observer(() => {\r\n\r\n  const [comment, setComment] = useState('');\r\n  const [valid, setValid] = useState(true)\r\n\r\n  const opened = State.getMemeOpen()\r\n\r\n  useEffect(() => {\r\n    setComment('')\r\n    setValid(true)\r\n  }, [opened])\r\n\r\n  const onChange = (e: React.FormEvent<HTMLInputElement>) => {\r\n    const { value } = e.currentTarget;\r\n    const isValid = reg.test(value)\r\n    if (isValid) {\r\n      setComment('')\r\n    } else {\r\n      if (value.length > 299) {\r\n        setValid(false)\r\n        State.setPopout(\r\n          <Alert\r\n            actions={[{\r\n              title: 'Понятно',\r\n              autoclose: true,\r\n              mode: 'cancel'\r\n            }]}\r\n            onClose={() => State.setPopout(null)}\r\n          >\r\n            <p>Нельзя оставить комментарий длинной 300 символов и более!</p>\r\n          </Alert>, popouts.ALERT\r\n        )\r\n      } else {\r\n        setComment(value)\r\n        setValid(true)\r\n      }\r\n    }\r\n  };\r\n\r\n  const onClick = (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    if (comment.trim()) {\r\n      Actions.sendComment({ message: comment.trim(), meme: State.getMemeOpen() })\r\n      setComment('')\r\n      setValid(true)\r\n    } else {\r\n      setValid(false)\r\n      State.setPopout(\r\n        <Alert\r\n          actions={[{\r\n            title: 'Понятно',\r\n            autoclose: true,\r\n            mode: 'cancel'\r\n          }]}\r\n          onClose={() => State.setPopout(null)}\r\n        >\r\n          <p>Нельзя отправить пустой комментарий!</p>\r\n        </Alert>, popouts.ALERT\r\n      );\r\n    }\r\n  }\r\n\r\n  return (<>\r\n    <FormLayout onSubmit={(e) => { onClick(e) }}>\r\n      <FormItem>\r\n        <div className=\"comments-block-form\">\r\n          <Input\r\n            className=\"comments-block-textarea\"\r\n            placeholder={User.getBan() ? \"Вы забанены\" : \"Написать комментарий\"}\r\n            onChange={onChange}\r\n            value={comment}\r\n            disabled={User.getBan()}\r\n            status={valid ? 'default' : 'error'}\r\n          />\r\n          <IconButton disabled={!comment} type=\"submit\">\r\n            <div className=\"comments-block-form-btn \" />\r\n          </IconButton>\r\n        </div>\r\n      </FormItem>\r\n    </FormLayout>\r\n  </>\r\n  )\r\n})","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon20AddCircle\", \"add_circle_20\", \"0 0 20 20\", '<symbol fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" id=\"add_circle_20\"><g clip-path=\"url(#add_circle_20_a)\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.071 2.929C13.166-.976 6.834-.976 2.93 2.929c-3.905 3.905-3.905 10.237 0 14.142 3.905 3.905 10.237 3.905 14.142 0 3.905-3.905 3.905-10.237 0-14.142zM5.757 9a1 1 0 1 0 0 2H9v3.243a1 1 0 1 0 2 0V11h3.243a1 1 0 1 0 0-2H11V5.757a1 1 0 1 0-2 0V9H5.757z\" fill=\"currentColor\" /></g><defs><clipPath id=\"add_circle_20_a\"><path fill=\"#fff\" d=\"M0 0h20v20H0z\" /></clipPath></defs></symbol>', 20, 20);\n","import { FixedLayout, PanelHeader, Spacing, usePlatform } from \"@vkontakte/vkui\"\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useEffect } from \"react\";\r\nimport '../../css/comments.css';\r\nimport Actions from \"../../store/Actions\";\r\nimport State from \"../../store/State\";\r\nimport { Comment } from \"./Comment\";\r\nimport { CommentForm } from \"./CommentForm\";\r\nimport { Icon20AddCircle } from '@vkontakte/icons';\r\n\r\n\r\nexport const CommentsBlock = observer(() => {\r\n\r\n  const onClickContent = (e: React.MouseEvent<HTMLElement>) => {\r\n    e.stopPropagation()\r\n  }\r\n\r\n  const platform = usePlatform()\r\n  const active = State.getMemeOpen() > 0\r\n  const reportInfo = State.getReportInfo()\r\n  const reportComment = State.getReportComment()\r\n  const popout = State.getPopout()\r\n\r\n  useEffect(() => {\r\n    if (active) {\r\n      document.body.style.overflowY = 'hidden'\r\n    } else {\r\n      document.body.style.overflowY = 'scroll'\r\n    }\r\n    return () => {\r\n      document.body.style.overflowY = 'scroll'\r\n    }\r\n  }, [active, reportComment, reportInfo, popout])\r\n\r\n  useEffect(() => {\r\n    if (active) {\r\n      Actions.getDataComments(State.getMemeOpen())\r\n    } else {\r\n      State.setComments([])\r\n    }\r\n  }, [active])\r\n\r\n  return (<>\r\n    <div\r\n      className={\"comments-overlay\"}\r\n      style={{ backgroundColor: active ? 'rgb(0,0,0,0.5)' : 'rgb(0,0,0,0)', visibility: active ? 'visible' : 'hidden' }}\r\n      onClick={() => { State.setMemeOpen(-1); State.setPopout(null) }}>\r\n      <div\r\n        className=\"comments-block\"\r\n        style={{ transform: active ? 'translateY(0)' : 'translateY(60vh)'}}\r\n        onClick={(e) => { onClickContent(e); State.setPopout(null) }}\r\n      >\r\n        <div style={{ position: 'relative' }}>\r\n          <Icon20AddCircle fill=\"black\"\r\n            onClick={() => { State.setMemeOpen(-1); State.setPopout(null) }}\r\n            className='comments-block-close-btn'\r\n            style={{ position: 'absolute', right: 30, top: 15, zIndex: 20, cursor: 'pointer', transform: 'rotate(45deg) scale(1.8)', opacity: active ? '0.8' : '0' }}\r\n          />\r\n        </div>\r\n\r\n        <FixedLayout>\r\n          <PanelHeader>Комментарии</PanelHeader>\r\n          <CommentForm />\r\n          <Spacing size={4} />\r\n        </FixedLayout>\r\n        <div style={{ width: '100%', marginTop: '125px' }} />\r\n\r\n        <div\r\n          style={{ overflowY: 'auto', height: '74%', marginBottom: '120px', marginTop: '120px' }}\r\n          onScroll={platform === 'vkcom' ? () => State.setPopout(null) : null}\r\n        >\r\n\r\n          {State.getComments()?.map((comment: Icomment, i: number) => {\r\n            return (\r\n              <Comment\r\n                key={i}\r\n                data={comment}\r\n              />\r\n            )\r\n          })}\r\n\r\n        </div>\r\n      </div >\r\n    </div >\r\n  </>\r\n  )\r\n})","import { useEffect } from 'react';\r\nimport { Spinner, Text } from '@vkontakte/vkui';\r\nimport Actions from '../../store/Actions';\r\nimport { load, memes, routes } from '../../types/enums';\r\nimport { observer } from 'mobx-react-lite';\r\nimport State from '../../store/State';\r\nimport '../../css/memes.css';\r\nimport { Meme } from './Meme';\r\nimport { CommentsBlock } from '../Comments/CommentsBlock';\r\n\r\nconst lazyLoad = (): void => {\r\n  const more = document.querySelector('#more-memes');\r\n\r\n  if (more) {\r\n    const bounds = more.getBoundingClientRect();\r\n    const targetPosition = {\r\n      top: window.pageYOffset + bounds.top,\r\n      left: window.pageXOffset + bounds.left,\r\n      right: window.pageXOffset + bounds.right,\r\n      bottom: window.pageYOffset + bounds.bottom\r\n    }\r\n    const windowPosition = {\r\n      top: window.pageYOffset,\r\n      left: window.pageXOffset,\r\n      right: window.pageXOffset + document.documentElement.clientWidth,\r\n      bottom: window.pageYOffset + document.documentElement.clientHeight\r\n    }\r\n\r\n    if (targetPosition.bottom > windowPosition.top &&\r\n      targetPosition.top < windowPosition.bottom &&\r\n      targetPosition.right > windowPosition.left &&\r\n      targetPosition.left < windowPosition.right) {\r\n      loadMemes();\r\n    }\r\n  }\r\n}\r\n\r\nconst loadMemes = (): void => {\r\n  if (State.getLoadMemes() !== load.LAZY) return;\r\n  State.setLoadMemes(load.LOADING);\r\n  const type = State.getActivePanel() !== routes.ADMIN ? State.getCategory() : 0;\r\n\r\n  let data\r\n  if (State.getActivePanel() === routes.USERMEMES) {\r\n    data = {\r\n      i: State.getMemesIteration(),\r\n      type: type,\r\n      user: State.getUserProfile().id\r\n    }\r\n  } else {\r\n    data = {\r\n      i: State.getMemesIteration(),\r\n      type: type\r\n    }\r\n  }\r\n\r\n  Actions.sendRequest('loadMemes', data).then(res => {\r\n    if (State.getActivePanel() !== routes.ADMIN && type !== State.getCategory()) return;\r\n    State.setMemesIteration(State.getMemesIteration() + 1);\r\n    const loading = res.data.more ? load.LAZY : load.END;\r\n\r\n    if (State.getCategory() === memes.USER) {\r\n      const hasSimilarObjects = State.getMemes().some(obj1 => {\r\n        return res.data.memes.some(obj2 => {\r\n          return obj1.id === obj2.id\r\n        });\r\n      });\r\n      if (!hasSimilarObjects) State.addMemes(res.data.memes);\r\n    } else {\r\n      State.addMemes(res.data.memes);\r\n    }\r\n\r\n    State.setLoadMemes(loading);\r\n  });\r\n}\r\n\r\nexport default observer((): JSX.Element => {\r\n  const category = State.getCategory()\r\n  const moderation = State.getModeration()\r\n\r\n  useEffect((): void => {\r\n    State.setMemesIteration(0);\r\n    State.setMemes([]);\r\n    State.setLoadMemes(load.LAZY);\r\n    window.addEventListener('scroll', (): void => lazyLoad());\r\n    loadMemes();\r\n  }, [category, moderation]);\r\n\r\n  const lazy = State.getLoadMemes() === load.LAZY ? <div id='more-memes'></div> :\r\n    State.getLoadMemes() === load.LOADING ?\r\n      <div style={{ display: 'flex', justifyContent: 'center', marginTop: 10 }}><Spinner size='regular' /></div> :\r\n      State.getMemes().length === 0 ?\r\n        <Text weight='2' style={{ textAlign: 'center', marginTop: '20px' }}>Мемов нет, но вы держитесь</Text>\r\n        : null\r\n\r\n  const memes = State.getMemes().map(data => {\r\n    return (\r\n      <Meme key={data.id} data={data} />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      {memes}\r\n      {State.getSnackbar()}\r\n      <CommentsBlock />\r\n      {lazy}\r\n    </div>\r\n  );\r\n});","import { Div } from \"@vkontakte/vkui\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport State from \"../../store/State\";\r\nimport { Comment } from \"../Comments/Comment\";\r\n\r\nexport const ReportComments = observer(() => {\r\n  return (\r\n    <Div>\r\n      {State.getCommentsStrikes()?.map((comment: Icomment, i: number) => {\r\n        return (\r\n          <Comment\r\n            key={i}\r\n            data={comment}\r\n          />\r\n        )\r\n      })}\r\n    </Div>\r\n  )\r\n});\r\n","import { Avatar, Cell, Separator, Text } from \"@vkontakte/vkui\"\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useCallback } from \"react\";\r\nimport Actions from \"../../store/Actions\";\r\nimport State from \"../../store/State\";\r\nimport { routes } from \"../../types/enums\";\r\n\r\nimport ReportInfo, { ReportInfoType } from \"../UI/ReportInfo\";\r\n\r\n\r\nexport const ReportUser = observer(({data}:{data: IuserStrikes}) => {\r\n\r\n  const onProfileClick = useCallback(() => {\r\n    State.goToPage(routes.USERPROFILE);\r\n    Actions.getDataUserProfile(data.id);\r\n  }, [data.id])\r\n\r\n  return (<>\r\n      <Cell\r\n        onClick={onProfileClick}\r\n        before={<Avatar src={data.avatar} style={{ cursor: 'pointer' }} />}\r\n        after={<ReportInfo reports={data.strikes} type={ReportInfoType.user} />}\r\n\r\n      >\r\n        <Text weight='2' style={{ display: 'flex', cursor: 'pointer' }} onClick={onProfileClick}>\r\n          {data.name}\r\n        </Text>\r\n        \r\n      </Cell>\r\n      <Separator />\r\n  </>\r\n  )\r\n});","import { Div } from \"@vkontakte/vkui\"\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { ReportUser } from \"./ReportUser\";\r\nimport State from \"../../store/State\";\r\n\r\nexport const ReportUsers = observer(() => {\r\n\r\n  return (<>\r\n    <Div>\r\n      {State.getUsersStrikes()?.map((user: IuserStrikes) => {\r\n        return (\r\n          <ReportUser\r\n            key={user.id}\r\n            data={user}\r\n          />\r\n        )\r\n      })}\r\n    </Div>\r\n  </>\r\n  )\r\n});","import { Alert, Button, Text } from \"@vkontakte/vkui\";\r\nimport State from \"../../store/State\";\r\nimport { popouts } from \"../../types/enums\";\r\nimport Actions from \"../../store/Actions\";\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nconst prepareRating = async () => {\r\n  const response = await Actions.sendRequest('prepareWinner', {})\r\n\r\n  await bridge.send('VKWebAppCallAPIMethod', {\r\n    method: 'wall.post', params: {\r\n      owner_id: -Number(process.env.REACT_APP_GROUP),\r\n      v: '5.131',\r\n      from_group: 1,\r\n      attachments: response.data.attachments,\r\n      close_comments: 0,\r\n      access_token: response.data.access_token,\r\n    }\r\n  }).then(res => {\r\n    if (res?.response?.post_id) {\r\n      Actions.sendRequest('sendWinner', {url: response.data.url})\r\n    }\r\n  });\r\n}\r\n\r\nconst warningAlert = (): JSX.Element => {\r\n  return (<Alert\r\n    actions={[\r\n      {\r\n        title: 'Отмена',\r\n        autoclose: true,\r\n        mode: 'cancel',\r\n      },\r\n      {\r\n        title: 'Опубликовать',\r\n        autoclose: true,\r\n        mode: 'destructive',\r\n        action: prepareRating,\r\n      },\r\n    ]}\r\n    actionsLayout=\"horizontal\"\r\n    onClose={() => { State.setPopout(null) }}\r\n    header=\"Публикация рейтинга\"\r\n    text=\"Вы уверены, что хотите обнулить недельный рейтинг и опубликовать его?\"\r\n  />\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\nexport const PublishRating = () => {\r\n\r\n  const onClick = (): void => {\r\n    State.setPopout(warningAlert(), popouts.ALERT)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Text weight=\"1\" style={{ textAlign: 'center', marginTop: '50px' }}>Публикация недельного рейтинга</Text>\r\n      <Button\r\n        onClick={onClick}\r\n        align=\"center\"\r\n        size=\"l\"\r\n        style={{ width: '50%', margin: '20px auto 0 auto' }}\r\n      >\r\n        Опубликовать\r\n      </Button>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default PublishRating\r\n","import { Spinner } from \"@vkontakte/vkui\";\r\nimport { observer } from \"mobx-react-lite\"\r\nimport State from \"../../store/State\";\r\nimport { admins } from \"../../types/enums\";\r\nimport Memes from \"../Memes/Memes\";\r\nimport { ReportComments } from \"./ReportComments\";\r\nimport { ReportUsers } from \"./ReportUsers\";\r\nimport { useEffect } from 'react'\r\nimport Actions from \"../../store/Actions\";\r\nimport PublishRating from \"./PublishRating\";\r\n\r\nexport const AdminWrapper = observer(() => {\r\n  const category = State.getAdminCategory()\r\n  useEffect(() => {\r\n    if (category === admins.COMMENTS) {\r\n      Actions.getCommentsStrikes()\r\n    } else if (category === admins.USERS) {\r\n      Actions.getUsersStrikes()\r\n    }\r\n  }, [category])\r\n  return (<>\r\n    {State.getLoading() ? <Spinner size='large' />\r\n      : <>\r\n        {State.getAdminCategory() === admins.MEMES ? <Memes /> : null}\r\n        {State.getAdminCategory() === admins.RATING ? <PublishRating /> : null}\r\n        {State.getAdminCategory() === admins.USERS ? <ReportUsers /> : null}\r\n        {State.getAdminCategory() === admins.COMMENTS ? <ReportComments /> : null}\r\n      </>}\r\n  </>)\r\n});\r\n\r\nexport default AdminWrapper\r\n","import {\r\n  Tabs,\r\n  HorizontalScroll,\r\n  TabsItem\r\n} from '@vkontakte/vkui';\r\nimport { admins } from '../../types/enums';\r\nimport State from '../../store/State';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nexport const CategoriesAdmin = observer((): JSX.Element => {\r\n\r\n  return (\r\n    <Tabs>\r\n      <HorizontalScroll>\r\n        <TabsItem\r\n          style={{ flexBasis: '33%' }}\r\n          onClick={() => State.setAdminCategory(admins.MEMES)}\r\n          selected={State.getAdminCategory() === admins.MEMES}\r\n        >\r\n          Мемы\r\n        </TabsItem>\r\n        {State.isDev() ? <TabsItem\r\n          style={{ flexBasis: '33%' }}\r\n          onClick={() => State.setAdminCategory(admins.RATING)}\r\n          selected={State.getAdminCategory() === admins.RATING}\r\n        >\r\n          Рейтинг\r\n        </TabsItem> : null}\r\n        <TabsItem\r\n          style={{ flexBasis: '34%' }}\r\n          onClick={() => State.setAdminCategory(admins.USERS)}\r\n          selected={State.getAdminCategory() === admins.USERS}\r\n        >\r\n          Пользователи\r\n        </TabsItem>\r\n        <TabsItem\r\n          style={{ flexBasis: '33%' }}\r\n          onClick={() => State.setAdminCategory(admins.COMMENTS)}\r\n          selected={State.getAdminCategory() === admins.COMMENTS}\r\n        >\r\n          Комментарии\r\n        </TabsItem>\r\n      </HorizontalScroll>\r\n    </Tabs >\r\n  );\r\n});","import {\r\n\tPanel,\r\n\tPanelHeader,\r\n\tPanelHeaderBack,\r\n\tFixedLayout\r\n} from '@vkontakte/vkui';\r\nimport Tabbar from '../components/UI/Tabbar';\r\nimport { observer } from 'mobx-react-lite';\r\nimport State from '../store/State';\r\nimport AdminWrapper from '../components/Admin/AdminWrapper';\r\nimport { CategoriesAdmin } from '../components/Admin/CategoriesAdmin';\r\n\r\nexport default observer(({ id }: IpanelProps) => {\r\n\treturn (\r\n\t\t<Panel id={id}>\r\n\t\t\t<FixedLayout vertical='top'>\r\n\t\t\t\t<PanelHeader\r\n\t\t\t\t\tbefore={<PanelHeaderBack onClick={() => window.history.back()} />}\r\n\t\t\t\t>v0.0.37 Модерация</PanelHeader>\r\n\t\t\t\t<CategoriesAdmin />\r\n\t\t\t</FixedLayout>\r\n\t\t\t{State.getPlatform() === 'mobile_iphone' ? <div style={{ width: '100%', height: '62px' }}></div> : null}\r\n\t\t\t<div style={{ width: '100%', height: '100px' }}></div>\r\n\t\t\t<AdminWrapper />\r\n\t\t\t<Tabbar />\r\n\t\t</Panel>\r\n\t);\r\n})","import {\r\n  Tabs,\r\n  HorizontalScroll,\r\n  TabsItem\r\n} from '@vkontakte/vkui';\r\nimport { memes } from '../../types/enums';\r\nimport State from '../../store/State';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nexport default observer((): JSX.Element => {\r\n  return (\r\n    <Tabs>\r\n      <HorizontalScroll>\r\n        <TabsItem\r\n          onClick={() => State.setCategory(memes.TIME)}\r\n          selected={State.getCategory() === memes.TIME}\r\n        >Новое</TabsItem>\r\n        <TabsItem\r\n          onClick={() => State.setCategory(memes.TOP_ALL)}\r\n          selected={State.getCategory() === memes.TOP_ALL}\r\n        >Лучшее</TabsItem>\r\n        <TabsItem\r\n          onClick={() => State.setCategory(memes.TOP_WEEK)}\r\n          selected={State.getCategory() === memes.TOP_WEEK}\r\n        >Топ недели</TabsItem>\r\n        <TabsItem\r\n          onClick={() => State.setCategory(memes.TOP_DAY)}\r\n          selected={State.getCategory() === memes.TOP_DAY}\r\n        >Топ дня</TabsItem>\r\n        <TabsItem\r\n          onClick={() => State.setCategory(memes.FAVORITE)}\r\n          selected={State.getCategory() === memes.FAVORITE}\r\n        >Любимые</TabsItem>\r\n        <TabsItem\r\n          onClick={() => State.setCategory(memes.MY)}\r\n          selected={State.getCategory() === memes.MY}\r\n        >Мои</TabsItem>\r\n      </HorizontalScroll>\r\n    </Tabs>\r\n  );\r\n});","import {\r\n\tPanel,\r\n\tPanelHeader,\r\n\tFixedLayout\r\n} from '@vkontakte/vkui';\r\nimport Tabbar from '../components/UI/Tabbar';\r\nimport Memes from '../components/Memes/Memes';\r\nimport CategoriesMenu from '../components/Memes/CategoriesMenu';\r\nimport { observer } from 'mobx-react-lite';\r\nimport State from '../store/State';\r\nimport { useEffect } from \"react\";\r\nimport { memes } from '../types/enums';\r\n\r\nexport const Home = observer(({ id }: IpanelProps): JSX.Element => {\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (State.getCategory() === memes.USER) {\r\n\t\t\tState.setCategory(memes.TIME)\r\n\t\t}\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<Panel id={id}>\r\n\t\t\t<FixedLayout vertical='top'>\r\n\t\t\t\t<PanelHeader>Категории мемов</PanelHeader>\r\n\t\t\t\t<CategoriesMenu />\r\n\t\t\t</FixedLayout>\r\n\t\t\t<div className='header-space' />\r\n\t\t\t{State.getPlatform() === 'mobile_iphone' ? <div style={{ width: '100%', height: '62px' }}></div> : null}\r\n\t\t\t<div style={{ width: '100%', height: '100px' }}></div>\r\n\t\t\t<Memes />\r\n\t\t\t<Tabbar />\r\n\t\t</Panel>\r\n\t);\r\n});","type initialization = {\n  token: string\n  server: string\n  id?: string | number\n  source?: string\n  platform?: string\n}\ntype initData = {\n  id: string | number\n  source: string\n  platform: string\n}\ntype trackData = {\n  event: string\n  props?: any\n  session: number\n  id: number\n}\ntype revenueData = {\n  amount: number\n  session: number\n  id: number\n}\ntype revenueEvent = {\n  amount: number\n}\ntype response = {\n  data: any\n  error: boolean\n  error_type: number\n}\n\nclass Analytics {\n\n  private _init: boolean = false\n  private _token: string\n  private _server: string\n  private _session: number\n  private _localID: string\n  private _id: number\n  \n  public async init({ token, server, id, source, platform }: initialization): Promise<void> {\n    this._token = token\n    this._server = server\n    const data: initData = {\n      id: !id ? this._getLocalUserID() : id,\n      source,\n      platform\n    }\n    await this._request('init', data).then((res: response): void => {\n      if (res.error === false) {\n        this._init = true\n        this._id = res.data.id\n        this._session = res.data.session\n        console.log('[SKORIT Analytics] Success connection')\n      } else {\n        console.warn('[SKORIT Analytics] Rejected connection')\n      }\n    })\n  }\n\n  public track(event: string, props: string): void {\n    if (!this._init) return\n    const data: trackData = {\n      event: event.toLocaleLowerCase(),\n      props: JSON.stringify(props),\n      session: this._session,\n      id: this._id\n    }\n    this._request('track', data)\n  }\n\n  public revenue({ amount }: revenueEvent): void {\n    if (!this._init) return\n    const data: revenueData = {\n      amount: amount,\n      session: this._session,\n      id: this._id\n    }\n    this._request('revenue', data)\n  }\n\n  private async _request<T>(route: string, data: initData | revenueData | trackData): Promise<T> {\n    return fetch(this._server + '/' + route, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': this._token\n      },\n      body: JSON.stringify(data)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(response.statusText)\n      }\n      return response.json() as Promise<T>\n    })\n  }\n\n  private _getLocalUserID(): string {\n    if (this._isLocalStorageAvailable()) {\n      this._localID = localStorage.getItem('SKORIT_Analytics_ID')\n\n      if (!this._localID) {\n        this._localID = new Date().getTime() +  '_' + this._random(10000, 99999)\n        localStorage.setItem('SKORIT_Analytics_ID', this._localID)\n      }\n      return this._localID\n    } else {\n      const data: trackData = {\n        event: 'localStorage is unavailable',\n        session: null,\n        id: null\n      }\n      this._request('log', data)\n      console.warn('[SKORIT Analytics] localStorage is unavailable')\n    }\n  }\n\n  private _random(min: number, max: number): number {\n    return Math.round(Math.random() * (max - min) + min)\n  }\n\n  private _isLocalStorageAvailable(): boolean {\n    try {\n      const test = 'test'\n      localStorage.setItem(test, test)\n      localStorage.removeItem(test)\n      return true\n    } catch(e) {\n      return false\n    }\n  }\n}\n\nexport default new Analytics()","import { Panel, Button } from '@vkontakte/vkui';\r\nimport '../css/intro.css';\r\nimport State from '../store/State';\r\nimport { routes } from '../types/enums';\r\nimport { useEffect } from 'react';\r\nimport Analytics from '../store/Analytics';\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nexport const IntroFirst = ({ id }: IpanelProps) => {\r\n  useEffect(() => {\r\n    Analytics.track('tutorial', 'hello');\r\n  }, [])\r\n\r\n  return (\r\n    <Panel id={id}>\r\n      <div className='intro'>\r\n        <div className='intro-header'>Добро пожаловать<br />на <b>фабрику мемов!</b></div>\r\n        <div className='intro-logo' />\r\n        <div className='intro-descr'>Здесь можно кекнуть с чужих мемасов<br />либо залить свой.</div>\r\n        <div className='intro-button'>\r\n          <Button size='m' onClick={() => {\r\n            State.goToPage(routes.INTROSECOND);\r\n            Analytics.track('tutorial', 'continue');\r\n          }}\r\n          >\r\n            Продолжить\r\n          </Button>\r\n        </div>\r\n        <div className='intro-continue-info'>\r\n          Нажимая на «продолжить», вы соглашаетесь с <span className='intro-continue-info-link' onClick={() => { State.goToPage(routes.RULES) }}>правилами использования сервиса</span>\r\n        </div>\r\n      </div>\r\n    </Panel>\r\n  );\r\n}","import { Panel } from '@vkontakte/vkui';\r\nexport default ({id}: IpanelProps) => <Panel id={id} />;","import React, { useState } from 'react';\r\nimport {\r\n  Alert,\r\n  Group,\r\n  Avatar,\r\n  RichCell,\r\n  Button,\r\n  Input,\r\n  Checkbox,\r\n  Header\r\n} from '@vkontakte/vkui';\r\nimport User from '../../store/User';\r\nimport { observer } from 'mobx-react-lite';\r\nimport State from '../../store/State';\r\nimport Actions from '../../store/Actions';\r\nimport { popouts } from '../../types/enums';\r\n\r\nconst save = (name: string, checked: boolean, setChange: React.Dispatch<React.SetStateAction<boolean>>) => {\r\n  const reg = /^[a-zA-Zа-яА-Я]+$/;\r\n  if (reg.test(name) && name.length > 2 && name.length <= 20) {\r\n    Actions.setName(name, checked);\r\n    setChange(false);\r\n  } else {\r\n    State.setPopout(\r\n      <Alert\r\n        actions={[{\r\n          title: 'Понятно',\r\n          autoclose: true,\r\n          mode: 'cancel'\r\n        }]}\r\n        onClose={() => State.setPopout(null)}\r\n      >\r\n        <p>Никнейм должен состоять только из букв и быть длиной не менее 3 и не более 20 символов</p>\r\n      </Alert>, popouts.ALERT\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer((): JSX.Element => {\r\n\r\n  const [checked, setChecked] = useState(User.getUseNickname());\r\n  const [name, setNickname] = useState(User.getNickname());\r\n  const [change, setChange] = useState(false);\r\n\r\n  const user = User.getUser();\r\n\r\n\r\n  return (<>\r\n    <Group header={<Header mode='secondary'>Твой никнейм</Header>}>\r\n      {change ? <RichCell\r\n        disabled\r\n        before={<Avatar size={72} src={user.photo_200} />}\r\n        actions={\r\n          <React.Fragment>\r\n            <Button onClick={() => save(name, checked, setChange)}>Сохранить</Button>\r\n            <Button mode='secondary' onClick={() => setChange(!change)}>Отменить</Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <Input\r\n          type='text'\r\n          autoFocus\r\n          onChange={(e) => setNickname(e.target.value)}\r\n          defaultValue={name}\r\n          placeholder='Введите никнейм'\r\n        />\r\n        <Checkbox defaultChecked={checked} onChange={(e) => setChecked(e.target.checked)}>Использовать никнейм</Checkbox>\r\n      </RichCell>\r\n        :\r\n        <RichCell\r\n          disabled\r\n          before={<Avatar size={72} src={user.photo_200} />}\r\n          actions={\r\n            <Button onClick={() => { setChange(!change); window.scrollTo(0, 0); }}>Сменить никнейм</Button>\r\n          }\r\n        >\r\n          {User.getUseNickname() ? User.getNickname() : user.first_name}\r\n        </RichCell>}\r\n       \r\n    </Group >\r\n    </>\r\n  );\r\n});","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon28Notifications\", \"notifications_28\", \"0 0 28 28\", '<symbol viewBox=\"0 0 28 28\" xmlns=\"http://www.w3.org/2000/svg\" id=\"notifications_28\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h28v28H0z\" /><path d=\"M14.005 3.5C18.535 3.5 22 7.294 22 12.081l-.005 1.827c0 .307.2.663.739 1.297.067.08.13.154.27.314 1.07 1.239 1.496 1.955 1.496 3.07 0 .5-.057.89-.294 1.357C23.7 20.94 22.618 21.5 21 21.5h-2.601C17.73 23.766 16.212 25 14 25s-3.731-1.235-4.399-3.5H7c-1.665 0-2.758-.574-3.242-1.604-.21-.446-.258-.809-.258-1.308 0-1.113.425-1.83 1.493-3.068.139-.16.203-.235.27-.314.539-.635.737-.99.737-1.299V12.08C6 7.296 9.472 3.5 14.005 3.5Zm2.274 18h-4.558C12.17 22.544 12.899 23 14 23s1.829-.457 2.28-1.5Zm-2.274-16C10.618 5.5 8 8.362 8 12.079v1.828c0 .928-.384 1.617-1.212 2.592a44.99 44.99 0 0 1-.28.328c-.76.88-1.008 1.298-1.008 1.761 0 .226.016.347.068.457.124.264.488.455 1.432.455h14c.914 0 1.286-.192 1.423-.46.059-.117.077-.241.077-.452 0-.463-.248-.88-1.009-1.76l-.282-.328c-.828-.976-1.214-1.665-1.214-2.593L20 12.08C20 8.36 17.389 5.5 14.005 5.5Z\" fill=\"currentColor\" fill-rule=\"nonzero\" /></g></symbol>', 28, 28);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon28Users3Outline\", \"users_3_outline_28\", \"0 0 28 28\", '<symbol viewBox=\"0 0 28 28\" xmlns=\"http://www.w3.org/2000/svg\" id=\"users_3_outline_28\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h28v28H0z\" /><path d=\"M14 14.5c3.862 0 6.5 1.759 6.5 4.5 0 1.93-1.284 3-3 3h-7c-1.716 0-3-1.07-3-3 0-2.741 2.638-4.5 6.5-4.5Zm8 0c2.746 0 4.5 1.657 4.5 3.75 0 1.692-1.293 2.75-2.75 2.75H23a1 1 0 0 1 0-2h.75c.431 0 .75-.26.75-.75 0-.962-.834-1.75-2.5-1.75a1 1 0 0 1 0-2Zm-16 0a1 1 0 0 1 0 2c-1.666 0-2.5.788-2.5 1.75 0 .49.319.75.75.75H5a1 1 0 0 1 0 2h-.75c-1.457 0-2.75-1.058-2.75-2.75 0-2.093 1.754-3.75 4.5-3.75Zm8 2c-2.888 0-4.5 1.075-4.5 2.5 0 .737.316 1 1 1h7c.684 0 1-.263 1-1 0-1.425-1.612-2.5-4.5-2.5ZM20 6a3.5 3.5 0 0 1 0 7 1 1 0 0 1 0-2l.144-.007A1.5 1.5 0 0 0 20 8l-.117-.007A1 1 0 0 1 20 6ZM8 6a1 1 0 0 1 .117 1.993L8 8a1.5 1.5 0 0 0-.144 2.993L8 11a1 1 0 0 1 0 2 3.5 3.5 0 0 1 0-7Zm6-1a4 4 0 1 1 0 8 4 4 0 0 1 0-8Zm0 2a2 2 0 1 0 0 4 2 2 0 0 0 0-4Z\" fill=\"currentColor\" fill-rule=\"nonzero\" /></g></symbol>', 28, 28);\n","import bridge from '@vkontakte/vk-bridge';\r\nimport {\r\n  Group,\r\n  Header,\r\n  Cell,\r\n  Checkbox\r\n} from '@vkontakte/vkui';\r\nimport {\r\n  Icon28Notifications,\r\n  Icon28Users3Outline\r\n} from '@vkontakte/icons';\r\nimport User from '../../store/User';\r\nimport { observer } from 'mobx-react-lite';\r\nimport State from '../../store/State';\r\n\r\nconst notify = (): void => {\r\n  if (!State.getActiveSubscribesAlert()) {\r\n    State.setActiveSubscribesAlert(true)\r\n    if (User.isNotify()) {\r\n      bridge.send('VKWebAppDenyNotifications', {}).then((data) => {\r\n        if (data.result) {\r\n          User.setNotify(false);\r\n        }\r\n      })\r\n        .finally(() => State.setActiveSubscribesAlert(false));\r\n    } else {\r\n      bridge.send('VKWebAppAllowNotifications', {}).then((data) => {\r\n        if (data.result) {\r\n          User.setNotify(true);\r\n        }\r\n      })\r\n        .finally(() => State.setActiveSubscribesAlert(false));;\r\n    }\r\n  }\r\n}\r\n\r\nconst subscribe = (): void => {\r\n  if (!State.getActiveSubscribesAlert()) {\r\n    State.setActiveSubscribesAlert(true)\r\n    if (User.isSubscribe()) {\r\n      bridge.send('VKWebAppLeaveGroup', { group_id: Number(process.env.REACT_APP_GROUP) }).then(data => {\r\n        if (data.result) {\r\n          User.setSubscribe(false);\r\n        }\r\n      })\r\n        .finally(() => State.setActiveSubscribesAlert(false));;\r\n    } else {\r\n      bridge.send('VKWebAppJoinGroup', { group_id: Number(process.env.REACT_APP_GROUP) }).then(data => {\r\n        if (data.result) {\r\n          User.setSubscribe(true);\r\n        }\r\n      })\r\n        .finally(() => State.setActiveSubscribesAlert(false));;\r\n    }\r\n  }\r\n}\r\n\r\nexport default observer((): JSX.Element => {\r\n  return (\r\n    <Group\r\n      header={<Header mode='secondary'>Будь ВКонтакте</Header>} description='Подпишись на уведомления и вступи в группу, чтобы не пропустить новые мемы. Получи возможность публиковать свои мемы 3 раза в день.'>\r\n      <Cell\r\n        onClick={() => notify()}\r\n        before={<Icon28Notifications />}\r\n        after={<Checkbox disabled checked={User.isNotify()}></Checkbox>}\r\n      >Уведомления</Cell>\r\n      <Cell\r\n        onClick={() => subscribe()}\r\n        before={<Icon28Users3Outline />}\r\n        after={<Checkbox disabled checked={User.isSubscribe()}></Checkbox>}\r\n      >Группа</Cell>\r\n    </Group>\r\n  );\r\n});","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon16Add\", \"add_16\", \"0 0 16 16\", '<symbol xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 16 16\" id=\"add_16\"><path fill=\"currentColor\" d=\"M9 9v4a1 1 0 1 1-2 0V9H3a1 1 0 1 1 0-2h4V3a1 1 0 1 1 2 0v4h4a1 1 0 1 1 0 2H9Z\" /></symbol>', 16, 16);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon24Camera\", \"camera_24\", \"0 0 24 24\", '<symbol viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" id=\"camera_24\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h24v24H0z\" /><path d=\"M9.629 3.5h4.742c.69 0 1.094.2 1.49.666l.718.888c.364.45 1.105.946 1.785.946h.454C21 6 22 7.333 22 9.556v6.888C22 18.408 20.372 20 18.364 20H5.636C3.628 20 2 18.408 2 16.444V9.556C2 7.333 3 6 5.182 6h.454c.68 0 1.42-.497 1.785-.946.363-.448.697-.864.718-.888.396-.465.8-.666 1.49-.666ZM7 12.5c0 2.76 2.24 5 5 5s5-2.24 5-5-2.24-5-5-5-5 2.24-5 5Zm1.6 0a3.4 3.4 0 1 1 6.8 0 3.4 3.4 0 0 1-6.8 0Z\" fill=\"currentColor\" /></g></symbol>', 24, 24);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon24VideoAdvertisement\", \"video_advertisement_24\", \"0 0 24 24\", '<symbol xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" id=\"video_advertisement_24\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M2.436 6.184C2 7.04 2 8.16 2 10.4v3.2c0 2.24 0 3.36.436 4.216a4 4 0 0 0 1.748 1.748C5.04 20 6.16 20 8.4 20h7.2c2.24 0 3.36 0 4.216-.436a4 4 0 0 0 1.748-1.748C22 16.96 22 15.84 22 13.6v-3.2c0-2.24 0-3.36-.436-4.216a4 4 0 0 0-1.748-1.748C18.96 4 17.84 4 15.6 4H8.4c-2.24 0-3.36 0-4.216.436a4 4 0 0 0-1.748 1.748Zm12.08 6.319a.587.587 0 0 0 0-1.006l-4.048-2.415a.576.576 0 0 0-.868.502v4.832c0 .451.484.732.868.502l4.048-2.415ZM4 7.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1ZM18.5 7a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-1ZM4 11.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1Zm14.5-.5a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-1ZM4 15.5a.5.5 0 0 1 .5-.5h1a.5.5 0 0 1 .5.5v1a.5.5 0 0 1-.5.5h-1a.5.5 0 0 1-.5-.5v-1Zm14.5-.5a.5.5 0 0 0-.5.5v1a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5v-1a.5.5 0 0 0-.5-.5h-1Z\" clip-rule=\"evenodd\" /></symbol>', 24, 24);\n","export default ''","export default \"\"","import bridge, { EAdsFormats } from '@vkontakte/vk-bridge';\r\nimport {\r\n  Button,\r\n  Group,\r\n  Header,\r\n  FormItem,\r\n  File,\r\n  Text,\r\n  Spinner,\r\n  Alert,\r\n  Link,\r\n} from '@vkontakte/vkui';\r\nimport {\r\n  Icon24Camera,\r\n  Icon16Add,\r\n  Icon24VideoAdvertisement\r\n} from '@vkontakte/icons';\r\nimport { observer } from 'mobx-react-lite';\r\nimport md5 from 'md5';\r\nimport State from '../../store/State';\r\nimport { popouts, upload } from '../../types/enums';\r\nimport axios from 'axios';\r\nimport User from '../../store/User';\r\nimport Actions from '../../store/Actions';\r\nimport guideFirst from '../../images/guideFirst';\r\nimport guideSecond from '../../images/guideSecond';\r\n\r\nconst AlertFile = () => {\r\n  return (<Alert\r\n    actions={[{\r\n      title: 'Понятно',\r\n      autoclose: true,\r\n      mode: 'cancel'\r\n    }]}\r\n    onClose={() => State.setPopout(null)}\r\n  >\r\n    <p>Файл должен быть формата .jpeg или .png, размером меньше 2 мб</p>\r\n  </Alert>)\r\n}\r\n\r\nconst handleSelectedFile = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n  const file = e.target.files[0];\r\n  if ((file.type === 'image/png' || file.type === 'image/jpeg') && (!/.jfif/i.test(file.name))) {\r\n    if (file.size / 1024 < 2048) {\r\n      State.setFile(file);\r\n      State.setUploadState(upload.BUTTONS);\r\n    } else {\r\n      State.setPopout(<AlertFile />, popouts.ALERT);\r\n    }\r\n  } else {\r\n    State.setPopout(<AlertFile />, popouts.ALERT);\r\n  }\r\n}\r\n\r\nconst buttons = (): JSX.Element => {\r\n  const file = State.getFile();\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <Text weight='2' style={{ marginBottom: 16 }}>{file.name.length > 25 ? file.name.substring(0, 25) + '...' : file.name}</Text>\r\n      </div>\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <Button size='m' style={{ marginRight: 4 }} onClick={() => sendMem()}>Запостить</Button>\r\n        <Button size='m' mode='secondary' style={{ marginLeft: 4 }} onClick={() => State.setUploadState(upload.INPUT)}>Отмена</Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst inputFile = (): JSX.Element => {\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', }}>\r\n        <Text weight='2'>Осталось жетонов: {User.getMemes()}</Text>\r\n        {State.getRewardedButton() && <Button mode='secondary' style={{ marginLeft: '4px' }} before={<Icon16Add />} onClick={() => showRewarded()}></Button>}\r\n      </div>\r\n      <div style={{ textAlign: 'center', marginTop: '10px', marginBottom: '5px' }}>\r\n        <File\r\n          before={<Icon24Camera role='presentation' />}\r\n          size='l'\r\n          accept='image/png, image/jpeg'\r\n          onChange={handleSelectedFile}\r\n          align='center'\r\n        >\r\n          Открыть галерею\r\n        </File>\r\n      </div>\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nconst loading = (): JSX.Element => {\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n      <Spinner size='regular' />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst finish = (): JSX.Element => {\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <Text weight='2' style={{ color: 'green', textAlign: 'center' }}>Твой мем загружен! После проверки, модератор опубликует его.</Text>\r\n      </div>\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <Button size='m' style={{ marginTop: 10 }} onClick={() => State.setUploadState(upload.INPUT)}>Понятно</Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst error = (): JSX.Element => {\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <Text weight='2' style={{ color: 'red', textAlign: 'center' }}>\r\n          Ошибка загрузки файла.\r\n          <br />\r\n          Файл должен быть формата .jpeg или .png, размером меньше 2 мб\r\n        </Text>\r\n      </div>\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <Button size='m' style={{ marginTop: 10 }} onClick={() => State.setUploadState(upload.INPUT)}>Понятно</Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst ad = (): JSX.Element => {\r\n  return (\r\n    <>\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <Text weight='2' style={{ color: 'red', textAlign: 'center' }}>У тебя 0 жетонов</Text>\r\n      </div>\r\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <Text weight='2' style={{ textAlign: 'center' }}>До ежедневного начисления осталось {timer()}</Text>\r\n      </div>\r\n      {State.getRewardedButton() && <>\r\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n          <Text weight='3' style={{ textAlign: 'center' }}>Вы можете получить жетон за рекламу</Text>\r\n        </div>\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n          <Button size='m' style={{ marginTop: 10 }} before={<Icon24VideoAdvertisement />} onClick={() => showRewarded()}>Смотреть рекламу</Button>\r\n        </div>\r\n      </>}\r\n    </>\r\n  );\r\n}\r\n\r\nconst sendMem = (): void => {\r\n  State.setUploadState(upload.LOADING);\r\n  const file = State.getFile();\r\n  const data = new FormData();\r\n  data.append('file', file, file.name);\r\n  data.append('id', User.getUser().id.toString());\r\n  data.append('search', window.location.search);\r\n  axios.post(process.env.REACT_APP_API + '/upload', data).then(res => {\r\n    res.data.error ? State.setUploadState(upload.ERROR) : State.setUploadState(upload.FINISH);\r\n    !res.data.error && User.setMemes(res.data.data.memes);\r\n  });\r\n}\r\n\r\nconst timer = (): string => {\r\n  const hours = Math.floor(State.getTimer() / (60 * 60));\r\n  const minutes = Math.floor((State.getTimer() - (hours * 60 * 60)) / 60);\r\n  const seconds = State.getTimer() - (hours * 60 * 60) - minutes * 60;\r\n  return hours + ':' + (minutes.toString().length === 1 ? '0' + minutes : minutes) + ':' + (seconds.toString().length === 1 ? '0' + seconds : seconds);\r\n}\r\n\r\nconst AlertAds = (): void => {\r\n  State.setRewardedButton(false)\r\n  State.setPopout(\r\n    <Alert\r\n      actions={[{\r\n        title: 'Понятно',\r\n        autoclose: true,\r\n        mode: 'cancel'\r\n      }]}\r\n      onClose={() => State.setPopout(null)}\r\n    >\r\n      <p>Реклама для просмотра не найдена</p>\r\n    </Alert>, popouts.ALERT\r\n  )\r\n}\r\n\r\nconst showRewarded = (): void => {\r\n  try {\r\n    bridge.send('VKWebAppCheckNativeAds', { ad_format: EAdsFormats.REWARD })\r\n      .then((data) => {\r\n        if (data.result) {\r\n          State.setRewardedButton(true)\r\n          bridge.send('VKWebAppShowNativeAds', { ad_format: EAdsFormats.REWARD }).then(data => {\r\n            if (data.result) {\r\n              State.amplitude.track('reward')\r\n              const hash = md5(User.getNickname() + '_' + User.getUser().id + '_' + User.getMemes());\r\n              Actions.sendRequest('rewardedMeme', { hash }).then(res => {\r\n                !res.error && User.setMemes(User.getMemes() + 1);\r\n              });\r\n            }\r\n          })\r\n        } else {\r\n          AlertAds()\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        AlertAds()\r\n      })\r\n  } catch (e) {\r\n    AlertAds()\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default observer((): JSX.Element => {\r\n  const state = State.getUploadState();\r\n  const jsx = state === upload.BUTTONS ? buttons() :\r\n    state === upload.LOADING ? loading() :\r\n      state === upload.FINISH ? finish() :\r\n        state === upload.ERROR ? error() :\r\n          state === upload.INPUT && User.getMemes() === 0 ? ad() :\r\n            inputFile();\r\n\r\n  const onClick = (): void => {\r\n    //@ts-ignore\r\n    bridge.send('VKWebAppShowSlidesSheet', {\r\n      slides: [\r\n        {\r\n          media: {\r\n            blob: `data:image/png;base64, ${guideFirst}`,\r\n            type: 'image'\r\n          },\r\n          title: 'Профиль',\r\n          subtitle: 'Каждый день тебе доступно три бесплатных жетона на загрузку мемов'\r\n        }, {\r\n          media: {\r\n            blob: `data:image/png;base64, ${guideSecond}`,\r\n            type: 'image'\r\n          },\r\n          title: 'Загрузка мема',\r\n          subtitle: 'Откройте галерею и выберете свой мем. Картинка должна быть размером не более 2mb, jpg или png формата'\r\n        }\r\n      ]\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <Group header={<Header mode='secondary'>Загрузить свой мем</Header>}>\r\n      <FormItem style={{ overflow: 'hidden' }}>{jsx}</FormItem>\r\n      <Link style={{ width: '100%', textAlign: 'center' }} onClick={onClick}>Как это работает?</Link>\r\n    </Group>\r\n  );\r\n});","import { useEffect } from 'react';\r\nimport {\r\n\tPanel,\r\n\tPanelHeader,\r\n\tPanelHeaderBack,\r\n\tFixedLayout\r\n} from '@vkontakte/vkui';\r\nimport Nickname from '../components/MyProfile/Nickname';\r\nimport Tabbar from '../components/UI/Tabbar';\r\nimport Subscribe from '../components/MyProfile/Subscribe';\r\nimport Upload from '../components/MyProfile/Upload';\r\nimport Session from '../store/Session';\r\nimport { observer } from 'mobx-react-lite';\r\nimport State from '../store/State';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport guideFirst from '../images/guideFirst';\r\nimport guideSecond from '../images/guideSecond';\r\nimport User from '../store/User';\r\n\r\nexport const MyProfile = observer(({ id }: IpanelProps) => {\r\n\tuseEffect(() => {\r\n\t\tSession.clearMemesNotif()\r\n\t\tState.setRewardedButton(true)\r\n\t\tif (!User.getMember()) {\r\n\t\t\tUser.setMember(true)\r\n\t\t\t//@ts-ignore\r\n\t\t\tbridge.send('VKWebAppShowSlidesSheet', {\r\n\t\t\t\tslides: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmedia: {\r\n\t\t\t\t\t\t\tblob: `data:image/png;base64, ${guideFirst}`,\r\n\t\t\t\t\t\t\ttype: 'image'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\ttitle: 'Профиль',\r\n\t\t\t\t\t\tsubtitle: 'Каждый день тебе доступно три бесплатных жетона на загрузку мемов'\r\n\t\t\t\t\t}, {\r\n\t\t\t\t\t\tmedia: {\r\n\t\t\t\t\t\t\tblob: `data:image/png;base64, ${guideSecond}`,\r\n\t\t\t\t\t\t\ttype: 'image'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\ttitle: 'Загрузка мема',\r\n\t\t\t\t\t\tsubtitle: 'Откройте галерею и выберете свой мем. Картинка должна быть размером не более 2mb, jpg или png формата'\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t})\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<Panel id={id}>\r\n\t\t\t<FixedLayout vertical='top'>\r\n\t\t\t\t<PanelHeader\r\n\t\t\t\t\tbefore={<PanelHeaderBack onClick={() => window.history.back()} />}\r\n\t\t\t\t>Профиль</PanelHeader>\r\n\t\t\t</FixedLayout>\r\n\t\t\t{State.getPlatform() === 'mobile_iphone' ? <div style={{ width: '100%', height: '42px' }}></div> : null}\r\n\t\t\t<div style={{ width: '100%', height: '40px' }}></div>\r\n\t\t\t<Upload />\r\n\t\t\t<Subscribe />\r\n\t\t\t<Nickname />\r\n\t\t\t<div style={{ width: '100%', height: '30px' }}></div>\r\n\t\t\t<Tabbar />\r\n\t\t</Panel>\r\n\t);\r\n})","import {\r\n  Tabs,\r\n  HorizontalScroll,\r\n  TabsItem\r\n} from '@vkontakte/vkui';\r\nimport { ratings } from '../../types/enums';\r\nimport State from '../../store/State';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nexport const CategoriesRating = observer((): JSX.Element => {\r\n  \r\n  return (\r\n    <Tabs>\r\n      <HorizontalScroll>\r\n        <TabsItem\r\n          style={{ flexBasis: '50%' }}\r\n          onClick={() => {State.setRatingCategory(ratings.TOP_ALL); window.scrollTo(0, 0)}}\r\n          selected={State.getRatingCategory() === ratings.TOP_ALL}\r\n        >\r\n          ТОП участников\r\n        </TabsItem>\r\n        <TabsItem\r\n          style={{ flexBasis: '50%' }}\r\n          onClick={() => {State.setRatingCategory(ratings.TOP_WEEK); window.scrollTo(0, 0)}}\r\n          selected={State.getRatingCategory() === ratings.TOP_WEEK}\r\n        >\r\n          ТОП недели\r\n        </TabsItem>\r\n      </HorizontalScroll>\r\n    </Tabs>\r\n  );\r\n});","import {\r\n  Cell,\r\n  Avatar,\r\n  Text,\r\n  Separator,\r\n  Div,\r\n} from '@vkontakte/vkui';\r\nimport '../../css/rating.css';\r\nimport { observer } from 'mobx-react-lite';\r\nimport State from '../../store/State';\r\nimport { routes } from '../../types/enums';\r\nimport Actions from '../../store/Actions';\r\nimport { useCallback } from \"react\";\r\n\r\nexport const RatingListItem = observer(({ avatar, name, points, place, self, id }: IratingUser): JSX.Element => {\r\n  const weight = self ? '1' : '3'\r\n\r\n  const onProfileClick = useCallback(() => {\r\n    State.goToPage(routes.USERPROFILE);\r\n    Actions.getDataUserProfile(id);\r\n  }, [id])\r\n\r\n  return (\r\n    <>\r\n      <Cell\r\n        before={\r\n          <Div style={{display: 'flex', alignItems: 'center', gap: '10px', flexBasis: '10%'}}>\r\n            <Text weight={weight} style={{width: '25px'}}>\r\n              {place}.\r\n            </Text>\r\n            <Avatar src={avatar} />\r\n          </Div>\r\n        }\r\n        onClick={onProfileClick}\r\n        after={<Text style={{marginLeft: '20px'}} weight={weight}>{points}</Text>}\r\n      >\r\n        <Text weight={weight} style={{ display: 'inline-block', maxWidth: '100%', whiteSpace: 'nowrap', cursor: 'pointer', overflow: 'hidden', textOverflow: 'ellipsis' }}>\r\n          {name}\r\n        </Text>\r\n      </Cell>\r\n      <Separator />\r\n    </>\r\n  )\r\n\r\n})","import {\r\n  List, Spinner,\r\n} from '@vkontakte/vkui';\r\nimport '../../css/rating.css';\r\nimport State from '../../store/State';\r\nimport { ratings } from '../../types/enums';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { RatingListItem } from './RatingListItem';\r\n\r\n\r\n\r\nexport const RatingList = observer(() => {\r\n  const arr = State.getRatingCategory() === ratings.TOP_ALL ? State.getRatingUsers().all : State.getRatingUsers().week\r\n  return (\r\n    <List>\r\n      {State.getLoading() ?\r\n        <Spinner size='large' />\r\n        : arr.map((user) => {\r\n          return (\r\n            <RatingListItem\r\n              key={user.id}\r\n              id={user.id}\r\n              avatar={user.avatar}\r\n              name={user.name}\r\n              place={user.place}\r\n              points={user.points}\r\n              self={user.self}\r\n            />)\r\n        })}\r\n    </List>\r\n\r\n  );\r\n})","import {\r\n  Text,\r\n  Link,\r\n  Spacing,\r\n} from '@vkontakte/vkui';\r\nimport State from '../../store/State';\r\nimport { modals, ratings } from '../../types/enums';\r\nimport { observer } from 'mobx-react-lite';\r\nimport '../../css/rating.css';\r\n\r\n\r\nexport const RatingInfoBlock = observer(() => {\r\n  return (\r\n    <div className='rating-info-block'>\r\n      <Text weight='2'>\r\n        {State.getRatingCategory() === ratings.TOP_ALL\r\n          ?\r\n          'ТОП за всё время формируется на основе активных действий участников. Делитесь с друзьями, пишите комментарии или загружайте новые мемы, чтобы подняться в рейтинге.'\r\n          :\r\n          <>\r\n            ТОП недели формируется на основе активных действий участников. Каждый понедельник победитель будет опубликован в\r\n            <Link href={'https://vk.com/public' + process.env.REACT_APP_GROUP} target=\"_blank\"> официальной группе</Link>\r\n            .\r\n          </>\r\n        }\r\n      </Text>\r\n      <Spacing size={5} />\r\n      <Link onClick={() => State.setActiveModal(modals.RULES)} >Подробнее о правилах</Link>\r\n    </div>\r\n  );\r\n})\r\n\r\n","import {\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  FixedLayout,\r\n} from '@vkontakte/vkui';\r\nimport Tabbar from '../components/UI/Tabbar';\r\nimport { Icon28CupOutline } from '@vkontakte/icons';\r\nimport '../css/rating.css';\r\nimport { CategoriesRating } from '../components/Rating/CategoriesRating';\r\nimport { RatingList } from '../components/Rating/RatingList';\r\nimport { RatingInfoBlock } from '../components/Rating/RatingInfoBlock';\r\nimport { useEffect } from \"react\";\r\nimport Actions from '../store/Actions';\r\nimport State from '../store/State';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nexport const Rating = observer(({ id }: IpanelProps) => {\r\n\r\n  useEffect(() => {\r\n    Actions.getDataRatingUsers()\r\n    const fetch = () => {\r\n      setTimeout(() => {\r\n        Actions.getDataRatingUsers()\r\n      }, 4000)\r\n    }\r\n    window.addEventListener('online', fetch);\r\n    return () => {\r\n      window.removeEventListener('online', fetch);\r\n    };\r\n  }, [])\r\n\r\n  return (\r\n    <Panel id={id}>\r\n      <FixedLayout vertical='top'>\r\n        <PanelHeader\r\n          before={<PanelHeaderBack onClick={() => window.history.back()} />}\r\n        >\r\n          <div className='rating-header-text'>\r\n            <Icon28CupOutline />\r\n            Рейтинг\r\n          </div>\r\n        </PanelHeader>\r\n        <CategoriesRating />\r\n      </FixedLayout>\r\n      {State.getPlatform() === 'mobile_iphone' ? <div style={{ width: '100%', height: '62px' }}></div> : null}\r\n      <div style={{ width: '100%', height: '100px' }}></div>\r\n      <div className='header-space' />\r\n      <RatingInfoBlock />\r\n      <RatingList />\r\n      {State.getPlatform() === 'mobile_iphone' ? <div style={{ width: '100%', height: '42px' }}></div> : null}\r\n      <div style={{ width: '100%', height: '40px' }}></div>\r\n      <Tabbar />\r\n    </Panel>\r\n  );\r\n})","import {\r\n  Div,\r\n  FixedLayout,\r\n  Link,\r\n  Panel, PanelHeader, PanelHeaderBack, Spacing, Text,\r\n} from '@vkontakte/vkui';\r\nimport { observer } from 'mobx-react-lite';\r\nimport '../css/rules.css'\r\n\r\nexport const Rules = observer(({ id }: IpanelProps) => {\r\n\r\n  return (\r\n    <Panel id={id} className='rules-panel'>\r\n      <FixedLayout vertical='top'>\r\n        <PanelHeader\r\n          before={<PanelHeaderBack onClick={() => window.history.back()} />}\r\n        >\r\n          \r\n        </PanelHeader>\r\n      </FixedLayout>\r\n      <Div style={{padding: '0 30px 40px 30px'}}>\r\n        <Text className='rules-panel-text' weight='2'>\r\n          Правила использования Сервиса Фабрика мемов\r\n        </Text>\r\n        <Spacing size={20} />\r\n        <Text>\r\n          1. Основные понятия\r\n          <Spacing size={15} />\r\n          1.1. Сайт – сайт, расположенный в сети Интернет по адресу <Link href='https://vk.com'>https://vk.com</Link>\r\n\r\n          <Spacing size={2} />\r\n          1.2. Разработчик – физическое или юридическое лицо, размещающее приложение на Сайте и использующее его в соответствии с Условиями размещения приложений и Правилами размещения приложений на Сайте. Фамилия, имя и отчество либо наименование Разработчика, а также иная информация о нем указаны в разделе «Информация о разработчике» в окне запуска Приложения и в настройках Приложения.\r\n\r\n          <Spacing size={2} />\r\n          1.3. Администрация Сайта – общество с ограниченной ответственностью «В Контакте», расположенное по адресу: 191024, Санкт-Петербург, ул. Херсонская, д. 12-14, литер А, помещение 1-Н, ОГРН 1079847035179, ИНН 7842349892.\r\n\r\n          <Spacing size={2} />\r\n          1.4. Приложение – программный сервис, размещенный Разработчиком на Сайте в разделе «Приложения», прошедший модерацию Администрацией Сайта и включенный в каталог приложений.\r\n\r\n          <Spacing size={2} />\r\n          1.5. Пользователь – пользователь Сайта, зарегистрированный в установленном порядке и использующий Приложение.\r\n\r\n          <Spacing size={20} />\r\n          2. Статус Правил\r\n          <Spacing size={20} />\r\n          2.1. Настоящие Правила представляют собой соглашение между Разработчиком и Пользователем (далее вместе именуемые «Стороны») и регулируют права и обязанности Разработчика и Пользователя в связи с использованием Приложения.\r\n\r\n          <Spacing size={2} />\r\n          2.2. Настоящие Правила являются официальным типовым документом Разработчиков. Настоящие Правила применяются к указанным отношениям в случае, если Разработчик не утвердил и не применяет свои собственные Правила оказания услуг, ссылка на которые предоставляется Пользователям в окне запуска Приложения и в настройках Приложения.\r\n\r\n          <Spacing size={2} />\r\n          2.3. Действующая редакция Правил, являющихся публичным документом, разработана Администрацией Сайта и доступна любому пользователю сети Интернет при переходе по гипертекстовой ссылке «Правила оказания услуг разработчика приложения».\r\n          Администрация Сайта вправе вносить изменения в настоящие Правила. При внесении изменений в Правила Администрация Сайта уведомляет об этом пользователей путем размещения новой редакции Правил на Сайте по постоянному адресу  <Link href='https://dev.vk.com/user-agreement'>https://dev.vk.com/user-agreement</Link> не позднее, чем за [10] дней до вступления в силу соответствующих изменений. Предыдущие редакции Правил хранятся в архиве документации Администрации Сайта.\r\n\r\n          <Spacing size={2} />\r\n          2.4. Положения настоящих Правил рассматриваются как публичная оферта в соответствии со ст. 437 Гражданского кодекса Российской Федерации. Пользователь обязан полностью ознакомиться с настоящими Правилами до первого запуска Приложения. Запуск Приложения Пользователем означает полное и безоговорочное принятие Пользователем настоящих Правил в соответствии со ст. 438 Гражданского кодекса Российской Федерации. Положения настоящих Правил могут быть приняты только в целом без каких-либо изъятий.\r\n\r\n          <Spacing size={2} />\r\n          2.5. Ссылка на настоящие Правила после запуска Приложения доступна в настройках Приложения, во вкладке «Информация о разработчике». Пользователь обязан время от времени проверять текущую версию настоящих Правил в настройках Приложения на предмет внесения изменений и/или дополнений. Продолжение использования Приложения Пользователем после вступления в силу соответствующих изменений настоящих Правил означает принятие и согласие Пользователя с такими изменениями и/или дополнениями.\r\n\r\n          <Spacing size={20} />\r\n          3. Права и обязанности Сторон\r\n          <Spacing size={20} />\r\n          3.1. Пользователь обязан ознакомиться с информацией о Разработчике, политикой конфиденциальности Разработчика и настоящими Правилами до первого запуска Приложения. При несогласии с положениями указанных документов Пользователь обязан воздержаться от запуска и использования Приложения.\r\n\r\n          <Spacing size={2} />\r\n          3.2. Пользователь обязуется использовать Приложение в личных некоммерческих целях. Запрещается предлагать услуги, связанные с использованием Приложения, другим Пользователям в целях извлечения прибыли. Запрещается использование каких-либо автоматических скриптов («программы-роботы») или иных средств, позволяющих взаимодействовать с Приложением без участия Пользователя. Запрещается совершать действия, направленные на нарушение нормального функционирования Приложения, и использовать специальные программы, содержащие вредоносные компоненты («вирусы»).\r\n\r\n          <Spacing size={2} />\r\n          3.3. Разработчик вправе в любое время вносить изменения в функционал Приложения, интерфейс и/или содержание Приложения с уведомлением Пользователей или без такового.\r\n\r\n\r\n          3.4. Разработчик вправе в одностороннем порядке устанавливать стоимость отдельных сервисов, предлагаемых Приложением, выраженную во внутренней валюте Приложений - голосах. Пользователь обязуется добросовестно использовать способы пополнения личного счета Пользователя в Приложении и дальнейшего использования голосов. При обнаружении Разработчиком фактов неправомерного пополнения личного счета Пользователя в Приложении Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг либо в одностороннем порядке уменьшить личный счет Пользователя в Приложении.\r\n\r\n          <Spacing size={2} />\r\n          3.5. Разработчик вправе запросить и использовать информацию о Пользователе исключительно в целях предоставления услуг по использованию Приложения. Использование информации о Пользователе регулируется политикой конфиденциальности Разработчика.\r\n\r\n          <Spacing size={2} />\r\n          3.6. Разработчик обязан обеспечить техническую поддержку Приложения и предоставить простой способ связи для обращений Пользователей по всем возникающим в процессе использования Приложения вопросам в разделе «Помощь» и в настройках Приложения, во вкладке «Информация о разработчике».\r\n\r\n          <Spacing size={20} />\r\n          4. Интеллектуальная собственность\r\n          <Spacing size={20} />\r\n          4.1. Пользователь признает, что Приложение, его интерфейс и содержание (включая, но не ограничиваясь, элементы дизайна, текст, графические изображения, иллюстрации, видео, скрипты, программы, музыка, звуки и другие объекты и их подборки, связанные с Приложением) защищены авторским правом, товарными знаками, патентами и иными правами, которые принадлежат Разработчику или иным законным правообладателям.\r\n\r\n          <Spacing size={2} />\r\n          4.2. Разработчик предоставляет Пользователю неисключительную лицензию на использование Приложения, а именно на запуск и дальнейшую эксплуатацию Приложения исключительно в целях удовлетворения личных, семейных, домашних или иных не связанных с предпринимательской деятельностью нужд, без права передачи данной лицензии третьим лицам и без права предоставления сублицензий на использование Приложения третьим лицам.\r\n\r\n          <Spacing size={2} />\r\n          4.3. Пользователь не вправе воспроизводить, копировать, изменять, уничтожать, перерабатывать (включая выполнение любого перевода или локализации), продавать, сдавать в прокат, опубликовывать, скачивать, иным образом распространять Приложение либо его компоненты, декомпилировать или иным образом пытаться извлечь исходный код компонентов Приложения, являющихся программным обеспечением, а также изменять функционал Приложения без предварительного письменного согласия Разработчика.\r\n          <Spacing size={2} />\r\n\r\n          4.4. Пользователь не вправе удалять и/или изменять какую-либо информацию, размещенную Разработчиком в рамках Приложения, в том числе знаки охраны авторского права и средств индивидуализации.\r\n          <Spacing size={2} />\r\n\r\n          4.5. Лицензия, указанная в пункте 4.2 настоящих Правил, предоставляется на весь срок использования Приложения Пользователем. Данная лицензия распространяется также на все обновления и/или дополнительные компоненты Приложения, которые могут быть созданы и предоставлены Разработчиком в будущем.\r\n          <Spacing size={2} />\r\n\r\n          4.6. Если иное явным образом не установлено в настоящих Правилах, ничто в настоящих Правилах не может быть рассмотрено как передача исключительных прав на Приложение и/или его компоненты Пользователю.\r\n          <Spacing size={20} />\r\n\r\n          5. Гарантии и Ответственность\r\n          <Spacing size={20} />\r\n          5.1. Пользователь признает и соглашается с тем, что Приложение предоставляется на условиях «как есть». Разработчик не предоставляет гарантий в отношении последствий использования Приложения, взаимодействия Приложения с другим программным обеспечением.\r\n          <Spacing size={2} />\r\n\r\n          5.2. Разработчик не предоставляет гарантий того, что Приложение может подходить для конкретных целей использования. Пользователь признает и соглашается с тем, что результат использования Приложения может не соответствовать ожиданиям Пользователя.\r\n          <Spacing size={2} />\r\n\r\n          5.3. Разработчик или иные правообладатели ни при каких обстоятельствах не несут ответственность за любой косвенный, случайный, неумышленный ущерб (включая упущенную выгоду, ущерб, причиненный утратой данных), вызванный в связи с использованием Приложения или невозможностью его использования, в том числе в случае отказа работы Приложения или иного перерыва в использовании Приложения, даже если Разработчик предупреждал или указывал на возможность такого ущерба.\r\n          <Spacing size={2} />\r\n\r\n          5.4. Пользователь самостоятельно несет ответственность за свои действия по использованию Приложения, в том числе за действия по размещению и передаче информации, комментариев, изображений и иных материалов другим Пользователям с помощью Приложения. Пользователь самостоятельно несет ответственность за соблюдение прав третьих лиц, применимого законодательства, настоящих Правил, каких-либо правил и/или обязательных инструкций Разработчика, размещенных в разделе «Помощь» Приложения, при использовании Приложения.\r\n          <Spacing size={2} />\r\n\r\n          5.5. За нарушения, допущенные Пользователем, Разработчик вправе отказать Пользователю в дальнейшем предоставлении услуг или ограничить такое предоставление полностью или частично с уведомлением Пользователя или без такового.\r\n          <Spacing size={20} />\r\n\r\n          6. Заключительные положения\r\n          <Spacing size={20} />\r\n          6.1. Пользователь вправе в любой момент отказаться от предоставления услуг посредством удаления Приложения со своей персональной страницы на Сайте.\r\n          <Spacing size={2} />\r\n\r\n          6.2. Разработчик вправе в любой момент приостанавливать или прекращать функционирование Приложения с уведомлением Пользователей или без такового.\r\n          <Spacing size={2} />\r\n\r\n          6.3. Настоящие Правила регулируются и толкуются в соответствии с законодательством Российской Федерации. Вопросы, не урегулированные Правилами, подлежат разрешению в соответствии с законодательством Российской Федерации.\r\n          <Spacing size={2} />\r\n\r\n          6.4. В случае возникновения любых споров или разногласий, связанных с исполнением настоящих Правил, Разработчик и Пользователь приложат все усилия для их разрешения путем проведения переговоров между ними. В случае, если споры не будут разрешены путем переговоров, споры подлежат разрешению в порядке, установленном действующим законодательством Российской Федерации.\r\n          <Spacing size={2} />\r\n\r\n          6.5. Настоящие Правила составлены на русском языке и могут быть предоставлены Пользователю для ознакомления на другом языке. В случае расхождения русскоязычной версии Правил и версии Правил на ином языке, применяются положения русскоязычной версии настоящих Правил.\r\n          <Spacing size={2} />\r\n\r\n          6.6. Если по тем или иным причинам одно или несколько положений настоящих Правил будут признаны недействительными или не имеющими юридической силы, это не оказывает влияния на действительность или применимость остальных положений.\r\n          <Spacing size={2} />\r\n        </Text>\r\n      </Div>\r\n\r\n    </Panel>\r\n  );\r\n})","import { Panel, Button, FixedLayout, PanelHeaderBack } from '@vkontakte/vkui';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport '../css/intro.css';\r\nimport State from '../store/State';\r\nimport { routes } from '../types/enums';\r\nimport Analytics from '../store/Analytics';\r\n\r\nexport const IntroSecond = ({ id }: IpanelProps) => {\r\n  return (\r\n    <Panel id={id}>\r\n      <FixedLayout vertical='top'>\r\n\r\n        <PanelHeaderBack onClick={() => window.history.back()} />\r\n\r\n      </FixedLayout>\r\n      <div className='intro'>\r\n        <div className='intro-header'>Добро пожаловать<br />на <b>фабрику мемов!</b></div>\r\n        <div className='intro-logo' />\r\n        <div className='intro-notif'>\r\n          Подпишись на уведомления,\r\n          <br />чтобы не пропустить самое интересное:\r\n          <br /> - Новые публикации\r\n          <br /> - Публикация вашего контента</div>\r\n        <div className='intro-button'>\r\n          <Button size='m' onClick={() => {\r\n            bridge.send('VKWebAppAllowNotifications', {}).then(res => {\r\n              if (res.result) {\r\n                State.setActivePanel(routes.HOME);\r\n                State.setHistory([routes.HOME]);\r\n                Analytics.track('tutorial', 'subscribe');\r\n              }\r\n            });\r\n          }}\r\n          >\r\n            Подписаться\r\n          </Button>\r\n          <Button\r\n            size='m'\r\n            mode=\"tertiary\"\r\n            style={{ display: 'block', margin: '10px auto 0 auto' }}\r\n            onClick={() => {\r\n              State.setActivePanel(routes.HOME);\r\n              State.setHistory([routes.HOME]);\r\n              Analytics.track('tutorial', 'subscribe');\r\n            }}\r\n          >\r\n            Пропустить\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Panel>\r\n  );\r\n}","import { Div, SimpleCell, Switch } from \"@vkontakte/vkui\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Actions from \"../../store/Actions\";\r\nimport State from \"../../store/State\";\r\n\r\nexport const BanSwitcher = observer(() => {\r\n  const value = State.getUserProfile()?.ban_comments\r\n\r\n  const onClick = () => {\r\n    Actions.banUser(State.getUserProfile(), !value)\r\n  }\r\n\r\n  return (<>\r\n    {State.isAdmin() ?\r\n      <Div style={{ display: 'flex', justifyContent: 'center' }}>\r\n        <SimpleCell\r\n          Component=\"label\"\r\n          after={<Switch onClick={onClick} defaultChecked={State.getUserProfile()?.ban_comments} />} >\r\n          Бан на комментарии\r\n        </SimpleCell>\r\n      </Div>\r\n      : null}\r\n  </>\r\n  )\r\n});\r\n","import { Icon28CupOutline } from \"@vkontakte/icons\";\r\nimport { Avatar, Div, Link, Text, usePlatform } from \"@vkontakte/vkui\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport State from \"../../store/State\";\r\nimport '../../css/profile.css'\r\n\r\nexport const UserHeader = observer(({ color }: { color: string }) => {\r\n  const platform = usePlatform()\r\n  return (\r\n    <Div style={{ display: 'flex', justifyContent: 'center', flexDirection: 'row', alignItems: 'center', gap: platform !== 'vkcom' ? '20px' : '50px' }}>\r\n      <div className='profile-info-item'>\r\n        <Text>Топ недели</Text>\r\n        <Icon28CupOutline fill={color} style={{ transform: 'scale(2)', margin: '15px 0' }} />\r\n        <Text>{State.getUserProfile()?.top_week}</Text>\r\n      </div>\r\n      <div className='profile-info-item profile-info-item-avatar'>\r\n        <Link\r\n          href={`https://vk.com/id${State.getUserProfile()?.id}`}\r\n          target='_blank'\r\n          style={{ textDecoration: 'none', color: 'black', display: 'flex', flexDirection:'column', justifyContent: 'center', alignItems: 'center' }}\r\n        >\r\n          <Text weight=\"1\" style={{marginLeft: '12px', fontSize: platform !== 'vkcom' ? '18px' : '24px', wordBreak: 'break-word', lineHeight: '28px'}}>\r\n            {State.getUserProfile()?.name}\r\n          </Text>\r\n          <Avatar src={State.getUserProfile()?.avatar} style={{ margin: '40px 0 20px 15px', transform: 'scale(1.3)' }} size={96} />\r\n        </Link>\r\n      </div>\r\n      <div className='profile-info-item'>\r\n        <Text>Топ участников</Text>\r\n        <Icon28CupOutline fill={color} style={{ transform: 'scale(2)', margin: '15px 0' }} />\r\n        <Text>{State.getUserProfile()?.top_all}</Text>\r\n      </div>\r\n    </Div>\r\n  )\r\n});\r\n\r\nexport default UserHeader\r\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon56LikeOutline\", \"like_outline_56\", \"0 0 56 56\", '<symbol viewBox=\"0 0 56 56\" xmlns=\"http://www.w3.org/2000/svg\" id=\"like_outline_56\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h56v56H0z\" /><path d=\"M18.29 11C11.501 11 6 16.502 6 23.29c0 6.865 2.752 10.308 14.455 19.41l5.396 4.198a3.5 3.5 0 0 0 4.298 0l5.396-4.197C47.248 33.598 50 30.155 50 23.289 50 16.502 44.498 11 37.71 11c-3.66 0-6.91 1.736-9.71 5.098C25.2 12.736 21.95 11 18.29 11Zm0 3c3.129 0 5.933 1.756 8.476 5.434l.206.297a1.25 1.25 0 0 0 2.056 0l.206-.297C31.777 15.756 34.58 14 37.71 14A9.29 9.29 0 0 1 47 23.29c0 5.616-2.29 8.482-13.297 17.043l-5.396 4.197a.5.5 0 0 1-.614 0l-5.396-4.197C11.29 31.772 9 28.906 9 23.289A9.29 9.29 0 0 1 18.29 14Z\" fill=\"currentColor\" fill-rule=\"nonzero\" /></g></symbol>', 56, 56);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon56ShareOutline\", \"share_outline_56\", \"0 0 56 56\", '<symbol viewBox=\"0 0 56 56\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" id=\"share_outline_56\"><path d=\"M31.325 8.38c.554 0 1.09.198 1.512.556l20.335 17.285a2.334 2.334 0 0 1 .266 3.29 2.334 2.334 0 0 1-.266.268L32.837 47.063a2.334 2.334 0 0 1-3.29-.266l-.114-.145a2.335 2.335 0 0 1-.443-1.367v-8.472l-.326.007c-10.584.245-18.085 2.653-22.548 7.132l-.256.262a1.997 1.997 0 0 1-2.817.054 2 2 0 0 1-.569-1.89l.109-.468c3.43-14.416 12.22-22.063 26.09-22.67l.317-.012v-8.513a2.334 2.334 0 0 1 2.335-2.334zM50.632 28 31.99 12.154v8.547a1.5 1.5 0 0 1-1.5 1.5l-.443.003c-12.209.134-20.028 5.839-23.701 17.35l-.105.335.21-.156c5.466-3.981 13.488-5.934 24.04-5.934l.144.007a1.5 1.5 0 0 1 1.355 1.493v8.546L50.632 28z\" fill=\"currentColor\" /></symbol>', 56, 56);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon56CommentsOutline\", \"comments_outline_56\", \"0 0 56 56\", '<symbol fill=\"none\" viewBox=\"0 0 56 56\" xmlns=\"http://www.w3.org/2000/svg\" id=\"comments_outline_56\"><path d=\"m27.234 42.143.965 1.149zm-10.09 8.477-.966-1.149zM8.5 15a1.5 1.5 0 0 0 0-3zm20.895 20.672-.965 1.148zm9.462 7.948.965-1.149zM5 36.5v-18H2v18zm9.5 3.5h-6v3h6zm2.5 9.854V42.5h-3v7.354zm9.27-8.86-10.092 8.477 1.93 2.297 10.091-8.476zm1.93 2.298c.223-.189.507-.292.8-.292v-3c-.999 0-1.966.352-2.73.995zM14 49.854c0 2.124 2.482 3.28 4.108 1.914l-1.93-2.297a.5.5 0 0 1 .822.383zM14.5 43a.5.5 0 0 1-.5-.5h3a2.5 2.5 0 0 0-2.5-2.5zM2 36.5A6.5 6.5 0 0 0 8.5 43v-3A3.5 3.5 0 0 1 5 36.5zm3-18A3.5 3.5 0 0 1 8.5 15v-3A6.5 6.5 0 0 0 2 18.5zM46.5 5h-28v3h28zM12 11.5v18h3v-18zm41 18v-18h-3v18zM41.5 36h5v-3h-5zm.5 6.854V35.5h-3v7.354zM18.5 36h7.679v-3H18.5zm9.93.82 9.462 7.948 1.93-2.297-9.463-7.948zM26.179 36a3.5 3.5 0 0 1 2.25.82l1.93-2.297A6.5 6.5 0 0 0 26.18 33zM39 42.854a.5.5 0 0 1 .822-.383l-1.93 2.297c1.626 1.366 4.108.21 4.108-1.914zM41.5 33a2.5 2.5 0 0 0-2.5 2.5h3a.5.5 0 0 1-.5.5zm8.5-3.5a3.5 3.5 0 0 1-3.5 3.5v3a6.5 6.5 0 0 0 6.5-6.5zm-38 0a6.5 6.5 0 0 0 6.5 6.5v-3a3.5 3.5 0 0 1-3.5-3.5zM18.5 5a6.5 6.5 0 0 0-6.5 6.5h3A3.5 3.5 0 0 1 18.5 8zm28 3a3.5 3.5 0 0 1 3.5 3.5h3A6.5 6.5 0 0 0 46.5 5z\" fill=\"currentColor\" /></symbol>', 56, 56);\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon56DownloadOutline\", \"download_outline_56\", \"0 0 56 56\", '<symbol viewBox=\"0 0 56 56\" xmlns=\"http://www.w3.org/2000/svg\" id=\"download_outline_56\"><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M0 0h56v56H0z\" /><path d=\"M41.5 44a1.5 1.5 0 0 1 0 3h-28a1.5 1.5 0 0 1 0-3h28Zm-14-39.5A1.5 1.5 0 0 1 29 6v28.378l10.44-10.439a1.5 1.5 0 0 1 2.007-.103l.114.103a1.5 1.5 0 0 1 0 2.122l-13 13a1.5 1.5 0 0 1-2.122 0l-13-13a1.5 1.5 0 0 1 2.122-2.122L26 34.378V6a1.5 1.5 0 0 1 1.356-1.493Z\" fill=\"currentColor\" fill-rule=\"nonzero\" /></g></symbol>', 56, 56);\n","import { Icon56CommentsOutline, Icon56DownloadOutline, Icon56LikeOutline, Icon56ShareOutline } from \"@vkontakte/icons\";\r\nimport { Div, Text, usePlatform } from \"@vkontakte/vkui\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport '../../css/profile.css'\r\nimport State from \"../../store/State\";\r\nimport { memes, routes } from \"../../types/enums\";\r\n\r\nexport const UserInfo = observer(({ color }: { color: string }) => {\r\n  const platform = usePlatform()\r\n\r\n  const onClickMeme = () => {\r\n    State.goToPage(routes.USERMEMES);\r\n    State.setCategory(memes.USER)\r\n  }\r\n  \r\n  return (\r\n    <Div style={{ display: 'flex', justifyContent: 'space-between', width: '100%', gap: '10px' }}>\r\n      <div className='profile-info-item profile-info-item-basis' >\r\n        <Text weight='2' style={{ fontSize: platform !== 'vkcom' ? '13px' : '16px' }}>Лайки</Text>\r\n        <Icon56LikeOutline fill={color} style={{ transform: 'scale(0.8)' }} />\r\n        <Text weight='3'>{State.getUserProfile()?.likes}</Text>\r\n      </div>\r\n      <div className='profile-info-item profile-info-item-basis' >\r\n        <Text weight='2' style={{ fontSize: platform !== 'vkcom' ? '13px' : '16px' }}>Репосты</Text>\r\n        <Icon56ShareOutline fill={color} style={{ transform: 'scale(0.8)' }} />\r\n        <Text weight='3'>{State.getUserProfile()?.share}</Text>\r\n      </div>\r\n      <div className='profile-info-item profile-info-item-basis' >\r\n        <Text weight='2' style={{ fontSize: platform !== 'vkcom' ? '13px' : '16px' }}>Комменты</Text>\r\n        <Icon56CommentsOutline fill={color} style={{ transform: 'scale(0.8)' }} />\r\n        <Text weight='3'>{State.getUserProfile()?.comments}</Text>\r\n      </div>\r\n      <div className='profile-info-item profile-info-item-basis profile-info-item-meme' onClick={onClickMeme}>\r\n        <Text weight='2' style={{ fontSize: platform !== 'vkcom' ? '13px' : '16px' }}>Мемы</Text>\r\n        <Icon56DownloadOutline fill={color} style={{ transform: 'scale(0.8)' }} />\r\n        <Text weight='3'>{State.getUserProfile()?.memes}</Text>\r\n      </div>\r\n    </Div>\r\n  )\r\n});\r\n\r\nexport default UserInfo\r\n","import { Div, Spinner } from \"@vkontakte/vkui\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport State from \"../../store/State\";\r\nimport { BanSwitcher } from \"./BanSwitcher\";\r\nimport UserHeader from \"./UserHeader\";\r\nimport UserInfo from \"./UserInfo\";\r\n\r\nconst color = 'rgb(52,163,255)'\r\n\r\nexport const UserProfileWrapper = observer(() => {\r\n\r\n  return (<>\r\n    <Div\r\n      style={{ height: '75vh', display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}\r\n    >\r\n      {State.getLoading() ?\r\n        <Spinner size=\"large\" />\r\n        : <>\r\n          <UserHeader color={color} />\r\n          <UserInfo color={color} />\r\n        </>}\r\n    </Div>\r\n    <BanSwitcher />\r\n  </>\r\n  )\r\n});\r\n\r\nexport default UserProfileWrapper\r\n","import {\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  FixedLayout,\r\n} from '@vkontakte/vkui';\r\nimport Tabbar from '../components/UI/Tabbar';\r\nimport { observer } from 'mobx-react-lite';\r\nimport '../css/profile.css';\r\nimport UserProfileWrapper from '../components/UserProfile/UserProfileWrapper';\r\n\r\n\r\nexport const UserProfile = observer(({ id }: IpanelProps) => {\r\n\r\n  return (\r\n    <Panel id={id}>\r\n      <FixedLayout vertical='top'>\r\n        <PanelHeader\r\n          before={<PanelHeaderBack onClick={() => window.history.back()} />}\r\n          style={{paddingRight: '24px'}}\r\n        >\r\n          Наш герой\r\n        </PanelHeader>\r\n      </FixedLayout>\r\n      <UserProfileWrapper/>\r\n      <Tabbar />\r\n    </Panel>\r\n  );\r\n})","import {\r\n  Panel,\r\n  PanelHeader,\r\n  PanelHeaderBack,\r\n  FixedLayout,\r\n} from '@vkontakte/vkui';\r\nimport Tabbar from '../components/UI/Tabbar';\r\nimport { observer } from 'mobx-react-lite';\r\nimport '../css/profile.css';\r\nimport State from '../store/State';\r\nimport Memes from '../components/Memes/Memes';\r\n\r\n\r\nexport const UserMemes = observer(({ id }: IpanelProps) => {\r\n\r\n  return (\r\n    <Panel id={id}>\r\n      <FixedLayout vertical='top'>\r\n        <PanelHeader\r\n          before={<PanelHeaderBack onClick={() => window.history.back()} />}\r\n          style={{paddingRight: '24px'}}\r\n        >\r\n          Мемы пользователя \"{State.getUserProfile().name}\"\r\n        </PanelHeader>\r\n      </FixedLayout>\r\n      {State.getPlatform() === 'mobile_iphone' ? <div style={{ width: '100%', height: '42px' }}></div> : null}\r\n\t\t\t<div style={{ width: '100%', height: '50px' }}></div>\r\n        <Memes/>\r\n      <Tabbar />\r\n    </Panel>\r\n  );\r\n})","import {\r\n  View,\r\n} from '@vkontakte/vkui';\r\nimport { observer } from 'mobx-react-lite';\r\nimport Admin from \"./panels/Admin\";\r\nimport { Home } from \"./panels/Home\";\r\nimport { IntroFirst } from \"./panels/IntroFirst\";\r\nimport Loading from \"./panels/Loading\";\r\nimport { MyProfile } from \"./panels/MyProfile\";\r\nimport { Rating } from \"./panels/Rating\";\r\nimport State from \"./store/State\";\r\nimport { routes } from \"./types/enums\";\r\nimport { useCallback, useEffect } from 'react'\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport { Rules } from './panels/Rules';\r\nimport { IntroSecond } from './panels/IntroSecond';\r\nimport { UserProfile } from './panels/UserProfile';\r\nimport { UserMemes } from './panels/UserMemes';\r\n\r\nexport const ViewCustom = observer(() => {\r\n  const isFirst = State.getHistory().length === 1;\r\n  useEffect(() => {\r\n    bridge.send('VKWebAppSetSwipeSettings', { history: isFirst });\r\n  }, [isFirst])\r\n  const handleSwipeBackStart = useCallback(() => {\r\n    State.setSwipe(true)\r\n  }, []);\r\n\r\n  const handleSwipeBack = useCallback(() => {\r\n    if (!State.getSwipe()) return\r\n    State.goBack();\r\n    State.setSwipe(false)\r\n  }, []);\r\n  return (\r\n    <View\r\n      activePanel={State.getActivePanel()} // Активная панель равная стейту.\r\n      history={State.getHistory()} // Ставим историю из массива панелей.\r\n      onSwipeBackStart={handleSwipeBackStart}\r\n      onSwipeBack={handleSwipeBack} // При свайпе выполняется данная функция.\r\n    >\r\n\r\n      <Loading id={routes.LOADING} />\r\n      <IntroFirst id={routes.INTROFIRST} />\r\n      <IntroSecond id={routes.INTROSECOND} />\r\n      <Home id={routes.HOME} />\r\n      <Rating id={routes.RATING} />\r\n      <MyProfile id={routes.MYPROFILE} />\r\n      <UserProfile id={routes.USERPROFILE} />\r\n      <Admin id={routes.ADMIN} />\r\n      <Rules id={routes.RULES} />\r\n      <UserMemes id={routes.USERMEMES}/>\r\n    </View>\r\n  )\r\n});\r\n\r\nexport default View\r\n","import { makeIcon } from \"../SvgIcon\";\nexport default makeIcon(\"Icon28CheckCircleOutline\", \"check_circle_outline_28\", \"0 0 28 28\", '<symbol viewBox=\"0 0 28 28\" xmlns=\"http://www.w3.org/2000/svg\" id=\"check_circle_outline_28\"><g fill-rule=\"nonzero\" fill=\"none\"><path d=\"M0 0h28v28H0z\" /><path d=\"M14 2c6.627 0 12 5.373 12 12s-5.373 12-12 12S2 20.627 2 14 7.373 2 14 2Zm0 2C8.477 4 4 8.477 4 14s4.477 10 10 10 10-4.477 10-10S19.523 4 14 4Zm4.29 6.29c.39-.39 1.03-.39 1.42 0 .39.39.39 1.03 0 1.42l-7.003 6.997a1 1 0 0 1-1.414 0l-3.5-3.5a1 1 0 0 1 1.414-1.414L12 16.586Z\" fill=\"currentColor\" /></g></symbol>', 28, 28);\n","import { Icon28CheckCircleOutline } from '@vkontakte/icons';\r\nimport { Button, FormItem, ModalCard, Radio, Snackbar, Spacing, Text } from '@vkontakte/vkui';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useState } from 'react';\r\nimport Actions from '../../store/Actions';\r\nimport State from '../../store/State';\r\nimport { reports } from '../../types/enums';\r\n\r\nconst reportsArr = [\r\n  { label: 'Спам', value: reports.SPAM },\r\n  { label: 'Насилие и вражда', value: reports.VIOLENCE },\r\n  { label: 'Обман', value: reports.SCAM },\r\n  { label: 'Запрещенные товары', value: reports.FORBIDDEN },\r\n  { label: 'Порнография', value: reports.PORNO }\r\n]\r\n\r\nconst reportSucces = () => {\r\n  if (State.getSnackbar()) return;\r\n  State.setSnackbar(\r\n    <Snackbar\r\n      duration={2000}\r\n      onClose={() => State.setSnackbar(null)}\r\n      before={<Icon28CheckCircleOutline fill=\"var(--vkui--color_icon_positive)\" />}\r\n    >\r\n      Жалоба успешно отправлена\r\n    </Snackbar>,\r\n  );\r\n}\r\n\r\nexport const ModalReport = observer(({ id }: ImodalProps) => {\r\n\r\n  const [value, setValue] = useState(null)\r\n  const onChange = (value) => {\r\n    setValue(value)\r\n  }\r\n\r\n  const closeModal = (success?: boolean) => {\r\n    if (State.getReportMeme()) {\r\n      if (success) {\r\n        Actions.reportMeme(State.getReportMeme(), value);\r\n        reportSucces();\r\n      }\r\n      State.setActiveModal(null);\r\n      State.setReportMeme(null);\r\n    } else {\r\n      if (success) {\r\n        Actions.reportComment(State.getReportComment(), value);\r\n        reportSucces();\r\n      }\r\n      State.setActiveModal(null);\r\n      State.setReportComment(null);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ModalCard\r\n      id={id}\r\n      onClose={() => closeModal()}\r\n      header=\"Пожаловаться\"\r\n      actions={\r\n        <>\r\n          <Button\r\n            size=\"l\"\r\n            mode=\"secondary\"\r\n            stretched\r\n            onClick={() => closeModal()}\r\n          >\r\n            Отмена\r\n          </Button>\r\n          <Button\r\n            size=\"l\"\r\n            mode=\"primary\"\r\n            stretched\r\n            disabled={value === null}\r\n            onClick={() => closeModal(true)}\r\n          >\r\n            Отправить\r\n          </Button>\r\n        </>\r\n      }\r\n    >\r\n      <Spacing size={30} />\r\n      <Text weight='1' style={{ textAlign: 'center' }}>\r\n        Что именно вам кажется недопустимым в этом материале?\r\n      </Text>\r\n      <Spacing size={30} />\r\n      <FormItem>\r\n        {reportsArr.map((report) => {\r\n          return (\r\n            <Radio key={report.value} name='radio' value={report.value} onClick={() => onChange(report.value)}>\r\n              {report.label}\r\n            </Radio>\r\n          )\r\n        })}\r\n      </FormItem>\r\n    </ModalCard>\r\n  )\r\n});\r\n\r\nexport default ModalReport","import { Button, ModalCard, Spacing, Text } from '@vkontakte/vkui';\r\nimport { observer } from 'mobx-react-lite';\r\nimport State from '../../store/State';\r\n\r\nexport const ModalReportInfo = observer(({ id }: ImodalProps) => {\r\n  const onClose = () => {\r\n    State.setActiveModal(null)\r\n    State.setReportInfo(null)\r\n  }\r\n\r\n  return (\r\n    <ModalCard\r\n      id={id}\r\n      onClose={() => onClose()}\r\n      header=\"Жалобы\"\r\n      actions={\r\n        <Button\r\n          size=\"l\"\r\n          mode=\"primary\"\r\n          stretched\r\n          onClick={() => onClose()}\r\n        >\r\n          Понятно\r\n        </Button>\r\n      }\r\n    >\r\n      <Text weight='3' style={{ textAlign: 'center' }}>\r\n        <Spacing size={20} />\r\n        Спам - {State.getReportInfo()?.spam || 0}\r\n        <Spacing size={3} />\r\n        Насилие и вражда - {State.getReportInfo()?.violence || 0}\r\n        <Spacing size={3} />\r\n        Обман - {State.getReportInfo()?.scam || 0}\r\n        <Spacing size={3} />\r\n        Запрещенные товары - {State.getReportInfo()?.forbidden || 0}\r\n        <Spacing size={3} />\r\n        Порнография - {State.getReportInfo()?.porno || 0}\r\n        <Spacing size={15} />\r\n      </Text>\r\n    </ModalCard>\r\n  )\r\n});\r\n\r\nexport default ModalReportInfo","import { Button, ModalCard, Spacing, Text } from '@vkontakte/vkui';\r\nimport { observer } from 'mobx-react-lite';\r\nimport State from '../../store/State';\r\n\r\nexport const ModalRules = observer(({ id }: ImodalProps) => {\r\n\r\n  return (\r\n    <ModalCard\r\n      id={id}\r\n      onClose={() => State.setActiveModal(null)}\r\n      header=\"Правила\"\r\n      subheader={'Баллы начисляются за разные действия'}\r\n      actions={\r\n        <Button\r\n          size=\"l\"\r\n          mode=\"primary\"\r\n          stretched\r\n          onClick={() => State.setActiveModal(null)}\r\n        >\r\n          Понятно\r\n        </Button>\r\n      }\r\n    >\r\n      <Text weight='3' style={{ textAlign: 'center' }}>\r\n        <Spacing size={20} />\r\n        Лайк - 1\r\n        <Spacing size={3} />\r\n        Коммент - 3\r\n        <Spacing size={3} />\r\n        Поделиться - 5\r\n        <Spacing size={3} />\r\n        Загрузить мем - 10\r\n        <Spacing size={15} />\r\n      </Text>\r\n      <span style={{ textAlign: 'center', color: 'grey', fontSize: '13px', width: '80%', margin: '0 auto' }}>\r\n        Баллы за коммент и репост засчитываются только единожды за пост\r\n      </span>\r\n    </ModalCard>\r\n  )\r\n});\r\n\r\nexport default ModalRules","import { ModalRoot } from '@vkontakte/vkui';\r\nimport { observer } from 'mobx-react-lite';\r\nimport State from '../../store/State';\r\nimport { modals } from '../../types/enums';\r\nimport ModalReport from './ModalReport';\r\nimport ModalReportInfo from './ModalReportInfo';\r\nimport ModalRules from './ModalRules';\r\n\r\nexport const ModalsRootCustom = observer(() => {\r\n  const closeModals = () => {\r\n    State.setActiveModal(null);\r\n    State.setReportMeme(null);\r\n    State.setReportComment(null)\r\n    State.setReportInfo(null)\r\n  }\r\n  return (\r\n    <ModalRoot activeModal={State.getActiveModal()} onClose={() => closeModals()}>\r\n      <ModalRules id={modals.RULES} />\r\n      <ModalReport id={modals.REPORT} />\r\n      <ModalReportInfo id={modals.REPORTINFO} />\r\n    </ModalRoot >\r\n  )\r\n});\r\n\r\nexport default ModalsRootCustom\r\n","import {\r\n  AdaptivityProvider,\r\n  AppRoot,\r\n  ConfigProvider,\r\n  SplitLayout,\r\n  SplitCol,\r\n  usePlatform\r\n} from '@vkontakte/vkui';\r\nimport State from './store/State';\r\nimport { Observer } from 'mobx-react-lite';\r\nimport Actions from './store/Actions';\r\nimport { useEffect } from 'react'\r\nimport { ViewCustom } from './ViewCustom';\r\nimport Modals from './components/Modals/ModalsRootCustom';\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\nconst App = (): JSX.Element => {\r\n  const platformText = usePlatform()\r\n\r\n  useEffect(() => {\r\n    bridge.send(\"VKWebAppGetLaunchParams\").then(res => { State.setPlatform(res.vk_platform); State.setLauchParamsData(res) });\r\n    bridge.send(\"VKWebAppSetViewSettings\", {\r\n      status_bar_style: \"dark\",\r\n      action_bar_color: \"#ffffff\",\r\n    });\r\n    Actions.getData();\r\n    window.addEventListener('popstate', () => { State.goBack(); });\r\n    return () => {\r\n      window.removeEventListener('popstate', () => State.goBack());\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <ConfigProvider isWebView={true} platform={platformText}>\r\n      <AdaptivityProvider>\r\n        <AppRoot>\r\n          <Observer render={() => (\r\n            <>\r\n              <SplitLayout popout={State.getPopout()} modal={<Modals />}>\r\n                <SplitCol>\r\n                  <ViewCustom />\r\n                </SplitCol>\r\n              </SplitLayout>\r\n            </>\r\n          )} />\r\n        </AppRoot>\r\n      </AdaptivityProvider>\r\n    </ConfigProvider>\r\n  );\r\n}\r\n\r\nexport default App;","import App from './App';\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport ReactDOM from 'react-dom/client';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport './css/main.css';\r\nimport './types/interfaces';\r\n\r\nbridge.send('VKWebAppInit');\r\nReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n).render(<App />);"],"names":["sendEvent","subscribe","counter","promiseControllers","requestResolver","current","next","this","add","controller","customId","id","resolve","data","isSuccess","requestPromise","requestId","reject","event","detail","_a","__rest","method","props","Promise","request_id","__assign","EAdsFormats","BannerAdLayoutType","BannerAdLocation","EGrantedPermission","EGetLaunchParamsResponseLanguages","EGetLaunchParamsResponseGroupRole","EGetLaunchParamsResponsePlatforms","IS_CLIENT_SIDE","window","IS_ANDROID_WEBVIEW","Boolean","AndroidBridge","IS_IOS_WEBVIEW","webkit","messageHandlers","VKWebAppClose","IS_REACT_NATIVE_WEBVIEW","ReactNativeWebView","postMessage","IS_WEB","IS_MVK","test","location","search","EVENT_TYPE","DESKTOP_METHODS","__spreadArray","androidBridge","iosBridge","webBridge","parent","exports","REWARD","RESIZE","TOP","CAMERA","RU","ADMIN","DESKTOP_WEB","bridge","version","webFrameId","subscribers","listener","push","isWebView","isIframe","isEmbedded","handleEvent","map","fn","call","bridgeEventData","JSON","parse","type","frameId","navigator","userAgent","document","addEventListener","sendPromise","promisifySend","stringify","handler","params","connectVersion","send","unsubscribe","index","indexOf","splice","supports","includes","isStandalone","createVKBridge","applyMiddleware","middlewares","_i","arguments","apply","filter","item","length","middlewareAPI","args","chain","middleware","reduce","a","b","e","Object","value","module","utils","require","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","transitionalDefaults","AxiosError","CanceledError","parseProtocol","config","onCanceled","requestData","requestHeaders","headers","responseType","done","cancelToken","signal","removeEventListener","isFormData","isStandardBrowserEnv","request","XMLHttpRequest","auth","username","password","unescape","encodeURIComponent","Authorization","btoa","fullPath","baseURL","url","onloadend","responseHeaders","getAllResponseHeaders","response","responseText","status","statusText","err","open","toUpperCase","paramsSerializer","timeout","onreadystatechange","readyState","responseURL","setTimeout","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","ETIMEDOUT","xsrfValue","withCredentials","xsrfCookieName","read","undefined","xsrfHeaderName","forEach","val","key","toLowerCase","setRequestHeader","isUndefined","onDownloadProgress","onUploadProgress","upload","cancel","abort","aborted","protocol","ERR_BAD_REQUEST","bind","Axios","mergeConfig","axios","createInstance","defaultConfig","context","instance","prototype","extend","create","instanceConfig","CancelToken","isCancel","VERSION","toFormData","Cancel","all","promises","spread","isAxiosError","executor","TypeError","resolvePromise","promise","token","then","_listeners","i","l","onfulfilled","_resolve","message","reason","throwIfRequested","source","c","ERR_CANCELED","name","inherits","__CANCEL__","InterceptorManager","dispatchRequest","validator","validators","defaults","interceptors","configOrUrl","assertOptions","silentJSONParsing","boolean","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","Array","concat","shift","newConfig","onFulfilled","onRejected","error","getUri","generateHTTPMethod","isForm","code","Error","toJSON","description","number","fileName","lineNumber","columnNumber","stack","descriptors","defineProperties","defineProperty","from","customProps","axiosError","toFlatObject","obj","assign","handlers","use","options","eject","h","isAbsoluteURL","combineURLs","requestedURL","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","config1","config2","getMergedValue","target","isPlainObject","isArray","slice","mergeDeepProperties","prop","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","keys","configValue","validateStatus","ERR_BAD_RESPONSE","Math","floor","fns","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","toString","getDefaultAdapter","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isFileList","isObjectPayload","isObject","contentType","_FormData","env","FormData","rawValue","parser","encoder","isString","trim","stringifySafely","strictJSONParsing","maxContentLength","maxBodyLength","thisArg","encode","replace","serializedParams","parts","v","isDate","toISOString","join","hashmarkIndex","relativeURL","write","expires","path","domain","secure","cookie","isNumber","Date","toGMTString","match","RegExp","decodeURIComponent","remove","now","payload","originURL","msie","urlParsingNode","createElement","resolveURL","href","setAttribute","host","hash","hostname","port","pathname","charAt","requestURL","parsed","normalizedName","ignoreDuplicateOf","split","line","substr","exec","callback","arr","formData","convertValue","isTypedArray","Blob","Buffer","build","parentKey","fullKey","endsWith","toArray","el","append","pop","thing","deprecatedWarnings","formatMessage","opt","desc","opts","ERR_DEPRECATED","console","warn","schema","allowUnknown","ERR_BAD_OPTION_VALUE","result","ERR_BAD_OPTION","cache","kindOf","str","kindOfTest","getPrototypeOf","isFunction","hasOwnProperty","TypedArray","Uint8Array","constructor","pattern","ArrayBuffer","isView","pipe","product","assignValue","stripBOM","content","charCodeAt","superConstructor","sourceObj","destObj","merged","getOwnPropertyNames","searchString","position","String","lastIndex","charenc","utf8","stringToBytes","bin","bytesToString","bytes","escape","fromCharCode","base64map","crypt","rotl","n","rotr","endian","Number","randomBytes","random","bytesToWords","words","wordsToBytes","bytesToHex","hex","hexToBytes","parseInt","bytesToBase64","base64","triplet","j","base64ToBytes","imod4","pow","readFloatLE","isSlowBuffer","_isBuffer","md5","encoding","m","d","FF","_ff","GG","_gg","HH","_hh","II","_ii","aa","bb","cc","dd","x","s","t","_blocksize","_digestsize","digestbytes","asBytes","asString","ca","p","da","Set","ea","fa","ha","ia","ja","ka","la","ma","f","g","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","z","ra","sa","ta","pa","isNaN","qa","oa","removeAttribute","setAttributeNS","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","Symbol","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","iterator","Ka","La","A","Ma","Na","Oa","prepareStackTrace","set","Reflect","construct","k","displayName","Pa","tag","render","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","get","configurable","enumerable","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","body","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","cb","db","ownerDocument","eb","fb","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","children","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","setProperty","substring","tb","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","track","wbr","ub","vb","is","wb","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","clz32","pc","qc","log","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","ed","transition","fd","gd","hd","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","isTrusted","td","ud","view","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","repeat","locale","which","Rd","Td","width","height","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","de","ee","fe","ge","he","ie","le","color","date","datetime","email","month","range","tel","text","time","week","me","ne","oe","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Ie","Je","Ke","node","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","Ne","contentEditable","Oe","focusedElem","selectionRange","documentElement","start","end","selectionStart","selectionEnd","min","defaultView","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","D","of","has","pf","qf","rf","sf","capture","passive","J","u","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","char","ke","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","Gf","clearTimeout","Hf","Jf","queueMicrotask","catch","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","mode","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","defaultProps","Mg","Ng","Og","Pg","Qg","Rg","_currentValue","Sg","childLanes","Tg","dependencies","firstContext","lanes","Ug","Vg","memoizedValue","Wg","Xg","Yg","interleaved","Zg","$g","ah","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","bh","ch","eventTime","lane","dh","K","eh","fh","gh","q","r","y","hh","ih","jh","Component","refs","kh","nh","isMounted","_reactInternals","enqueueSetState","L","lh","mh","enqueueReplaceState","enqueueForceUpdate","oh","shouldComponentUpdate","isPureReactComponent","ph","contextType","state","updater","qh","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","rh","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","sh","ref","_owner","_stringRef","th","uh","vh","wh","xh","yh","implementation","zh","Ah","Bh","Ch","Dh","Eh","Fh","Gh","Hh","Ih","tagName","Jh","Kh","Lh","M","Mh","revealOrder","Nh","Oh","_workInProgressVersionPrimary","Ph","ReactCurrentDispatcher","Qh","Rh","N","O","P","Sh","Th","Uh","Vh","Q","Wh","Xh","Yh","Zh","$h","ai","bi","ci","baseQueue","queue","di","ei","fi","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","gi","hi","ii","ji","ki","getSnapshot","li","mi","R","ni","lastEffect","stores","oi","pi","qi","ri","destroy","deps","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","Ci","Di","Ei","Fi","Gi","Hi","Ii","Ji","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ki","digest","Li","Mi","Ni","WeakMap","Oi","Pi","Qi","Ri","getDerivedStateFromError","componentDidCatch","Si","componentStack","Ti","pingCache","Ui","Vi","Wi","Xi","ReactCurrentOwner","Yi","Zi","$i","aj","bj","compare","cj","dj","ej","baseLanes","cachePool","transitions","fj","gj","hj","ij","jj","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","kj","lj","pendingContext","mj","Aj","Cj","Dj","nj","oj","pj","fallback","qj","rj","tj","dataset","dgst","uj","vj","_reactRetry","sj","subtreeFlags","wj","xj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","yj","Ej","S","Fj","Gj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","size","createElementNS","autoFocus","createTextNode","T","Hj","Ij","Jj","Kj","U","Lj","WeakSet","V","Mj","W","Nj","Oj","Qj","Rj","Sj","Tj","Uj","Vj","Wj","insertBefore","_reactRootContainer","Xj","X","Yj","Zj","ak","onCommitFiberUnmount","componentWillUnmount","bk","ck","dk","ek","fk","isHidden","gk","hk","display","ik","jk","kk","lk","__reactInternalSnapshotBeforeUpdate","src","Wk","mk","ceil","nk","ok","pk","Y","Z","qk","rk","sk","tk","uk","Infinity","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","Ek","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","Pk","finishedWork","finishedLanes","Qk","timeoutHandle","Rk","Sk","Tk","Uk","Vk","mutableReadLanes","Bc","Pj","onCommitFiberRoot","mc","onRecoverableError","Xk","onPostCommitFiberRoot","Yk","Zk","al","isReactComponent","pendingChildren","bl","mutableSourceEagerHydrationData","cl","pendingSuspenseBoundaries","dl","fl","gl","hl","il","jl","zj","$k","ll","reportError","ml","_internalRoot","nl","ol","pl","ql","sl","rl","unmount","unstable_scheduleHydration","querySelectorAll","form","tl","usingClientEntryPoint","Events","ul","findFiberByHostInstance","bundleType","rendererPackageName","vl","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","wl","isDisabled","supportsFiber","inject","createPortal","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","hasElementType","Element","hasMap","hasSet","hasArrayBuffer","equal","it","entries","__self","__source","Fragment","jsx","jsxs","setState","forceUpdate","_status","_result","default","Children","count","only","Profiler","PureComponent","StrictMode","Suspense","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","createCommonjsModule","global","self","deepmerge","root","factory","commonjsGlobal","isMergeableObject","emptyTarget","cloneIfNecessary","optionsArgument","clone","defaultArrayMerge","destination","mergeObject","array","arrayMerge","prev","mitt","on","off","emit","evt","namespaces_1","namespaces","svg","uri","xlink","objectToAttrsString","attrs","attr","defaultAttrs","wrapInSvgString","attributes","svg$1","xlink$1","Sprite","symbols","symbol","existing","find","stringifiedSymbols","SpriteSymbol","viewBox","this$1","hasImportNode","importNode","doc","DOMParser","parseFromString","BrowserSpriteSymbol","SpriteSymbol$$1","__proto__","prototypeAccessors","createFromExistingNode","getAttribute","outerHTML","mount","mountTarget","querySelector","childNodes","defaultConfig$1","autoConfigure","mountTo","syncUrlsWithBaseTag","listenLocationChangeEvent","locationChangeEvent","locationChangeAngularEmitter","usagesToUpdate","moveGradientsOutsideSymbol","arrayFrom","arrayLike","browser","isChrome","isFirefox","isIE","isEdge","createEvent","initCustomEvent","evalStylesIEWorkaround","updatedNodes","getUrlWithoutFragment","eventName","angular","run","$rootScope","$on","newUrl","oldUrl","defaultSelector","selector","selectAttributes","nodes","matcher","acc","arrayfied","matched","xLinkNS","xLinkAttrName","specialUrlCharsPattern","escapeRegExp","updateReferences","startsWith","replaceWith","attList","attSelector","updateUrls","references","startsWithEncoded","replaceWithEncoded","localName","MOUNT","SYMBOL_MOUNT","Sprite$$1","BrowserSprite","cfg","emitter","_emitter","_autoConfigure","baseUrl","getElementsByTagName","handleLocationChange","_handleLocationChange","spriteNode","symbolNode","sprite","isNewSymbol","attach","prepend","mountNode","usages","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","definition","o","globalThis","Function","canUseDOM","canUseEventListeners","animationEvent","supported","transitionEvent","AnimationEvent","WebKitAnimationEvent","TransitionEvent","WebKitTransitionEvent","noop","isSupported","scrollTo","behavior","detectSmoothScrollSupport","_typeof","_toPropertyKey","arg","hint","prim","toPrimitive","res","_defineProperty","writable","querystring","query","matches","skipNull","arrayItem","_classCallCheck","Constructor","_defineProperties","descriptor","_createClass","protoProps","staticProps","detectIOS","isIPadOS","notIOS","standalone","checkIPadOS","isIPad","isIPhone","isIOS","iosVersion","iosMajor","iosMinor","isScrollBasedViewport","isWKWebView","lte9","HTMLElement","idb","indexedDB","statusbar","visible","checkWKWebView","isIPhoneX","screen","devicePixelRatio","isIOSChrome","hasMouse","hasHover","maxTouchPoints","notMobile","matchMedia","ElementProto","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","closest","css","parentElement","_extends","_arrayLikeToArray","len","arr2","_unsupportedIterableToArray","minLen","_slicedToArray","_s","_e","_x","_r","_arr","_n","_d","_objectWithoutProperties","excluded","sourceKeys","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","searchElement","fromIndex","max","abs","list","padStart","targetLength","padString","classScopingMode","_noConflict","_isSet","noConflict","hasTransformable","noConflictCache","legacyCache","prefixSingle","scopedStyle","prefixed","resolved","processProps","newProps","vkuiClass","className","prefixClass","createScopedElement","_type","React","argsLength","createElementArgArray","classNames","classNamesString","System","isTesting","__isVkuiTesting","Platform","memoized","PLATFORM_ALIAS","desktop_web","VKCOM","platformByQueryString","queryString","platformAliasByQuery","getPlatformByQueryString","ANDROID","IOS","platform","browserInfo","systemVersion","system","UNKNOWN","major","minor","computeBrowserInfo","object","enumerableOnly","sym","_objectSpread2","getOwnPropertyDescriptors","coordX","coordY","touchEnabled","getSupportedEvents","rubber","dimension","resistanceRate","isAndroid","offsettedResistance","DOMContext","useDOM","withDOM","dom","blurActiveElement","blur","hasReactNode","isPrimitiveReactNode","setRef","useExternRef","externRefs","stableRef","useIsomorphicLayoutEffect","useEventListener","_cb","_options","cbRef","detach","Touch","onStart","onStartX","onStartY","_onMove","onMove","onMoveX","onMoveY","onLeave","onEnter","_onEnd","onEnd","onEndX","onEndY","onClickCapture","usePointerHover","slideThreshold","useCapture","getRootRef","noSlideClick","restProps","events","didSlide","gesture","handle","duration","_gesture$current","startT","_gesture$current$star2","getTime","originalEvent","enterHandler","leaveHandler","startHandler","startX","startY","isPressed","isY","isX","isSlideX","isSlideY","isSlide","shiftX","shiftY","shiftXAbs","shiftYAbs","containerRef","listenerParams","willBeX","willBeY","willBeSlidedX","willBeSlidedY","_gesture$current3","onDragStart","WebviewType","ConfigProviderContext","webviewType","VKAPPS","vkBridge","transitionMotionEnabled","hasNewTokens","clamp","Scheme","Appearance","clearDisableScrollStyle","right","overflowY","overflowX","ScrollContext","getScroll","isScrollLock","enableScrollLock","disableScrollLock","useScroll","GlobalScrollController","setScrollLock","beforeScrollLockFnSetRef","pageXOffset","pageYOffset","scrollWidth","innerWidth","scrollHeight","innerHeight","scrollY","scrollX","clientWidth","clientHeight","scrollController","ElementScrollController","elRef","_elRef$current","_elRef$current2","useScrollLock","enabled","SplitColContext","colRef","animate","SplitCol","maxWidth","minWidth","spaced","fixed","baseRef","fixedInnerRef","contextValue","effect","destructorRef","effectCallback","beforeSet","useScrollLockEffect","fixedInner","offsetTop","AppRootContext","portalRoot","warnOnce","zone","didWarn","getScheme","appearance","VKCOM_DARK","SPACE_GRAY","VKCOM_LIGHT","BRIGHT_LIGHT","AppearanceProviderContext","LIGHT","SSRContext","usePlatform","ssrContext","generateVKUITokensClassName","tokensPlatform","AppearanceProvider","scheme","AppRootPortal","forcePortal","disablePortal","useObjectMemo","o1","o2","every","TransitionContext","entering","NavTransitionProvider","getNavId","nav","useWaitTransitionFinish","timeoutRef","waitTransitionFinish","eventHandler","durationFallback","hidden","useTimeout","clear","usePrevious","SwipeBackResults","SizeType","ViewWidth","ViewHeight","scrollsCache","View","popout","modal","activePanelProp","activePanel","history","onTransition","onSwipeBack","onSwipeBackStart","onSwipeBackCancelProp","onSwipeBackCancel","scrolls","afterTransition","panelNodes","scroll","configProvider","splitCol","animated","setAnimated","visiblePanels","setVisiblePanels","setActivePanel","isBack","setIsBack","prevPanel","setPrevPanel","nextPanel","setNextPanel","swipingBack","setSwipingBack","swipeBackStartX","setSwipeBackStartX","swipeBackShift","setSwipeBackShift","swipeBackNextPanel","setSwipeBackNextPanel","swipeBackPrevPanel","setSwipeBackPrevPanel","swipeBackResult","setSwipeBackResult","browserSwipe","setBrowserSwipe","prevActivePanel","prevSwipingBack","prevBrowserSwipe","prevSwipeBackResult","prevSwipeBackPrevPanel","prevOnTransition","hasPopout","hasModal","panels","panel","panelId","disableAnimation","pickPanel","flushTransition","isBackTransition","to","transitionEndHandler","animationFinishTimeout","onSwipeBackSuccess","swipingBackTransitionEndHandler","fail","success","speed","calcPanelSwipeStyles","isPrev","isNext","prevPanelTranslate","nextPanelTranslate","prevPanelShadow","boxShadow","transform","WebkitTransform","_target$closest","swipeBackExcluded","isTransitionTarget","compensateScroll","onAnimationEnd","marginTop","TooltipContainer","AdaptivityContext","sizeX","COMPACT","sizeY","REGULAR","deviceHasHover","viewWidth","viewHeight","withAdaptivity","TargetComponent","update","adaptivityProps","Panel","centered","getClassName","osname","useGlobalEventListener","FixedLayout","vertical","getRef","filled","setWidth","doResize","offsetWidth","Separator","wide","expanded","role","useAdaptivity","useAdaptivityIsDesktop","SMALL_TABLET","MEDIUM","Text","weight","ModalRootContext","updateModalHeight","registerModal","isInsideModal","Spacing","separator","styles","PanelHeaderIn","before","after","INTERNAL","PanelHeader","propsBefore","propsAfter","visor","transparent","shadow","needShadow","isFixed","innerProps","PopoutRootComponent","isDesktop","PopoutRoot","SplitLayout","header","getItemsLayout","itemsLayout","Tabbar","Caption","level","caps","Headline","Counter","CounterTypography","_toConsumableArray","iter","Keys","ACCESSIBLE_KEYS","ENTER","SPACE","TAB","ESCAPE","pressedKey","FocusVisible","useFocusVisible","isFocused","setIsFocused","focusVisible","keyboardInput","onFocus","onBlur","callMultiple","activeBus","TapState","TappableContext","onHoverChange","Tappable","_onKeyDown","onKeyDown","activeEffectDelay","_hasHover","hoverMode","hasActive","_hasActive","activeMode","focusVisibleMode","insideTouchRoot","TouchRootContext","clicks","setClicks","childHover","setChildHover","setTrue","setFalse","toggle","useBooleanState","_hovered","setHoveredTrue","setHoveredFalse","hovered","isCustomElement","isPresetHoverMode","isPresetActiveMode","isPresetFocusVisibleMode","stopDelay","round","activity","setActivity","_stop","activeTimeout","stopTimeout","onActiveChange","activeId","delayStart","stop","useActivity","active","childContext","needWaves","clearClicks","classes","elem","box","getBoundingClientRect","offsetHeight","getOffsetRect","dateNow","filteredClicks","click","addClick","activeDuration","isValidKeyboardEventTarget","isContentEditable","isNativeAnchorEl","hasAttribute","keyPressed","shouldTriggerClickOnEnterOrSpace","tabIndex","wave","Footnote","TabbarItem","label","indicator","_objectWithoutPropertiesLoose","browserSprite","IconSettingsContext","IconSettingsProvider","_param","settings","classPrefix","globalClasses","spriteId","getElementById","_objectSpread","ownKeys","_objectSpreadProps","svgStyle","SvgIcon","_className","_style","fill","_Component","ariaLabel","ariaHidden","iconSettings","ownClass","fragments","iconClass","makeIcon","componentName","mountIcon","BrowserSymbol","Icon","HorizontalScrollArrow","ArrowIcon","direction","Icon16ChevronLeft","Icon16Chevron","Icon24ChevronCompactLeft","Icon24Chevron","roundUpElementScrollLeft","doScroll","scrollElement","getScrollPosition","animationQueue","onScrollToRightBorder","onScrollEnd","onScrollStart","initialScrollWidth","scrollAnimationDuration","maxLeft","startLeft","endLeft","elapsed","cos","PI","currentLeft","requestAnimationFrame","HorizontalScroll","getScrollToLeft","getScrollToRight","showArrows","arrowSize","canScrollLeft","setCanScrollLeft","canScrollRight","setCanScrollRight","isCustomScrollingRef","scrollerRef","firstElementChild","scrollToLeft","scrollToRight","onscroll","scrollEvent","PopoutWrapper","alignY","alignX","closing","hasMask","opened","setOpened","onFadeInEnd","animationFinishFallback","Title","Subhead","Spinner","SpinnerIcon","small","Icon16Spinner","regular","Icon24Spinner","medium","Icon32Spinner","large","Icon44Spinner","ButtonTypography","isCompact","Button","stretched","align","loading","hasIcons","hasIconOnly","resolvedAppearance","resolvedMode","resolveButtonAppearance","ModalDismissButton","Icon20Cancel","FOCUSABLE_ELEMENTS","FocusTrap","onClose","restoreFocus","focusableNodes","setFocusableNodes","restoreFocusTo","setRestoreFocusTo","focusOnTrapMount","_ref$current","focusableEl","getComputedStyle","visibility","focusOnTrapUnmount","lastIdx","targetIdx","findIndex","shouldFocusFirstNode","AlertHeader","AlertText","AlertAction","onItemClick","handleItemClick","title","DESKTOP","Alert","actions","actionsLayout","dismissLabel","setClosing","elementRef","resolvedActionsLayout","canShowCloseButton","close","autoclose","useEffectDev","isRefObject","refObject","getWindow","isElement","isHTMLElement","isShadowRoot","ShadowRoot","getUAString","uaData","userAgentData","brands","brand","isLayoutViewport","includeScale","isFixedStrategy","clientRect","scaleX","scaleY","visualViewport","addVisualOffsets","offsetLeft","bottom","getWindowScroll","win","getNodeName","getDocumentElement","getWindowScrollBarX","isScrollParent","_getComputedStyle","getCompositeRect","elementOrVirtualElement","offsetParent","isOffsetParentAnElement","offsetParentIsScaled","rect","isElementScaled","offsets","getNodeScroll","clientLeft","clientTop","getLayoutRect","getParentNode","assignedSlot","getScrollParent","listScrollParents","_element$ownerDocumen","scrollParent","isBody","updatedList","isTableElement","getTrueOffsetParent","getOffsetParent","currentNode","perspective","contain","willChange","getContainingBlock","auto","basePlacements","viewport","popper","variationPlacements","placement","placements","modifierPhases","modifiers","visited","sort","modifier","requires","requiresIfExists","dep","depModifier","debounce","DEFAULT_OPTIONS","strategy","areValidElements","_len","_key","some","popperGenerator","generatorOptions","_generatorOptions","_generatorOptions$def","defaultModifiers","_generatorOptions$def2","defaultOptions","reference","orderedModifiers","modifiersData","elements","effectCleanupFns","isDestroyed","setOptions","setOptionsAction","cleanupModifierEffects","scrollParents","contextElement","phase","orderModifiers","mergeByName","_ref3","_ref3$options","cleanupFn","noopFn","_state$elements","rects","reset","_state$orderedModifie","_state$orderedModifie2","onFirstUpdate","_ref","_options$scroll","_options$resize","resize","getBasePlacement","getVariation","getMainAxisFromPlacement","computeOffsets","basePlacement","variation","commonX","commonY","mainAxis","unsetSides","mapToStyles","_ref2","_Object$assign2","popperRect","gpuAcceleration","adaptive","roundOffsets","_offsets$x","_offsets$y","hasX","hasY","sideX","sideY","heightProp","widthProp","_Object$assign","commonStyles","_ref4","dpr","roundOffsetsByDPR","_ref5","_options$gpuAccelerat","_options$adaptive","_options$roundOffsets","popperOffsets","arrow","_options$offset","invertDistance","skidding","distance","distanceAndSkiddingToXY","_data$state$placement","getOppositePlacement","getOppositeVariationPlacement","rootNode","getRootNode","isSameNode","rectToClientRect","getClientRectFromMixedType","clippingParent","html","layoutViewport","getViewportRect","getInnerBoundingClientRect","winScroll","getDocumentRect","getClippingRect","boundary","rootBoundary","mainClippingParents","clippingParents","clipperElement","getClippingParents","firstClippingParent","clippingRect","accRect","mergePaddingObject","paddingObject","expandToHashMap","hashMap","detectOverflow","_options$placement","_options$strategy","_options$boundary","_options$rootBoundary","_options$elementConte","elementContext","_options$altBoundary","altBoundary","_options$padding","padding","altContext","clippingClientRect","referenceClientRect","popperClientRect","elementClientRect","overflowOffsets","offsetData","multiply","axis","_skip","_options$mainAxis","checkMainAxis","_options$altAxis","altAxis","checkAltAxis","specifiedFallbackPlacements","fallbackPlacements","_options$flipVariatio","flipVariations","allowedAutoPlacements","preferredPlacement","oppositePlacement","getExpandedFallbackPlacements","_options$allowedAutoP","allPlacements","allowedPlacements","overflows","computeAutoPlacement","referenceRect","checksMap","makeFallbackChecks","firstFittingPlacement","_basePlacement","isStartVariation","isVertical","mainVariationSide","altVariationSide","checks","check","_loop","fittingPlacement","within","mathMax","mathMin","_options$tether","tether","_options$tetherOffset","tetherOffset","isBasePlacement","tetherOffsetValue","normalizedTetherOffsetValue","offsetModifierState","_offsetModifierState$","mainSide","altSide","additive","maxLen","arrowElement","arrowRect","arrowPaddingObject","arrowPaddingMin","arrowPaddingMax","arrowLen","minOffset","maxOffset","arrowOffsetParent","clientOffset","offsetModifierValue","tetherMax","preventedOffset","_offsetModifierState$2","_mainSide","_altSide","_offset","_min","_max","isOriginSide","_offsetModifierValue","_tetherMin","_tetherMax","_preventedOffset","withinMaxClamp","_state$modifiersData$","toPaddingObject","minProp","maxProp","endDiff","startDiff","clientSize","centerToReference","center","axisProp","centerOffset","_options$element","getSideOffsets","preventedOffsets","isAnySideFullyClipped","side","createPopper","eventListeners","computeStyles","initialStyles","margin","property","attribute","flip","preventOverflow","referenceOverflow","popperAltOverflow","referenceClippingOffsets","popperEscapeOffsets","isReferenceHidden","hasPopperEscaped","fromEntries","EMPTY_MODIFIERS","PopperArrow","arrowClassName","xmlns","fillRule","clipRule","preventOverflowModifier","flipModifier","arrowModifier","sameWidthModifier","Popper","targetRef","onPlacementChange","sameWidth","offsetDistance","offsetSkidding","compStyles","customModifiers","renderContent","popperNode","setPopperNode","smallTargetOffsetSkidding","setSmallTargetOffsetSkidding","setExternalRef","referenceElement","popperElement","prevOptions","optionsWithDefaults","_React$useState","updateStateModifier","ReactDOM","popperOptions","newOptions","isEqual","popperInstanceRef","popperInstance","defaultCreatePopper","usePopper","resolvedPlacement","isEdgePlacement","placementDirection","_targetRef$current","_targetRef$current2","dropdown","_targetRef$current3","ActionSheetDropdownDesktop","toggleRef","popupDirection","isPopupDirectionTop","bodyClickListener","dropdownElement","ActionSheetDropdown","ActionSheetContext","ActionSheet","iosCloseItem","_action","fallbackTransitionFinish","immediateAction","DropdownComponent","actionSheet","ActionSheetItem","subtitle","selectable","onChange","onImmediateClick","multiline","isRich","isCentered","Icon24CheckCircleOn","ActionSheetDefaultIosCloseItem","Icon48DoneOutline","stroke","strokeLinecap","strokeLinejoin","Icon48CancelCircle","ScreenSpinner","hideSpinner","Icon24Cancel","Paragraph","SnackbarComponent","layout","onActionClick","touched","setTouched","shiftXPercentRef","shiftXCurrentRef","bodyElRef","innerElRef","animationFrameRef","transitionFinishDurationFallback","closeTimeout","setBodyTransform","percent","cancelAnimationFrame","onTouchStart","_bodyElRef$current","shiftXCurrent","ModalType","Snackbar","_assertThisInitialized","ReferenceError","_setPrototypeOf","setPrototypeOf","_inherits","subClass","superClass","_getPrototypeOf","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","sham","Proxy","Super","NewTarget","withPlatform","withContext","Ctx","getModals","modalTransitionReducer","activeModal","nextModal","prevModal","exitingModal","enteringModal","useModalManager","onOpen","onOpened","onClosed","initModal","modalsState","Modal","modalProps","dynamicContentHeight","settlingHeight","isMissing","safeActiveModal","transitionState","dispatchTransition","isCard","CARD","onEntered","modalState","onExited","delayEnter","getModalState","onExit","withModalManager","Wrapped","transitionManager","numberInRange","rangeTranslate","ModalRootTouchComponent","_this","animateTranslate","translateY","PAGE","checkPageContentHeight","onPageTouchMove","onCardTouchMove","onPageTouchEnd","onCardTouchEnd","contentElement","_modalState$contentEl","contentScrolled","contentScrollStopTimeout","touchDown","dragging","maskElementRef","modalRootContext","frameIds","updateModalTranslate","toggleDocumentScrolling","prevProps","closeModal","enteringState","innerElement","transitionDelay","_this2","documentScrolling","preventTouch","modalElement","prevModalState","initPageModal","currentModalState","needAnimate","expandable","translateYFrom","nextModalState","nextIsPage","prevIsPage","_this3","exitTranslate","setMaskOpacity","_modalState$innerElem","collapsed","touchStartContentScrollTop","_modalState$contentEl3","touchMovePositive","headerElement","_modalState$headerEle","shiftYPercent","shiftYCurrent","touchShiftYPercent","translateYCurrent","viewportRef","_this$viewportRef$cur","_modalState$innerElem2","setStateCallback","shiftYEndPercent","expandedRange","_modalState$expandedR2","collapsedRange","hiddenRange","_this4","expectTranslateY","_this5","onceHandler","webkitTransform","forceOpacity","maskAnimationFrame","_this6","onTouchMove","onTouchEnd","onScroll","modalId","_modalState","_this7","isPage","ModalRootTouch","initCardModal","contentHeight","prevTranslateY","shiftHalf","visiblePart","_modalState$headerEle3","_modalState$innerElem6","_modalState$innerElem7","ModalRootDesktopComponent","animateModalOpacity","_this$props$document","modals","ModalRootDesktop","ModalRootComponent","ModalRoot","primary","PanelHeaderButton","isPrimitive","isPrimitiveLabel","eventOptions","ModalCardBase","icon","subheader","isSoftwareKeyboardOpened","isOpened","setIsOpened","_document$activeEleme3","useKeyboard","canShowCloseBtn","canShowCloseBtnIos","Icon24Dismiss","ModalCard","modalContext","useModalRegistry","IconButton","Card","HeaderContent","Header","aside","AsideTypography","SubtitleTypography","Group","computedMode","separatorElement","separatorClassName","ListContext","toggleDrag","List","isDragging","SimpleCellTypography","SimpleCell","badge","hasAfter","RemovableIos","onRemove","removePlaceholder","removePlaceholderString","removeButtonRef","disabledRef","removeOffset","updateRemoveOffset","onTransitionEnd","Removable","onRemoveClick","getTitleFromChildren","CellDragger","onDragMove","onDragEnd","Icon24ReorderIos","Icon24Reorder","CellCheckbox","IconOff","Icon24CheckBoxOff","Icon24CheckCircleOff","IconOn","Icon24CheckBoxOn","Cell","propsMode","onDragFinish","deprecatedRemovable","removable","draggable","deprecatedSelectable","draggerLabel","dragger","checkbox","rootElRef","setDragging","siblings","setSiblings","dragStartIndex","setDragStartIndex","dragEndIndex","setDragEndIndex","dragShift","setDragShift","dragDirection","setDragDirection","rootEl","_siblings","_rootEl$parentElement","idx","rootGesture","siblingIndex","siblingGesture","siblingHalfHeight","rootOverSibling","rootUnderSibling","useDraggable","draggableProps","simpleCellDisabled","cellClasses","simpleCell","RichCell","subhead","caption","afterCaption","Avatar","alt","crossOrigin","decoding","referrerPolicy","sizes","srcSet","useMap","overlayIcon","overlayMode","passedOverlayAction","overlayAction","failedImage","setFailedImage","borderRadius","hasSrc","onLoad","Icon12Circle","Icon12OnlineMobile","TabsModeContext","withGaps","Tabs","TabsItem","statusComponent","Link","hasVisited","FormLayout","onSubmit","FormItem","wrappedChildren","VisuallyHiddenInput","Switch","File","controlSize","FormFieldMode","FormField","hover","setHover","onMouseEnter","onMouseLeave","Input","RadioIcon","cx","cy","Radio","RadioTypography","Checkbox","indeterminate","defaultIndeterminate","inputRef","indeterminateValue","handleChange","Icon20CheckBoxOn","Icon20CheckBoxOff","Icon20CheckBoxIndetermanate","Div","PanelHeaderBack","showLabel","Icon28ArrowLeftOutline","Icon28ChevronLeftOutline","Icon28ChevronBack","initialState","resolveInsets","insets","AppRoot","_mode","_embedded","embedded","noLegacyClasses","portalRootProp","isKeyboardInputActive","toggleKeyboardInput","enableKeyboardInput","handleKeydown","disableKeyboardInput","useKeyboardInputTracker","rootRef","setPortalRoot","setInsets","connectListener","useInsets","portal","classList","_rootRef$current","_rootRef$current2","inset","removeProperty","container","_rootRef$current3","ScrollController","appRoot","viewportWidth","viewportHeight","resolveAdaptivity","adaptivity","viewport_width","viewport_height","bridgeAdaptivity","isFinite","AdaptivityProvider","adaptivityRef","updateAdaptivity","setBridgeAdaptivity","bridgeListener","newBridgeAdaptivity","useBridgeAdaptivity","calculateAdaptivity","onResize","calculated","windowWidth","windowHeight","SMALL_MOBILE","SMALL","_hasMouse","TABLET","MOBILE","EXTRA_SMALL","LocaleProviderContext","ConfigProvider","parentLocale","parentConfig","normalizedScheme","DEPRECATED_CLIENT_LIGHT","DEPRECATED_CLIENT_DARK","normalizeScheme","realScheme","_scheme","inherit","resolvedScheme","setScheme","observer","MutationObserver","observe","attributeFilter","disconnect","useSchemeDetector","derivedAppearance","deriveAppearance","VKUITokensClassName","configContext","die","mockGlobal","getGlobal","getDescriptor","objectPrototype","EMPTY_ARRAY","freeze","EMPTY_OBJECT","hasProxy","plainObjectString","assertProxies","once","func","invoked","isStringish","proto","protoConstructor","isGenerator","addHiddenProp","propName","addHiddenFinalProp","createInstanceofPredicate","theClass","isES6Map","isES6Set","hasGetOwnPropertySymbols","hasProp","storedAnnotationsSymbol","createDecoratorAnnotation","annotation","storeAnnotation","annotationType_","OVERRIDE","isOverride","$mobx","Atom","name_","isPendingUnobservation_","isBeingObserved_","observers_","diffValue_","lastAccessedBy_","lowestObserverState_","IDerivationState_","NOT_TRACKING_","onBOL","onBUOL","_proto","onBO","onBUO","reportObserved","reportChanged","startBatch","propagateChanged","endBatch","isAtom","createAtom","onBecomeObservedHandler","onBecomeUnobservedHandler","arg3","atom","interceptHook","ON_BECOME_OBSERVED","onBecomeUnobserved","comparer","identity","structural","deepEqual","shallow","deepEnhancer","_","isObservable","observable","isAction","isFlow","flow","autoAction","referenceEnhancer","newValue","createActionAnnotation","options_","make_","extend_","adm","_this$options_","bound","target_","actionDescriptor","createActionDescriptor","proxyTrap","defineProperty_","safeDescriptors","globalState","_annotation$options_","proxy_","createAction","_annotation$options_2","_annotation$options_3","isPlainObject_","createFlowAnnotation","flowDescriptor","createFlowDescriptor","_this$options_2","isMobXFlow","createComputedAnnotation","assertComputedDescriptor","defineComputedProperty_","createObservableAnnotation","assertObservableDescriptor","defineObservableProperty_","enhancer","autoAnnotation","createAutoAnnotation","computed","autoBind","observableAnnotation","deep","_this$options_4","_this$options_5","defaultCreateObservableOptions","defaultDecorator","proxy","asCreateObservableOptions","observableRefAnnotation","observableShallowAnnotation","isObservableObject","isObservableArray","isObservableMap","isObservableSet","observableStructAnnotation","oldValue","observableDecoratorAnnotation","getEnhancerFromOptions","getEnhancerFromAnnotation","createObservable","arg2","observableFactories","ObservableValue","equals","initialValues","useProxies","createLegacyArray","createObservableArray","ObservableMap","ObservableSet","decorators","extendObservable","asObservableObject","_target$$mobx","objectProxyTraps","asDynamicObservableObject","struct","COMPUTED","computedAnnotation","computedStructAnnotation","arg1","ComputedValue","currentActionId","nextActionId","isFunctionNameConfigurable","_getDescriptor","tmpNameDescriptor","actionName","executeAction","isMobxAction","canRunAsDerivation","scope","runInfo","notifySpy_","startTime_","prevDerivation_","trackingDerivation","runAsAction","prevAllowStateChanges_","allowStateChanges","untrackedStart","allowStateChangesStart","prevAllowStateReads_","allowStateReadsStart","runAsAction_","actionId_","parentActionId_","_startAction","error_","suppressReactionErrors","allowStateChangesEnd","allowStateReadsEnd","untrackedEnd","_endAction","notifySpy","hasUnreportedChange_","interceptors_","changeListeners_","value_","dehancer","_inheritsLoose","dehanceValue","prepareNewValue_","UNCHANGED","setNewValue_","checkIfStateModificationsAreAllowed","hasInterceptors","change","interceptChange","UPDATE","hasListeners","notifyListeners","intercept_","registerInterceptor","observe_","fireImmediately","observableKind","debugObjectName","registerListener","raw","TraceMode","dependenciesState_","observing_","newObserving_","runId_","UP_TO_DATE_","unboundDepsCount_","CaughtException","triggeredBy_","isComputing_","isRunningSetter_","derivation","setter_","isTracing_","NONE","scope_","equals_","requiresReaction_","keepAlive_","compareStructural","requiresReaction","keepAlive","onBecomeStale_","POSSIBLY_STALE_","propagateMaybeChanged","inBatch","shouldCompute","prevTrackingContext","trackingContext","trackAndCompute","STALE_","propagateChangeConfirmed","warnAboutUntrackedRead_","computeValue_","isCaughtException","cause","wasSuspended","changed","trackDerivedFunction","disableErrorBoundaries","suspend_","clearObserving","firstTime","prevValue","autorun","prevU","isComputedValue","prevAllowStateReads","prevUntracked","obs","changeDependenciesStateTo0","runId","prevTracking","prevObserving","observing","lowestNewObservingDerivationState","i0","removeObserver","addObserver","bindDependencies","untracked","allowStateReads","MobXGlobals","mobxGuid","pendingUnobservations","pendingReactions","isRunningReactions","enforceActions","spyListeners","globalReactionErrorHandlers","computedRequiresReaction","reactionRequiresObservable","observableRequiresReaction","verifyProxies","canMergeGlobalState","isolateCalled","__mobxInstanceCount","__mobxGlobals","queueForUnobservation","runReactions","Reaction","onInvalidate_","errorHandler_","requiresObservable_","isDisposed_","isScheduled_","isTrackPending_","isRunning_","schedule_","isScheduled","runReaction_","reportExceptionInDerivation_","prevReaction","dispose","getDisposer_","trace","enterBreakPoint","getAtomFromArgs","BREAK","LOG","reactionScheduler","runReactionsHelper","allReactions","iterations","remainingReactions","isReaction","ACTION","AUTOACTION","DEFAULT_ACTION_NAME","actionAnnotation","actionBoundAnnotation","autoActionAnnotation","autoActionBoundAnnotation","createActionFactory","reaction","_opts","scheduler","reactionRunner","requiresObservable","createSchedulerFromOptions","hook","getAtom","listenersKey","hookListeners","ALWAYS","configure","isolateGlobalState","baseScheduler","setReactionScheduler","properties","annotations","getDependencyTree","nodeToDependencyTree","generatorId","FlowCancellationError","flowAnnotation","flowBoundAnnotation","generator","rejector","ctx","gen","pendingPromise","stepId","ret","cancelPromise","yieldedPromise","_isObservable","values_","transaction","getAdm","has_","get_","set_","deleteProperty","delete_","ownKeys_","preventExtensions","interceptable","listenable","keysSymbol","makeAutoObservable","overrides","SPLICE","arrayTraps","getArrayLength_","arrayExtensions","setArrayLength_","ObservableArrayAdministration","owned_","legacyMode_","atom_","enhancer_","lastKnownLength_","newV","oldV","dehanceValue_","dehanceValues_","values","added","addedCount","removed","removedCount","newLength","currentLength","newItems","spliceWithArray_","updateArrayLength_","oldLength","delta","reserveArrayBuffer","deleteCount","lengthDelta","spliceItemsIntoValues_","notifyArraySplice_","oldItems","notifyArrayChildUpdate_","notify","owned","spliceWithArray","items","reverse","copy","addArrayExtension","funcName","funcFactory","simpleFunc","dehancedValues","mapLikeFunc","reduceLikeFunc","accumulator","currentValue","isObservableArrayAdministration","ObservableMapMarker","ADD","DELETE","toStringTag","initialData","data_","hasMap_","keysAtom_","entry","newEntry","hasKey","updateValue_","addValue_","makeIterable","other","getPlainObjectKeys","replacementMap","dataStructure","convertToMap","orderedData","keysReportChangedCalled","keyExisted","iter1","iter2","next1","next2","ObservableSetMarker","callbackFn","nextIndex","observableValues","descriptorCache","REMOVE","ObservableObjectAdministration","defaultAnnotation_","appliedAnnotations_","pendingKeys_","getObservablePropValue_","setObservablePropValue_","assertAnnotable","_this$target_$storedA","outcome","recordAnnotationApplied","deleteOutcome","notifyPropertyAddition_","cachedDescriptor","getCachedObservablePropDescriptor","keys_","getAnnotationFromOptions","isObservableObjectAdministration","_adm$target_$storedAn","ctor","OBSERVABLE_ARRAY_BUFFER_SIZE","StubArray","LegacyObservableArray","arrays","createArrayBufferItem","createArrayEntryDescriptor","getDebugName","getAdministration","named","routes","popouts","memes","ratings","admins","load","reports","depth","eq","aStack","bStack","unwrap","areArrays","aCtor","bCtor","getSelf","_regeneratorRuntime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","Context","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","record","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","info","resultName","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","isGeneratorFunction","genFun","mark","awrap","async","skipTempReset","rootRecord","rval","exception","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","asyncGeneratorStep","_next","_throw","_asyncToGenerator","__MOBX_DEVTOOLS_GLOBAL_HOOK__","injectMobx","spy","extras","User","_user","_nickname","_useNickname","_notification","_subscribe","_memes","_ban","_member","user","nickname","useNickname","ban","member","Actions","er","State","LOADING","reload","sendRequest","ban_comments","stories","URLSearchParams","HOME","vk_ref","vk_profile_id","vk_user_id","MY","getDataUserProfile","USERMEMES","USER","USERPROFILE","pushState","INTROFIRST","admin","interstitial","subscribes","notifyToSubscribe","subscribeOffer","rewarded","route","memeId","meme","comment","responseComments","userSubscribe","group_id","ad_format","ALERT","_tab","_admin","_popout","_file","_uploadState","INPUT","_timer","_reward","_memesIteration","_loadingMemes","LAZY","_category","TIME","_memeOpen","_comments","_history","_historyPopouts","_activePanel","_ratingUsers","_ratingCategory","TOP_ALL","_moderation","_swipe","_stories","_snackbar","_activeModal","_reportMeme","_reportComment","_platform","_reportInfo","_userProfile","_loading","_interstitial","_interstitialADTimer","_INTERSTITIAL_AD_DELAY","_adminCategory","MEMES","_commentsStrikes","_usersStrikes","_activeSubscribesAlert","_devUsersID","_rewardedButton","_lauchParamsData","amplitude","goToPage","RATING","MYPROFILE","getInterstitialADTimer","startInterstitialADTimer","lauchParamsData","COMMENTS","newPanel","setMemeOpen","REPORT","REPORTINFO","RULES","file","timer","setInterval","runInAction","reward","_boolOpinions","newArray","opinion","likes","share","comments","allowArrayLike","normalCompletion","didErr","step","_e2","users","swipe","snackbar","getInterstitial","category","collectStoredAnnotations","defaultNoopBatch","printDebugValue","FinalizationRegistryLocal","FinalizationRegistry","createTrackingData","mounted","changedBeforeMount","cleanAt","CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS","FinalizationRegistryMaybeUndefined","cleanupTokenToReactionTrackingMap","globalCleanupTokensCounter","registry","trackedReaction","addReactionToTrack","reactionTrackingRef","objectRetainedByReact","register","finalizationRegistryCleanupToken","recordReactionAsCommitted","reactionRef","unregister","forceCleanupTimerToRunNowForTests","resetCleanupScheduleForTests","createReactionCleanupTrackingUsingFinalizationRegister","reactionCleanupHandle","uncommittedReactionRefs","ensureCleanupTimerRunning","cleanUncommittedReactions","tracking","uncommittedReactionRefs_1_1","createTimerBasedReactionCleanupTracking","globalIsUsingStaticRendering","isUsingStaticRendering","observerComponentNameFor","baseComponentName","objectToBeRetainedByReactFactory","ObjectToBeRetainedByReact","useObserver","newReaction","trackingData_1","hasSymbol","ReactForwardRefSymbol","ReactMemoSymbol","baseComponent","useForwardRef","observerComponent","hoistBlackList","ObserverComponent","component","observerBatching","batch","ReportInfoType","Session","_memesNotif","marginBottom","cursor","ReportInfo","marginLeft","reportsCount","cur","More","refMore","onDelete","deleteAlert","onReport","user_id","moderation","decision","owner_id","from_group","attachments","close_comments","access_token","wall","post_id","StatusBlock","alignItems","justifyContent","toWall","vk_url","background_type","attachment","toStories","MemeButtons","like","onShareClick","refShare","Meme","onProfileClick","avatar","whiteSpace","textOverflow","strikes","Comment","isExpanded","setIsExpanded","textLength","offsetMs","getTimezoneOffset","msLocal","isoLocal","replaceAll","dateToISOLikeButLocal","onMoreClick","gap","textAlign","flexBasis","wordBreak","reg","CommentForm","setComment","valid","setValid","placeholder","CommentsBlock","reportInfo","reportComment","backgroundColor","onClickContent","loadMemes","more","END","obj1","obj2","bounds","targetPosition","windowPosition","lazyLoad","ReportComments","ReportUser","ReportUsers","prepareRating","USERS","Memes","CategoriesAdmin","back","TOP_WEEK","TOP_DAY","FAVORITE","Home","CategoriesMenu","Analytics","_token","_server","_session","_localID","_id","server","_getLocalUserID","_request","session","toLocaleLowerCase","amount","fetch","json","_isLocalStorageAvailable","localStorage","getItem","_random","setItem","removeItem","IntroFirst","INTROSECOND","setChecked","setNickname","setChange","photo_200","save","first_name","finally","AlertFile","handleSelectedFile","files","BUTTONS","sendMem","ERROR","FINISH","hours","minutes","seconds","AlertAds","showRewarded","marginRight","accept","slides","media","blob","guideFirst","guideSecond","MyProfile","Upload","Subscribe","Nickname","CategoriesRating","RatingListItem","points","place","RatingList","RatingInfoBlock","Rating","Rules","IntroSecond","BanSwitcher","UserHeader","flexDirection","top_week","textDecoration","fontSize","top_all","UserInfo","UserProfile","paddingRight","UserMemes","ViewCustom","isFirst","handleSwipeBackStart","handleSwipeBack","Loading","Admin","reportsArr","SPAM","VIOLENCE","SCAM","FORBIDDEN","PORNO","reportSucces","report","spam","violence","scam","forbidden","porno","platformText","vk_platform","status_bar_style","action_bar_color"],"sourceRoot":""}